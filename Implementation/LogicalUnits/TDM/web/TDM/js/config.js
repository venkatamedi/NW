function config($stateProvider,$urlRouterProvider,$ocLazyLoadProvider,$translateProvider,RestangularProvider,toastrConfig,BE_BASE_URL,USER_ROLES){$ocLazyLoadProvider.config({debug:!1}),$stateProvider.state("environments",{url:"/environments",templateUrl:"views/environments/environments.html",data:{pageTitle:"Environments",authorizedRoles:[USER_ROLES.admin,USER_ROLES.user]},resolve:{loadPlugin:function($ocLazyLoad){return $ocLazyLoad.load([{name:"angles",files:["js/plugins/chartJs/angles.js","js/plugins/chartJs/Chart.min.js"]},{name:"angular-peity",files:["js/plugins/peity/jquery.peity.min.js","js/plugins/peity/angular-peity.js"]},{serie:!0,name:"angular-flot",files:["js/plugins/flot/jquery.flot.js","js/plugins/flot/jquery.flot.time.js","js/plugins/flot/jquery.flot.tooltip.min.js","js/plugins/flot/jquery.flot.spline.js","js/plugins/flot/jquery.flot.resize.js","js/plugins/flot/jquery.flot.pie.js","js/plugins/flot/curvedLines.js","js/plugins/flot/angular-flot.js"]},{files:["js/plugins/sweetalert/sweetalert.min.js","css/plugins/sweetalert/sweetalert.css"]},{name:"oitozero.ngSweetAlert",files:["js/plugins/sweetalert/angular-sweetalert.min.js"]},{files:["js/plugins/jasny/jasny-bootstrap.min.js"]},{insertBefore:"#loadBefore",name:"localytics.directives",files:["css/plugins/chosen/bootstrap-chosen.css","js/plugins/chosen/chosen.jquery.js","js/plugins/chosen/chosen.js"]},{serie:!0,files:["js/plugins/dataTables/datatables.min.js","css/plugins/dataTables/datatables.min.css"]},{serie:!0,files:["js/plugins/dataTables/dataTables.responsive.min.js"]},{serie:!0,name:"datatables",files:["js/plugins/dataTables/angular-datatables.min.js"]},{serie:!0,name:"datatables.buttons",files:["js/plugins/dataTables/angular-datatables.buttons.min.js","js/plugins/dataTables/buttons.colvis.js"]},{serie:!0,name:"datatables.light-columnfilter",files:["js/plugins/dataTables/dataTables.lightColumnFilter.min.js","js/plugins/dataTables/angular-datatables.light-columnfilter.min.js"]},{name:"datePicker",files:["css/plugins/datapicker/angular-datapicker.css","js/plugins/datapicker/angular-datepicker.js","js/plugins/moment/min/moment.min.js"]},{files:["css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css"]}])}}}).state("systems",{url:"/systems",templateUrl:"views/products/products.html",data:{pageTitle:"Systems",authorizedRoles:[USER_ROLES.admin,USER_ROLES.user]},resolve:{loadPlugin:function($ocLazyLoad){return $ocLazyLoad.load([{name:"angles",files:["js/plugins/chartJs/angles.js","js/plugins/chartJs/Chart.min.js"]},{name:"angular-peity",files:["js/plugins/peity/jquery.peity.min.js","js/plugins/peity/angular-peity.js"]},{serie:!0,name:"angular-flot",files:["js/plugins/flot/jquery.flot.js","js/plugins/flot/jquery.flot.time.js","js/plugins/flot/jquery.flot.tooltip.min.js","js/plugins/flot/jquery.flot.spline.js","js/plugins/flot/jquery.flot.resize.js","js/plugins/flot/jquery.flot.pie.js","js/plugins/flot/curvedLines.js","js/plugins/flot/angular-flot.js"]},{files:["js/plugins/sweetalert/sweetalert.min.js","css/plugins/sweetalert/sweetalert.css"]},{name:"oitozero.ngSweetAlert",files:["js/plugins/sweetalert/angular-sweetalert.min.js"]},{files:["js/plugins/jasny/jasny-bootstrap.min.js"]},{insertBefore:"#loadBefore",name:"localytics.directives",files:["css/plugins/chosen/bootstrap-chosen.css","js/plugins/chosen/chosen.jquery.js","js/plugins/chosen/chosen.js"]},{serie:!0,files:["js/plugins/dataTables/datatables.min.js","css/plugins/dataTables/datatables.min.css"]},{serie:!0,files:["js/plugins/dataTables/dataTables.responsive.min.js"]},{serie:!0,name:"datatables",files:["js/plugins/dataTables/angular-datatables.min.js"]},{serie:!0,name:"datatables.buttons",files:["js/plugins/dataTables/angular-datatables.buttons.min.js","js/plugins/dataTables/buttons.colvis.js"]},{serie:!0,name:"datatables.light-columnfilter",files:["js/plugins/dataTables/dataTables.lightColumnFilter.min.js","js/plugins/dataTables/angular-datatables.light-columnfilter.min.js"]},{name:"datePicker",files:["css/plugins/datapicker/angular-datapicker.css","js/plugins/datapicker/angular-datepicker.js","js/plugins/moment/min/moment.min.js"]},{files:["css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css"]}])}}}).state("businessEntities",{url:"/businessEntities",templateUrl:"views/businessEntities/businessEntities.html",data:{pageTitle:"Business Entities",authorizedRoles:[USER_ROLES.admin,USER_ROLES.user]},resolve:{loadPlugin:function($ocLazyLoad){return $ocLazyLoad.load([{name:"angles",files:["js/plugins/chartJs/angles.js","js/plugins/chartJs/Chart.min.js"]},{name:"angular-peity",files:["js/plugins/peity/jquery.peity.min.js","js/plugins/peity/angular-peity.js"]},{serie:!0,name:"angular-flot",files:["js/plugins/flot/jquery.flot.js","js/plugins/flot/jquery.flot.time.js","js/plugins/flot/jquery.flot.tooltip.min.js","js/plugins/flot/jquery.flot.spline.js","js/plugins/flot/jquery.flot.resize.js","js/plugins/flot/jquery.flot.pie.js","js/plugins/flot/curvedLines.js","js/plugins/flot/angular-flot.js"]},{files:["js/plugins/sweetalert/sweetalert.min.js","css/plugins/sweetalert/sweetalert.css"]},{name:"oitozero.ngSweetAlert",files:["js/plugins/sweetalert/angular-sweetalert.min.js"]},{files:["js/plugins/jasny/jasny-bootstrap.min.js"]},{insertBefore:"#loadBefore",name:"localytics.directives",files:["css/plugins/chosen/bootstrap-chosen.css","js/plugins/chosen/chosen.jquery.js","js/plugins/chosen/chosen.js"]},{serie:!0,files:["js/plugins/dataTables/datatables.min.js","css/plugins/dataTables/datatables.min.css"]},{serie:!0,files:["js/plugins/dataTables/dataTables.responsive.min.js"]},{serie:!0,name:"datatables",files:["js/plugins/dataTables/angular-datatables.min.js"]},{serie:!0,name:"datatables.buttons",files:["js/plugins/dataTables/angular-datatables.buttons.min.js","js/plugins/dataTables/buttons.colvis.js"]},{serie:!0,name:"datatables.light-columnfilter",files:["js/plugins/dataTables/dataTables.lightColumnFilter.min.js","js/plugins/dataTables/angular-datatables.light-columnfilter.min.js"]},{name:"datePicker",files:["css/plugins/datapicker/angular-datapicker.css","js/plugins/datapicker/angular-datepicker.js","js/plugins/moment/min/moment.min.js"]},{files:["css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css"]}])}}}).state("tasks",{url:"/tasks",templateUrl:"views/tasks/tasks.html",data:{pageTitle:"Tasks",authorizedRoles:[USER_ROLES.admin,USER_ROLES.user]},resolve:{loadPlugin:function($ocLazyLoad){return $ocLazyLoad.load([{files:["css/plugins/steps/jquery.steps.css"]},{name:"angular-cron-jobs",files:["js/plugins/angular-cron-jobs/dist/angular-cron-jobs.css","js/plugins/angular-cron-jobs/dist/angular-cron-jobs.js"]},{name:"angles",files:["js/plugins/chartJs/angles.js","js/plugins/chartJs/Chart.min.js"]},{name:"angular-peity",files:["js/plugins/peity/jquery.peity.min.js","js/plugins/peity/angular-peity.js"]},{serie:!0,name:"angular-flot",files:["js/plugins/flot/jquery.flot.js","js/plugins/flot/jquery.flot.time.js","js/plugins/flot/jquery.flot.tooltip.min.js","js/plugins/flot/jquery.flot.spline.js","js/plugins/flot/jquery.flot.resize.js","js/plugins/flot/jquery.flot.pie.js","js/plugins/flot/curvedLines.js","js/plugins/flot/angular-flot.js"]},{files:["js/plugins/sweetalert/sweetalert.min.js","css/plugins/sweetalert/sweetalert.css"]},{name:"oitozero.ngSweetAlert",files:["js/plugins/sweetalert/angular-sweetalert.min.js"]},{files:["js/plugins/jasny/jasny-bootstrap.min.js"]},{insertBefore:"#loadBefore",name:"localytics.directives",files:["css/plugins/chosen/bootstrap-chosen.css","js/plugins/chosen/chosen.jquery.js","js/plugins/chosen/chosen.js"]},{serie:!0,files:["js/plugins/dataTables/datatables.min.js","css/plugins/dataTables/datatables.min.css"]},{serie:!0,files:["js/plugins/dataTables/dataTables.responsive.min.js"]},{serie:!0,name:"datatables",files:["js/plugins/dataTables/angular-datatables.min.js"]},{serie:!0,name:"datatables.buttons",files:["js/plugins/dataTables/angular-datatables.buttons.min.js","js/plugins/dataTables/buttons.colvis.js"]},{serie:!0,name:"datatables.light-columnfilter",files:["js/plugins/dataTables/dataTables.lightColumnFilter.min.js","js/plugins/dataTables/angular-datatables.light-columnfilter.min.js"]},{name:"datePicker",files:["css/plugins/datapicker/angular-datapicker.css","js/plugins/datapicker/angular-datepicker.js","js/plugins/moment/min/moment.min.js"]},{files:["css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css"]}])}}}).state("reservedEntities",{url:"/reservedEntities",templateUrl:"views/reservedEntities/reservedEntities.html",data:{pageTitle:"Reserved Entities",authorizedRoles:[USER_ROLES.admin]},resolve:{loadPlugin:function($ocLazyLoad){return $ocLazyLoad.load([{files:["css/plugins/steps/jquery.steps.css"]},{name:"angular-cron-jobs",files:["js/plugins/angular-cron-jobs/dist/angular-cron-jobs.css","js/plugins/angular-cron-jobs/dist/angular-cron-jobs.js"]},{name:"angles",files:["js/plugins/chartJs/angles.js","js/plugins/chartJs/Chart.min.js"]},{name:"angular-peity",files:["js/plugins/peity/jquery.peity.min.js","js/plugins/peity/angular-peity.js"]},{serie:!0,name:"angular-flot",files:["js/plugins/flot/jquery.flot.js","js/plugins/flot/jquery.flot.time.js","js/plugins/flot/jquery.flot.tooltip.min.js","js/plugins/flot/jquery.flot.spline.js","js/plugins/flot/jquery.flot.resize.js","js/plugins/flot/jquery.flot.pie.js","js/plugins/flot/curvedLines.js","js/plugins/flot/angular-flot.js"]},{files:["js/plugins/sweetalert/sweetalert.min.js","css/plugins/sweetalert/sweetalert.css"]},{name:"oitozero.ngSweetAlert",files:["js/plugins/sweetalert/angular-sweetalert.min.js"]},{files:["js/plugins/jasny/jasny-bootstrap.min.js"]},{insertBefore:"#loadBefore",name:"localytics.directives",files:["css/plugins/chosen/bootstrap-chosen.css","js/plugins/chosen/chosen.jquery.js","js/plugins/chosen/chosen.js"]},{serie:!0,files:["js/plugins/dataTables/datatables.min.js","css/plugins/dataTables/datatables.min.css"]},{serie:!0,files:["js/plugins/dataTables/dataTables.responsive.min.js"]},{serie:!0,name:"datatables",files:["js/plugins/dataTables/angular-datatables.min.js"]},{serie:!0,name:"datatables.buttons",files:["js/plugins/dataTables/angular-datatables.buttons.min.js","js/plugins/dataTables/buttons.colvis.js"]},{serie:!0,name:"datatables.light-columnfilter",files:["js/plugins/dataTables/dataTables.lightColumnFilter.min.js","js/plugins/dataTables/angular-datatables.light-columnfilter.min.js"]},{name:"datePicker",files:["css/plugins/datapicker/angular-datapicker.css","js/plugins/datapicker/angular-datepicker.js","js/plugins/moment/min/moment.min.js"]},{files:["css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css"]}])}}}).state("permissionGroups",{url:"/permissionGroups",templateUrl:"views/permissionGroups/permissionGroup.html",data:{pageTitle:"Permission Groups",authorizedRoles:[USER_ROLES.admin]},resolve:{loadPlugin:function($ocLazyLoad){return $ocLazyLoad.load([{files:["css/plugins/steps/jquery.steps.css"]},{name:"angular-cron-jobs",files:["js/plugins/angular-cron-jobs/dist/angular-cron-jobs.css","js/plugins/angular-cron-jobs/dist/angular-cron-jobs.js"]},{name:"angles",files:["js/plugins/chartJs/angles.js","js/plugins/chartJs/Chart.min.js"]},{name:"angular-peity",files:["js/plugins/peity/jquery.peity.min.js","js/plugins/peity/angular-peity.js"]},{serie:!0,name:"angular-flot",files:["js/plugins/flot/jquery.flot.js","js/plugins/flot/jquery.flot.time.js","js/plugins/flot/jquery.flot.tooltip.min.js","js/plugins/flot/jquery.flot.spline.js","js/plugins/flot/jquery.flot.resize.js","js/plugins/flot/jquery.flot.pie.js","js/plugins/flot/curvedLines.js","js/plugins/flot/angular-flot.js"]},{files:["js/plugins/sweetalert/sweetalert.min.js","css/plugins/sweetalert/sweetalert.css"]},{name:"oitozero.ngSweetAlert",files:["js/plugins/sweetalert/angular-sweetalert.min.js"]},{files:["js/plugins/jasny/jasny-bootstrap.min.js"]},{insertBefore:"#loadBefore",name:"localytics.directives",files:["css/plugins/chosen/bootstrap-chosen.css","js/plugins/chosen/chosen.jquery.js","js/plugins/chosen/chosen.js"]},{serie:!0,files:["js/plugins/dataTables/datatables.min.js","css/plugins/dataTables/datatables.min.css"]},{serie:!0,files:["js/plugins/dataTables/dataTables.responsive.min.js"]},{serie:!0,name:"datatables",files:["js/plugins/dataTables/angular-datatables.min.js"]},{serie:!0,name:"datatables.buttons",files:["js/plugins/dataTables/angular-datatables.buttons.min.js","js/plugins/dataTables/buttons.colvis.js"]},{serie:!0,name:"datatables.light-columnfilter",files:["js/plugins/dataTables/dataTables.lightColumnFilter.min.js","js/plugins/dataTables/angular-datatables.light-columnfilter.min.js"]},{name:"datePicker",files:["css/plugins/datapicker/angular-datapicker.css","js/plugins/datapicker/angular-datepicker.js","js/plugins/moment/min/moment.min.js"]},{files:["css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css"]}])}}}).state("apiDoc",{url:"/apiDoc",template:'<iframe src="apidoc/index.html" style="width: 100%;height: calc(100vh - 46px);border: 0px;"></iframe>',controller:function($scope,BreadCrumbsService){BreadCrumbsService.breadCrumbChange(0),BreadCrumbsService.push({},"API_DOC",(function(){dataCentersCtrl.openDataCenters()}))},data:{pageTitle:"API doc",authorizedRoles:[USER_ROLES.admin,USER_ROLES.user]}}).state("dataCenters",{url:"/dataCenters",templateUrl:"views/dataCenters/dataCenters.html",data:{pageTitle:"Data Centers",authorizedRoles:[USER_ROLES.admin,USER_ROLES.user]},resolve:{loadPlugin:function($ocLazyLoad){return $ocLazyLoad.load([{name:"angles",files:["js/plugins/chartJs/angles.js","js/plugins/chartJs/Chart.min.js"]},{name:"angular-peity",files:["js/plugins/peity/jquery.peity.min.js","js/plugins/peity/angular-peity.js"]},{serie:!0,name:"angular-flot",files:["js/plugins/flot/jquery.flot.js","js/plugins/flot/jquery.flot.time.js","js/plugins/flot/jquery.flot.tooltip.min.js","js/plugins/flot/jquery.flot.spline.js","js/plugins/flot/jquery.flot.resize.js","js/plugins/flot/jquery.flot.pie.js","js/plugins/flot/curvedLines.js","js/plugins/flot/angular-flot.js"]},{files:["js/plugins/sweetalert/sweetalert.min.js","css/plugins/sweetalert/sweetalert.css"]},{name:"oitozero.ngSweetAlert",files:["js/plugins/sweetalert/angular-sweetalert.min.js"]},{files:["js/plugins/jasny/jasny-bootstrap.min.js"]},{insertBefore:"#loadBefore",name:"localytics.directives",files:["css/plugins/chosen/bootstrap-chosen.css","js/plugins/chosen/chosen.jquery.js","js/plugins/chosen/chosen.js"]},{serie:!0,files:["js/plugins/dataTables/datatables.min.js","css/plugins/dataTables/datatables.min.css"]},{serie:!0,files:["js/plugins/dataTables/dataTables.responsive.min.js"]},{serie:!0,name:"datatables",files:["js/plugins/dataTables/angular-datatables.min.js"]},{serie:!0,name:"datatables.buttons",files:["js/plugins/dataTables/angular-datatables.buttons.min.js","js/plugins/dataTables/buttons.colvis.js"]},{serie:!0,name:"datatables.light-columnfilter",files:["js/plugins/dataTables/dataTables.lightColumnFilter.min.js","js/plugins/dataTables/angular-datatables.light-columnfilter.min.js"]},{name:"datePicker",files:["css/plugins/datapicker/angular-datapicker.css","js/plugins/datapicker/angular-datepicker.js","js/plugins/moment/min/moment.min.js"]},{files:["css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css"]}])}}}),RestangularProvider.setResponseExtractor((function(response,operation){return response})),RestangularProvider.setBaseUrl(BE_BASE_URL.url),$translateProvider.useStaticFilesLoader({prefix:"langs/",suffix:".json"}).preferredLanguage("eng"),angular.extend(toastrConfig,{allowHtml:!1,closeButton:!1,closeHtml:"<button>&times;</button>",extendedTimeOut:1e3,iconClasses:{error:"toast-error",info:"toast-info",success:"toast-success",warning:"toast-warning"},messageClass:"toast-message",onHidden:null,onShown:null,onTap:null,progressBar:!1,tapToDismiss:!0,templates:{toast:"directives/toast/toast.html",progressbar:"directives/progressbar/progressbar.html"},timeOut:5e3,titleClass:"toast-title",toastClass:"toast"})}function AuthRoute($rootScope,AUTH_EVENTS,AuthService){$rootScope.$on("$stateChangeStart",(function(event,next,y){$(".ColVis_collection").remove(),$(".ColVis_collectionBackground").remove();var authorizedRoles=next.data.authorizedRoles;"Login"===next.data.pageTitle||AuthService.isAuthorized(authorizedRoles)||(event.preventDefault(),$rootScope.$state.go("login"),AuthService.isAuthenticated()?$rootScope.$broadcast(AUTH_EVENTS.notAuthorized):$rootScope.$broadcast(AUTH_EVENTS.notAuthenticated))}))}angular.module("TDM-FE").config(config).config((function($httpProvider){$httpProvider.interceptors.push(["$injector",function($injector){return $injector.get("AuthInterceptor")}])})).factory("AuthInterceptor",(function($rootScope,$q,AUTH_EVENTS,SweetAlert){return{responseError:function(response){return $rootScope.$broadcast({401:AUTH_EVENTS.notAuthenticated,403:AUTH_EVENTS.notAuthorized,419:AUTH_EVENTS.sessionTimeout,440:AUTH_EVENTS.sessionTimeout}[response.status],response),$q.reject(response)}}})).run((function($rootScope,$state,AUTH_EVENTS,AuthService,$uibModalStack,$timeout){$rootScope.$state=$state,jQuery.fn.andSelf=jQuery.fn.addBack,$rootScope.$on(AUTH_EVENTS.notAuthenticated,(function(){$rootScope.$state.go("login")})),window.sessionStorage.url&&$timeout(()=>{const newUrl=window.sessionStorage.url.replace("/#!","");$state.go(newUrl.slice(1),{},{reload:!0}),delete window.sessionStorage.url},0),AuthRoute($rootScope,AUTH_EVENTS,AuthService),window.k2api&&window.k2api.registerNavigateTo&&window.k2api.registerNavigateTo(path=>{if($uibModalStack.dismissAll("state"),path){let newState="tasks";return"/"!==path&&(newState=path.replace("/#!",""),newState=""+newState.slice(1)),$state.go(newState,{},{reload:!0}),!0}return!1})})),window.k2api&&window.k2api.registerNavigateTo&&window.k2api.registerNavigateTo(path=>!!path&&(window.sessionStorage.url=path,!0));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
