function productsTableDirective(){return{restrict:"E",templateUrl:"views/products/productsTable.html",scope:{content:"="},controller:function($scope,$compile,TDMService,DTColumnBuilder,DTOptionsBuilder,$q,$timeout){var productsTableCtrl=this;productsTableCtrl.loadingTable=!0,TDMService.getProducts().then((function(response){if("SUCCESS"==response.errorCode){productsTableCtrl.productsData=_.sortBy(response.result,(function(value){return new Date(value.product_creation_date)})),productsTableCtrl.productsData.reverse(),productsTableCtrl.dtInstance={},productsTableCtrl.dtColumns=[],productsTableCtrl.dtColumnDefs=[],productsTableCtrl.headers=[{column:"product_name",name:"Name",clickAble:!0},{column:"product_vendor",name:"System Vendor",clickAble:!1},{column:"product_versions",name:"System Versions",clickAble:!1},{column:"product_creation_date",name:"Creation Date",clickAble:!1,type:"date"},{column:"product_created_by",name:"Created By",clickAble:!1},{column:"product_last_updated_date",name:"Last Update Date",clickAble:!1,type:"date"},{column:"product_last_updated_by",name:"Updated By",clickAble:!1},{column:"product_status",name:"Status",clickAble:!1}];for(var clickAbleColumn=function(data,type,full,meta){return'<a ng-click="productsTableCtrl.openProduct('+full.product_id+')">'+data+"</a>"},changeToLocalDate=function(data,type,full,meta){return moment(data).format("DD MMM YYYY, HH:mm")},i=0;i<productsTableCtrl.headers.length;i++)1==productsTableCtrl.headers[i].clickAble?productsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(productsTableCtrl.headers[i].column).withTitle(productsTableCtrl.headers[i].name).renderWith(clickAbleColumn)):"date"==productsTableCtrl.headers[i].type?productsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(productsTableCtrl.headers[i].column).withTitle(productsTableCtrl.headers[i].name).renderWith(changeToLocalDate)):productsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(productsTableCtrl.headers[i].column).withTitle(productsTableCtrl.headers[i].name));var getTableData=function(){var deferred=$q.defer();return deferred.resolve(productsTableCtrl.productsData),deferred.promise};productsTableCtrl.dtOptions=DTOptionsBuilder.fromFnPromise((function(){return getTableData()})).withDOM('<"html5buttons"B>lTfgitp').withOption("createdRow",(function(row){$compile(angular.element(row).contents())($scope)})).withOption("scrollX",!1).withOption("aaSorting",[7,"asc"]).withButtons([]).withOption("search",{caseInsensitive:!1}),productsTableCtrl.productsData&&productsTableCtrl.productsData.length>0&&productsTableCtrl.dtOptions.withLightColumnFilter({0:{type:"text"},1:{type:"text"},2:{type:"text"},3:{type:"text"},4:{type:"select",values:_.map(_.unique(_.map(productsTableCtrl.productsData,"product_created_by")),(function(el){return{value:el,label:el}}))},5:{type:"text"},6:{type:"select",values:_.map(_.unique(_.map(productsTableCtrl.productsData,"product_last_updated_by")),(function(el){return{value:el,label:el}}))},7:{type:"select",defaultValue:"Active",values:[{value:"Inactive",label:"Inactive"},{value:"Active",label:"Active"}]}}),productsTableCtrl.dtInstanceCallback=function(dtInstance){angular.isFunction(productsTableCtrl.dtInstance)?productsTableCtrl.dtInstance(dtInstance):angular.isDefined(productsTableCtrl.dtInstance)&&(productsTableCtrl.dtInstance=dtInstance)},null!=productsTableCtrl.dtInstance.changeData&&productsTableCtrl.dtInstance.changeData(getTableData()),$timeout(()=>{productsTableCtrl.loadingTable=!1})}})),productsTableCtrl.openProduct=function(productID){if($scope.content.openProduct){var productData=_.find(productsTableCtrl.productsData,{product_id:productID});if(productData)return void $scope.content.openProduct(productData)}},productsTableCtrl.openNewProduct=function(){$scope.content.openNewProduct&&$scope.content.openNewProduct(productsTableCtrl.productsData)}},controllerAs:"productsTableCtrl"}}angular.module("TDM-FE").directive("productsTableDirective",productsTableDirective);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
