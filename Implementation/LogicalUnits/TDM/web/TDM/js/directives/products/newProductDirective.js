function newProductDirective(){return{restrict:"E",templateUrl:"views/products/newProduct.html",scope:{content:"="},controller:function($scope,TDMService,BreadCrumbsService,toastr,$timeout){var newProductCtrl=this;newProductCtrl.productData={product_versions:[]},newProductCtrl.addProduct=function(){if(_.find($scope.content.productData,{product_name:newProductCtrl.productData.product_name,product_status:"Active"}))return toastr.error("System # "+newProductCtrl.productData.product_name+" Already Exists");newProductCtrl.productData.product_versions=newProductCtrl.productData.product_versions.join(","),TDMService.createProduct(newProductCtrl.productData).then((function(response){"SUCCESS"==response.errorCode?(toastr.success("System # "+newProductCtrl.productData.product_name,"Created Successfully"),newProductCtrl.productData.product_id=response.result.id,$timeout((function(){$scope.content.openProduct(newProductCtrl.productData)}),300)):toastr.error("System # "+newProductCtrl.productData.product_name,"Unable to Create : "+response.message)}))},newProductCtrl.addVersion=function(newVersion){newVersion&&(newProductCtrl.productData.product_versions||(newProductCtrl.productData.product_versions=[]),newProductCtrl.productData.product_versions.indexOf(newVersion)>=0?newProductCtrl.addVersionError=!0:(newProductCtrl.productData.product_versions.push(newVersion),newProductCtrl.isOpen=!1))},newProductCtrl.initAddVersionPopup=function(){newProductCtrl.addVersionError=!1,newProductCtrl.versionToAdd="",newProductCtrl.isOpen=!0},BreadCrumbsService.push({},"NEW_PRODUCT",(function(){}))},controllerAs:"newProductCtrl"}}angular.module("TDM-FE").directive("newProductDirective",newProductDirective);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpcmVjdGl2ZXMvcHJvZHVjdHMvbmV3UHJvZHVjdERpcmVjdGl2ZS5qcyJdLCJuYW1lcyI6WyJuZXdQcm9kdWN0RGlyZWN0aXZlIiwicmVzdHJpY3QiLCJ0ZW1wbGF0ZVVybCIsInNjb3BlIiwiY29udGVudCIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJURE1TZXJ2aWNlIiwiQnJlYWRDcnVtYnNTZXJ2aWNlIiwidG9hc3RyIiwiJHRpbWVvdXQiLCJuZXdQcm9kdWN0Q3RybCIsInRoaXMiLCJwcm9kdWN0RGF0YSIsInByb2R1Y3RfdmVyc2lvbnMiLCJhZGRQcm9kdWN0IiwiXyIsImZpbmQiLCJwcm9kdWN0X25hbWUiLCJwcm9kdWN0X3N0YXR1cyIsImVycm9yIiwiam9pbiIsImNyZWF0ZVByb2R1Y3QiLCJ0aGVuIiwicmVzcG9uc2UiLCJlcnJvckNvZGUiLCJzdWNjZXNzIiwicHJvZHVjdF9pZCIsInJlc3VsdCIsImlkIiwib3BlblByb2R1Y3QiLCJtZXNzYWdlIiwiYWRkVmVyc2lvbiIsIm5ld1ZlcnNpb24iLCJpbmRleE9mIiwiYWRkVmVyc2lvbkVycm9yIiwicHVzaCIsImlzT3BlbiIsImluaXRBZGRWZXJzaW9uUG9wdXAiLCJ2ZXJzaW9uVG9BZGQiLCJjb250cm9sbGVyQXMiLCJhbmd1bGFyIiwibW9kdWxlIiwiZGlyZWN0aXZlIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxzQkF3REwsTUFBTyxDQUNIQyxTQUFVLElBQ1ZDLFlBeERXLGlDQXlEWEMsTUFBTyxDQUNIQyxRQUFTLEtBRWJDLFdBMURhLFNBQVVDLE9BQU9DLFdBQVdDLG1CQUFtQkMsT0FBT0MsVUFDbkUsSUFBSUMsZUFBaUJDLEtBRXJCRCxlQUFlRSxZQUFjLENBQ3pCQyxpQkFBbUIsSUFHdkJILGVBQWVJLFdBQWEsV0FDeEIsR0FBSUMsRUFBRUMsS0FBS1gsT0FBT0YsUUFBUVMsWUFBYSxDQUFDSyxhQUFjUCxlQUFlRSxZQUFZSyxhQUFhQyxlQUFpQixXQUMzRyxPQUFPVixPQUFPVyxNQUFNLFlBQWNULGVBQWVFLFlBQVlLLGFBQWUsbUJBRWhGUCxlQUFlRSxZQUFZQyxpQkFBbUJILGVBQWVFLFlBQVlDLGlCQUFpQk8sS0FBSyxLQUMvRmQsV0FBV2UsY0FBY1gsZUFBZUUsYUFBYVUsTUFBSyxTQUFTQyxVQUNyQyxXQUF0QkEsU0FBU0MsV0FDVGhCLE9BQU9pQixRQUFRLFlBQWNmLGVBQWVFLFlBQVlLLGFBQWEsd0JBQ3JFUCxlQUFlRSxZQUFZYyxXQUFhSCxTQUFTSSxPQUFPQyxHQUN4RG5CLFVBQVMsV0FDTEosT0FBT0YsUUFBUTBCLFlBQVluQixlQUFlRSxlQUM1QyxNQUdGSixPQUFPVyxNQUFNLFlBQWNULGVBQWVFLFlBQVlLLGFBQWEsc0JBQXdCTSxTQUFTTyxhQUtoSHBCLGVBQWVxQixXQUFhLFNBQVNDLFlBQzdCQSxhQUNLdEIsZUFBZUUsWUFBWUMsbUJBQzVCSCxlQUFlRSxZQUFZQyxpQkFBbUIsSUFFOUNILGVBQWVFLFlBQVlDLGlCQUFpQm9CLFFBQVFELGFBQWUsRUFDbkV0QixlQUFld0IsaUJBQWtCLEdBR2pDeEIsZUFBZUUsWUFBWUMsaUJBQWlCc0IsS0FBS0gsWUFDakR0QixlQUFlMEIsUUFBUyxLQUtwQzFCLGVBQWUyQixvQkFBc0IsV0FDakMzQixlQUFld0IsaUJBQWtCLEVBQ2pDeEIsZUFBZTRCLGFBQWUsR0FDOUI1QixlQUFlMEIsUUFBUyxHQUc1QjdCLG1CQUFtQjRCLEtBQUssR0FBRyxlQUFjLGdCQVl6Q0ksYUFBYyxrQkFLdEJDLFFBQ0tDLE9BQU8sVUFDUEMsVUFBVSxzQkFBdUIzQyIsImZpbGUiOiJkaXJlY3RpdmVzL3Byb2R1Y3RzL25ld1Byb2R1Y3REaXJlY3RpdmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBuZXdQcm9kdWN0RGlyZWN0aXZlICgpe1xuXG4gICAgdmFyIHRlbXBsYXRlID0gXCJ2aWV3cy9wcm9kdWN0cy9uZXdQcm9kdWN0Lmh0bWxcIjtcblxuICAgIHZhciBjb250cm9sbGVyID0gZnVuY3Rpb24gKCRzY29wZSxURE1TZXJ2aWNlLEJyZWFkQ3J1bWJzU2VydmljZSx0b2FzdHIsJHRpbWVvdXQpIHtcbiAgICAgICAgdmFyIG5ld1Byb2R1Y3RDdHJsID0gdGhpcztcblxuICAgICAgICBuZXdQcm9kdWN0Q3RybC5wcm9kdWN0RGF0YSA9IHtcbiAgICAgICAgICAgIHByb2R1Y3RfdmVyc2lvbnMgOiBbXVxuICAgICAgICB9O1xuXG4gICAgICAgIG5ld1Byb2R1Y3RDdHJsLmFkZFByb2R1Y3QgPSBmdW5jdGlvbigpe1xuICAgICAgICAgICAgaWYgKF8uZmluZCgkc2NvcGUuY29udGVudC5wcm9kdWN0RGF0YSwge3Byb2R1Y3RfbmFtZTogbmV3UHJvZHVjdEN0cmwucHJvZHVjdERhdGEucHJvZHVjdF9uYW1lLHByb2R1Y3Rfc3RhdHVzIDogJ0FjdGl2ZSd9KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0b2FzdHIuZXJyb3IoXCJTeXN0ZW0gIyBcIiArIG5ld1Byb2R1Y3RDdHJsLnByb2R1Y3REYXRhLnByb2R1Y3RfbmFtZSArIFwiIEFscmVhZHkgRXhpc3RzXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV3UHJvZHVjdEN0cmwucHJvZHVjdERhdGEucHJvZHVjdF92ZXJzaW9ucyA9IG5ld1Byb2R1Y3RDdHJsLnByb2R1Y3REYXRhLnByb2R1Y3RfdmVyc2lvbnMuam9pbignLCcpO1xuICAgICAgICAgICAgVERNU2VydmljZS5jcmVhdGVQcm9kdWN0KG5ld1Byb2R1Y3RDdHJsLnByb2R1Y3REYXRhKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZXJyb3JDb2RlID09IFwiU1VDQ0VTU1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKFwiU3lzdGVtICMgXCIgKyBuZXdQcm9kdWN0Q3RybC5wcm9kdWN0RGF0YS5wcm9kdWN0X25hbWUsXCJDcmVhdGVkIFN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3UHJvZHVjdEN0cmwucHJvZHVjdERhdGEucHJvZHVjdF9pZCA9IHJlc3BvbnNlLnJlc3VsdC5pZDtcbiAgICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5jb250ZW50Lm9wZW5Qcm9kdWN0KG5ld1Byb2R1Y3RDdHJsLnByb2R1Y3REYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfSwzMDApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHRvYXN0ci5lcnJvcihcIlN5c3RlbSAjIFwiICsgbmV3UHJvZHVjdEN0cmwucHJvZHVjdERhdGEucHJvZHVjdF9uYW1lLFwiVW5hYmxlIHRvIENyZWF0ZSA6IFwiICsgcmVzcG9uc2UubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgbmV3UHJvZHVjdEN0cmwuYWRkVmVyc2lvbiA9IGZ1bmN0aW9uKG5ld1ZlcnNpb24pe1xuICAgICAgICAgICAgaWYgKG5ld1ZlcnNpb24pe1xuICAgICAgICAgICAgICAgIGlmICghbmV3UHJvZHVjdEN0cmwucHJvZHVjdERhdGEucHJvZHVjdF92ZXJzaW9ucyl7XG4gICAgICAgICAgICAgICAgICAgIG5ld1Byb2R1Y3RDdHJsLnByb2R1Y3REYXRhLnByb2R1Y3RfdmVyc2lvbnMgPSBbXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG5ld1Byb2R1Y3RDdHJsLnByb2R1Y3REYXRhLnByb2R1Y3RfdmVyc2lvbnMuaW5kZXhPZihuZXdWZXJzaW9uKSA+PSAwKXtcbiAgICAgICAgICAgICAgICAgICAgbmV3UHJvZHVjdEN0cmwuYWRkVmVyc2lvbkVycm9yID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgbmV3UHJvZHVjdEN0cmwucHJvZHVjdERhdGEucHJvZHVjdF92ZXJzaW9ucy5wdXNoKG5ld1ZlcnNpb24pO1xuICAgICAgICAgICAgICAgICAgICBuZXdQcm9kdWN0Q3RybC5pc09wZW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgbmV3UHJvZHVjdEN0cmwuaW5pdEFkZFZlcnNpb25Qb3B1cCA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBuZXdQcm9kdWN0Q3RybC5hZGRWZXJzaW9uRXJyb3IgPSBmYWxzZTtcbiAgICAgICAgICAgIG5ld1Byb2R1Y3RDdHJsLnZlcnNpb25Ub0FkZCA9ICcnO1xuICAgICAgICAgICAgbmV3UHJvZHVjdEN0cmwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgfTtcblxuICAgICAgICBCcmVhZENydW1ic1NlcnZpY2UucHVzaCh7fSwnTkVXX1BST0RVQ1QnLGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiBcIkVcIixcbiAgICAgICAgdGVtcGxhdGVVcmw6IHRlbXBsYXRlLFxuICAgICAgICBzY29wZToge1xuICAgICAgICAgICAgY29udGVudDogJz0nXG4gICAgICAgIH0sXG4gICAgICAgIGNvbnRyb2xsZXI6IGNvbnRyb2xsZXIsXG4gICAgICAgIGNvbnRyb2xsZXJBcyA6J25ld1Byb2R1Y3RDdHJsJ1xuICAgIH07XG59XG5cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ1RETS1GRScpXG4gICAgLmRpcmVjdGl2ZSgnbmV3UHJvZHVjdERpcmVjdGl2ZScsIG5ld1Byb2R1Y3REaXJlY3RpdmUpOyJdfQ==
