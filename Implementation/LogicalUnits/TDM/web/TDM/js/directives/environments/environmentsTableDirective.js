function environmentsTableDirective(){return{restrict:"E",templateUrl:"views/environments/environmentsTable.html",scope:{content:"="},controller:function($scope,$compile,TDMService,DTColumnBuilder,DTOptionsBuilder,$q,$timeout){var environmentsTableCtrl=this;environmentsTableCtrl.loadingTable=!0,TDMService.getEnvironments().then((function(response){if("SUCCESS"==response.errorCode){environmentsTableCtrl.environmentsData=_.sortBy(response.result,(function(value){return new Date(value.environment_last_updated_date)})),environmentsTableCtrl.environmentsData.reverse(),environmentsTableCtrl.dtInstance={},environmentsTableCtrl.dtColumns=[],environmentsTableCtrl.dtColumnDefs=[],environmentsTableCtrl.headers=[{column:"environment_name",name:"Name",clickAble:!0},{column:"environment_type",name:"Environment Type",clickAble:!0},{column:"environment_point_of_contact_first_name",name:"Contact First Name",clickAble:!1},{column:"environment_point_of_contact_last_name",name:"Contact Last Name",clickAble:!1},{column:"environment_point_of_contact_email",name:"Contact Email",clickAble:!1},{column:"owners",name:"Owners",clickAble:!1},{column:"environment_creation_date",name:"Creation Date",clickAble:!1,type:"date"},{column:"environment_created_by",name:"Created By",clickAble:!1},{column:"environment_last_updated_date",name:"Last Update Date",clickAble:!1,type:"date"},{column:"environment_last_updated_by",name:"Updated By",clickAble:!1},{column:"environment_status",name:"Status",clickAble:!1}];for(var clickAbleColumn=function(data,type,full,meta){return'<a ng-click="environmentsTableCtrl.openEnvironment('+full.environment_id+')">'+data+"</a>"},changeToLocalDate=function(data,type,full,meta){return data?moment(data).format("DD MMM YYYY, HH:mm"):""},i=0;i<environmentsTableCtrl.headers.length;i++)1==environmentsTableCtrl.headers[i].clickAble?environmentsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(environmentsTableCtrl.headers[i].column).withTitle(environmentsTableCtrl.headers[i].name).renderWith(clickAbleColumn)):"date"==environmentsTableCtrl.headers[i].type?environmentsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(environmentsTableCtrl.headers[i].column).withTitle(environmentsTableCtrl.headers[i].name).renderWith(changeToLocalDate)):environmentsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(environmentsTableCtrl.headers[i].column).withTitle(environmentsTableCtrl.headers[i].name));var getTableData=function(){var deferred=$q.defer();return deferred.resolve(environmentsTableCtrl.environmentsData),deferred.promise};environmentsTableCtrl.dtOptions=DTOptionsBuilder.fromFnPromise((function(){return getTableData()})).withOption("aaSorting",[10,"asc"]).withDOM('<"html5buttons"B>lTfgitp').withOption("createdRow",(function(row){$compile(angular.element(row).contents())($scope)})).withOption("scrollX",!1).withButtons([]).withOption("caseInsensitive",!0).withOption("search",{caseInsensitive:!1}),environmentsTableCtrl.environmentsData&&environmentsTableCtrl.environmentsData.length>0&&environmentsTableCtrl.dtOptions.withLightColumnFilter({0:{type:"text"},1:{type:"select",values:[{value:"Source",label:"Source"},{value:"Target",label:"Target"},{value:"Both",label:"Both"}]},2:{type:"text"},3:{type:"text"},4:{type:"text"},5:{type:"text"},6:{type:"text"},7:{type:"select",values:_.map(_.unique(_.map(environmentsTableCtrl.environmentsData,"environment_created_by")),(function(el){return{value:el,label:el}}))},8:{type:"text"},9:{type:"select",values:_.map(_.unique(_.map(environmentsTableCtrl.environmentsData,"environment_last_updated_by")),(function(el){return{value:el,label:el}}))},10:{type:"select",defaultValue:"Active",values:[{value:"Inactive",label:"Inactive"},{value:"Active",label:"Active"}]}}),environmentsTableCtrl.dtInstanceCallback=function(dtInstance){angular.isFunction(environmentsTableCtrl.dtInstance)?environmentsTableCtrl.dtInstance(dtInstance):angular.isDefined(environmentsTableCtrl.dtInstance)&&(environmentsTableCtrl.dtInstance=dtInstance)},null!=environmentsTableCtrl.dtInstance.changeData&&environmentsTableCtrl.dtInstance.changeData(getTableData()),$timeout(()=>{environmentsTableCtrl.loadingTable=!1})}})),environmentsTableCtrl.openEnvironment=function(environmentID){if($scope.content.openEnvironment){var environmentData=_.find(environmentsTableCtrl.environmentsData,{environment_id:environmentID});if(environmentData)return void $scope.content.openEnvironment(environmentData,environmentsTableCtrl.environmentsData)}},environmentsTableCtrl.openNewEnvironment=function(){$scope.content.openNewEnvironment&&$scope.content.openNewEnvironment(environmentsTableCtrl.environmentsData)}},controllerAs:"environmentsTableCtrl"}}angular.module("TDM-FE").directive("environmentsTableDirective",environmentsTableDirective);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
