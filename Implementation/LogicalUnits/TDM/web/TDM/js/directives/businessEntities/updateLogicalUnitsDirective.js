function updateLogicalUnitsDirective(){return{restrict:"E",templateUrl:"views/businessEntities/updateLogicalUnit.html",scope:{data:"=",logicalUnits:"=",logicalUnitIndex:"="},controller:function($scope,TDMService,BreadCrumbsService,toastr,$timeout){var updateLogicalUnitsCtrl=this;updateLogicalUnitsCtrl.logicalUnit=$scope.logicalUnits[$scope.logicalUnitIndex],updateLogicalUnitsCtrl.attachedLogicalUnits=angular.copy($scope.logicalUnits),updateLogicalUnitsCtrl.attachedLogicalUnits.splice($scope.logicalUnitIndex,1),updateLogicalUnitsCtrl.attachedLogicalUnits=_.map(updateLogicalUnitsCtrl.attachedLogicalUnits,(function(lu){return{lu_id:lu.lu_id,lu_name:lu.lu_name}})),TDMService.getGenericAPI("dataCenters").then((function(response){updateLogicalUnitsCtrl.dataCenters=_.unique(response.result.filter(item=>"ALIVE"===item.status),"dc")})),updateLogicalUnitsCtrl.updateLogicalUnit=function(){if(updateLogicalUnitsCtrl.logicalUnit.lu_parent_name){var temp=_.find(updateLogicalUnitsCtrl.attachedLogicalUnits,{lu_name:updateLogicalUnitsCtrl.logicalUnit.lu_parent_name});temp&&(updateLogicalUnitsCtrl.logicalUnit.lu_parent_id=temp.lu_id)}else delete updateLogicalUnitsCtrl.logicalUnit.lu_parent_id;TDMService.putLogicalUnit(updateLogicalUnitsCtrl.logicalUnit).then((function(response){"SUCCESS"==response.errorCode?(updateLogicalUnitsCtrl.logicalUnit.lu_parent_name||(updateLogicalUnitsCtrl.logicalUnit.lu_parent_name=""),$scope.logicalUnits[$scope.logicalUnitIndex]=updateLogicalUnitsCtrl.logicalUnit,$scope.data.reloadData(),updateLogicalUnitsCtrl.close(),toastr.success("Logical unit updated successfully")):updateLogicalUnitsCtrl.logicalUnitAlert={type:"danger",msg:"failed to Add Logical Units ["+response.message+"]"}}))},updateLogicalUnitsCtrl.closeAlert=function(){delete updateLogicalUnitsCtrl.logicalUnitAlert},updateLogicalUnitsCtrl.close=function(){$scope.data.close()}},controllerAs:"updateLogicalUnitsCtrl"}}angular.module("TDM-FE").directive("updateLogicalUnitsDirective",updateLogicalUnitsDirective);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpcmVjdGl2ZXMvYnVzaW5lc3NFbnRpdGllcy91cGRhdGVMb2dpY2FsVW5pdHNEaXJlY3RpdmUuanMiXSwibmFtZXMiOlsidXBkYXRlTG9naWNhbFVuaXRzRGlyZWN0aXZlIiwicmVzdHJpY3QiLCJ0ZW1wbGF0ZVVybCIsInNjb3BlIiwiZGF0YSIsImxvZ2ljYWxVbml0cyIsImxvZ2ljYWxVbml0SW5kZXgiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiVERNU2VydmljZSIsIkJyZWFkQ3J1bWJzU2VydmljZSIsInRvYXN0ciIsIiR0aW1lb3V0IiwidXBkYXRlTG9naWNhbFVuaXRzQ3RybCIsInRoaXMiLCJsb2dpY2FsVW5pdCIsImF0dGFjaGVkTG9naWNhbFVuaXRzIiwiYW5ndWxhciIsImNvcHkiLCJzcGxpY2UiLCJfIiwibWFwIiwibHUiLCJsdV9pZCIsImx1X25hbWUiLCJnZXRHZW5lcmljQVBJIiwidGhlbiIsInJlc3BvbnNlIiwiZGF0YUNlbnRlcnMiLCJ1bmlxdWUiLCJyZXN1bHQiLCJmaWx0ZXIiLCJpdGVtIiwic3RhdHVzIiwidXBkYXRlTG9naWNhbFVuaXQiLCJsdV9wYXJlbnRfbmFtZSIsInRlbXAiLCJmaW5kIiwibHVfcGFyZW50X2lkIiwicHV0TG9naWNhbFVuaXQiLCJlcnJvckNvZGUiLCJyZWxvYWREYXRhIiwiY2xvc2UiLCJzdWNjZXNzIiwibG9naWNhbFVuaXRBbGVydCIsInR5cGUiLCJtc2ciLCJtZXNzYWdlIiwiY2xvc2VBbGVydCIsImNvbnRyb2xsZXJBcyIsIm1vZHVsZSIsImRpcmVjdGl2ZSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsOEJBMERMLE1BQU8sQ0FDSEMsU0FBVSxJQUNWQyxZQTFEVyxnREEyRFhDLE1BQU8sQ0FDSEMsS0FBTSxJQUNOQyxhQUFlLElBQ2ZDLGlCQUFtQixLQUV2QkMsV0E5RGEsU0FBVUMsT0FBT0MsV0FBV0MsbUJBQW1CQyxPQUFPQyxVQUNuRSxJQUFJQyx1QkFBeUJDLEtBQzdCRCx1QkFBdUJFLFlBQWNQLE9BQU9ILGFBQWFHLE9BQU9GLGtCQUVoRU8sdUJBQXVCRyxxQkFBdUJDLFFBQVFDLEtBQUtWLE9BQU9ILGNBQ2xFUSx1QkFBdUJHLHFCQUFxQkcsT0FBT1gsT0FBT0YsaUJBQWlCLEdBQzNFTyx1QkFBdUJHLHFCQUF1QkksRUFBRUMsSUFBSVIsdUJBQXVCRyxzQkFBcUIsU0FBU00sSUFDckcsTUFBTyxDQUNIQyxNQUFRRCxHQUFHQyxNQUNYQyxRQUFVRixHQUFHRSxZQUlyQmYsV0FBV2dCLGNBQWMsZUFBZUMsTUFBSyxTQUFTQyxVQUNsRGQsdUJBQXVCZSxZQUFjUixFQUFFUyxPQUFPRixTQUFTRyxPQUFPQyxPQUFRQyxNQUF3QixVQUFoQkEsS0FBS0MsUUFBb0IsU0FHM0dwQix1QkFBdUJxQixrQkFBb0IsV0FDdkMsR0FBSXJCLHVCQUF1QkUsWUFBWW9CLGVBQWUsQ0FDbEQsSUFBSUMsS0FBT2hCLEVBQUVpQixLQUFLeEIsdUJBQXVCRyxxQkFBcUIsQ0FBQ1EsUUFBVVgsdUJBQXVCRSxZQUFZb0IsaUJBQ3hHQyxPQUNBdkIsdUJBQXVCRSxZQUFZdUIsYUFBZUYsS0FBS2IsbUJBSXBEVix1QkFBdUJFLFlBQVl1QixhQUU5QzdCLFdBQVc4QixlQUFlMUIsdUJBQXVCRSxhQUFhVyxNQUFLLFNBQVNDLFVBQzlDLFdBQXRCQSxTQUFTYSxXQUNKM0IsdUJBQXVCRSxZQUFZb0IsaUJBQ3BDdEIsdUJBQXVCRSxZQUFZb0IsZUFBaUIsSUFFeEQzQixPQUFPSCxhQUFhRyxPQUFPRixrQkFBb0JPLHVCQUF1QkUsWUFDdEVQLE9BQU9KLEtBQUtxQyxhQUNaNUIsdUJBQXVCNkIsUUFDdkIvQixPQUFPZ0MsUUFBUSxzQ0FHZjlCLHVCQUF1QitCLGlCQUFtQixDQUN0Q0MsS0FBTSxTQUFVQyxJQUFLLGdDQUFrQ25CLFNBQVNvQixRQUFVLFNBTTFGbEMsdUJBQXVCbUMsV0FBYSxrQkFDekJuQyx1QkFBdUIrQixrQkFHbEMvQix1QkFBdUI2QixNQUFRLFdBQzNCbEMsT0FBT0osS0FBS3NDLFVBYWhCTyxhQUFjLDBCQUt0QmhDLFFBQ0tpQyxPQUFPLFVBQ1BDLFVBQVUsOEJBQStCbkQiLCJmaWxlIjoiZGlyZWN0aXZlcy9idXNpbmVzc0VudGl0aWVzL3VwZGF0ZUxvZ2ljYWxVbml0c0RpcmVjdGl2ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHVwZGF0ZUxvZ2ljYWxVbml0c0RpcmVjdGl2ZSAoKXtcblxuICAgIHZhciB0ZW1wbGF0ZSA9IFwidmlld3MvYnVzaW5lc3NFbnRpdGllcy91cGRhdGVMb2dpY2FsVW5pdC5odG1sXCI7XG5cbiAgICB2YXIgY29udHJvbGxlciA9IGZ1bmN0aW9uICgkc2NvcGUsVERNU2VydmljZSxCcmVhZENydW1ic1NlcnZpY2UsdG9hc3RyLCR0aW1lb3V0KSB7XG4gICAgICAgIHZhciB1cGRhdGVMb2dpY2FsVW5pdHNDdHJsID0gdGhpcztcbiAgICAgICAgdXBkYXRlTG9naWNhbFVuaXRzQ3RybC5sb2dpY2FsVW5pdCA9ICRzY29wZS5sb2dpY2FsVW5pdHNbJHNjb3BlLmxvZ2ljYWxVbml0SW5kZXhdO1xuXG4gICAgICAgIHVwZGF0ZUxvZ2ljYWxVbml0c0N0cmwuYXR0YWNoZWRMb2dpY2FsVW5pdHMgPSBhbmd1bGFyLmNvcHkoJHNjb3BlLmxvZ2ljYWxVbml0cyk7XG4gICAgICAgIHVwZGF0ZUxvZ2ljYWxVbml0c0N0cmwuYXR0YWNoZWRMb2dpY2FsVW5pdHMuc3BsaWNlKCRzY29wZS5sb2dpY2FsVW5pdEluZGV4LDEpO1xuICAgICAgICB1cGRhdGVMb2dpY2FsVW5pdHNDdHJsLmF0dGFjaGVkTG9naWNhbFVuaXRzID0gXy5tYXAodXBkYXRlTG9naWNhbFVuaXRzQ3RybC5hdHRhY2hlZExvZ2ljYWxVbml0cyxmdW5jdGlvbihsdSl7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGx1X2lkIDogbHUubHVfaWQsXG4gICAgICAgICAgICAgICAgbHVfbmFtZSA6IGx1Lmx1X25hbWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgVERNU2VydmljZS5nZXRHZW5lcmljQVBJKCdkYXRhQ2VudGVycycpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgICAgICAgdXBkYXRlTG9naWNhbFVuaXRzQ3RybC5kYXRhQ2VudGVycyA9IF8udW5pcXVlKHJlc3BvbnNlLnJlc3VsdC5maWx0ZXIoIGl0ZW0gPT4gaXRlbS5zdGF0dXMgPT09ICdBTElWRScpLCdkYycpO1xuICAgICAgICB9KTtcblxuICAgICAgICB1cGRhdGVMb2dpY2FsVW5pdHNDdHJsLnVwZGF0ZUxvZ2ljYWxVbml0ID0gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGlmICh1cGRhdGVMb2dpY2FsVW5pdHNDdHJsLmxvZ2ljYWxVbml0Lmx1X3BhcmVudF9uYW1lKXtcbiAgICAgICAgICAgICAgICB2YXIgdGVtcCA9IF8uZmluZCh1cGRhdGVMb2dpY2FsVW5pdHNDdHJsLmF0dGFjaGVkTG9naWNhbFVuaXRzLHtsdV9uYW1lIDogdXBkYXRlTG9naWNhbFVuaXRzQ3RybC5sb2dpY2FsVW5pdC5sdV9wYXJlbnRfbmFtZX0pO1xuICAgICAgICAgICAgICAgIGlmICh0ZW1wKXtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlTG9naWNhbFVuaXRzQ3RybC5sb2dpY2FsVW5pdC5sdV9wYXJlbnRfaWQgPSB0ZW1wLmx1X2lkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSB1cGRhdGVMb2dpY2FsVW5pdHNDdHJsLmxvZ2ljYWxVbml0Lmx1X3BhcmVudF9pZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFRETVNlcnZpY2UucHV0TG9naWNhbFVuaXQodXBkYXRlTG9naWNhbFVuaXRzQ3RybC5sb2dpY2FsVW5pdCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmVycm9yQ29kZSA9PSBcIlNVQ0NFU1NcIikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXVwZGF0ZUxvZ2ljYWxVbml0c0N0cmwubG9naWNhbFVuaXQubHVfcGFyZW50X25hbWUpe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlTG9naWNhbFVuaXRzQ3RybC5sb2dpY2FsVW5pdC5sdV9wYXJlbnRfbmFtZSA9IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmxvZ2ljYWxVbml0c1skc2NvcGUubG9naWNhbFVuaXRJbmRleF0gPSB1cGRhdGVMb2dpY2FsVW5pdHNDdHJsLmxvZ2ljYWxVbml0O1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuZGF0YS5yZWxvYWREYXRhKCk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZUxvZ2ljYWxVbml0c0N0cmwuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgdG9hc3RyLnN1Y2Nlc3MoXCJMb2dpY2FsIHVuaXQgdXBkYXRlZCBzdWNjZXNzZnVsbHlcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZUxvZ2ljYWxVbml0c0N0cmwubG9naWNhbFVuaXRBbGVydCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdkYW5nZXInLCBtc2c6ICdmYWlsZWQgdG8gQWRkIExvZ2ljYWwgVW5pdHMgWycgKyByZXNwb25zZS5tZXNzYWdlICsgJ10nXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICB1cGRhdGVMb2dpY2FsVW5pdHNDdHJsLmNsb3NlQWxlcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkZWxldGUgdXBkYXRlTG9naWNhbFVuaXRzQ3RybC5sb2dpY2FsVW5pdEFsZXJ0O1xuICAgICAgICB9O1xuXG4gICAgICAgIHVwZGF0ZUxvZ2ljYWxVbml0c0N0cmwuY2xvc2UgPSBmdW5jdGlvbigpe1xuICAgICAgICAgICAgJHNjb3BlLmRhdGEuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogXCJFXCIsXG4gICAgICAgIHRlbXBsYXRlVXJsOiB0ZW1wbGF0ZSxcbiAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICAgIGRhdGE6ICc9JyxcbiAgICAgICAgICAgIGxvZ2ljYWxVbml0cyA6IFwiPVwiLFxuICAgICAgICAgICAgbG9naWNhbFVuaXRJbmRleCA6IFwiPVwiLFxuICAgICAgICB9LFxuICAgICAgICBjb250cm9sbGVyOiBjb250cm9sbGVyLFxuICAgICAgICBjb250cm9sbGVyQXMgOid1cGRhdGVMb2dpY2FsVW5pdHNDdHJsJ1xuICAgIH07XG59XG5cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ1RETS1GRScpXG4gICAgLmRpcmVjdGl2ZSgndXBkYXRlTG9naWNhbFVuaXRzRGlyZWN0aXZlJywgdXBkYXRlTG9naWNhbFVuaXRzRGlyZWN0aXZlKTsiXX0=
