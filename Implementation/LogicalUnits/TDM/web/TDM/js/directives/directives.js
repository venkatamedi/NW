function pageTitle($rootScope,$timeout){return{link:function(scope,element){$rootScope.$on("$stateChangeStart",(function(event,toState,toParams,fromState,fromParams){var title="TDM | Responsive Admin Theme";toState.data&&toState.data.pageTitle&&(title="TDM | "+toState.data.pageTitle),$timeout((function(){element.text(title)}))}))}}}function sideNavigation($timeout){return{restrict:"A",link:function(scope,element){$timeout((function(){element.metisMenu()}))}}}function iboxTools($timeout){return{restrict:"A",scope:!0,templateUrl:"views/common/ibox_tools.html",controller:function($scope,$element){$scope.showhide=function(){var ibox=$element.closest("div.ibox"),icon=$element.find("i:first");ibox.find("div.ibox-content").slideToggle(200),icon.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"),ibox.toggleClass("").toggleClass("border-bottom"),$timeout((function(){ibox.resize(),ibox.find("[id^=map-]").resize()}),50)},$scope.closebox=function(){$element.closest("div.ibox").remove()}}}}function iboxToolsFullScreen($timeout){return{restrict:"A",scope:!0,templateUrl:"views/common/ibox_tools_full_screen.html",controller:function($scope,$element){$scope.showhide=function(){var ibox=$element.closest("div.ibox"),icon=$element.find("i:first");ibox.find("div.ibox-content").slideToggle(200),icon.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"),ibox.toggleClass("").toggleClass("border-bottom"),$timeout((function(){ibox.resize(),ibox.find("[id^=map-]").resize()}),50)},$scope.closebox=function(){$element.closest("div.ibox").remove()},$scope.fullscreen=function(){var ibox=$element.closest("div.ibox"),button=$element.find("i.fa-expand");$("body").toggleClass("fullscreen-ibox-mode"),button.toggleClass("fa-expand").toggleClass("fa-compress"),ibox.toggleClass("fullscreen"),setTimeout((function(){$(window).trigger("resize")}),100)}}}}function minimalizaSidebar($timeout){return{restrict:"A",template:'<a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="" ng-click="minimalize()"><i class="fa fa-bars"></i></a>',scope:{parentController:"="},controller:function($scope,$element){$scope.minimalize=function(){$("body").toggleClass("mini-navbar"),!$("body").hasClass("mini-navbar")||$("body").hasClass("body-small")?($("#side-menu").hide(),setTimeout((function(){$("#side-menu").fadeIn(400),$(window).trigger("resize")}),200),$scope.parentController.showTooltip=!1):$("body").hasClass("fixed-sidebar")?($("#side-menu").hide(),setTimeout((function(){$("#side-menu").fadeIn(400),$(window).trigger("resize")}),100)):($("#side-menu").removeAttr("style"),$(window).trigger("resize"),$scope.parentController.showTooltip=!0)}}}}function roleHandler($timeout){return{restrict:"A",link:function(scope,element,attr){scope.currentUserRole.id>scope.role&&element.remove()},controller:function($scope,AuthService){$scope.currentUserRole=AuthService.getRole()},scope:{role:"="}}}function icheck($timeout){return{restrict:"A",require:"ngModel",link:function($scope,element,$attrs,ngModel){return $timeout((function(){var value;return value=$attrs.value,$scope.$watch($attrs.ngModel,(function(newValue){$(element).iCheck("update")})),$scope.$watch($attrs.ngDisabled,(function(newValue){$(element).iCheck("update")})),$(element).iCheck({checkboxClass:"icheckbox_square-green",radioClass:"iradio_square-green"}).on("ifChanged",(function(event){if("checkbox"===$(element).attr("type")&&$attrs.ngModel&&$scope.$apply((function(){return ngModel.$setViewValue(event.target.checked)})),"radio"===$(element).attr("type")&&$attrs.ngModel)return $scope.$apply((function(){return ngModel.$setViewValue(value)}))}))}))}}}function treeMenuPopup(){return{scope:{treeMenuPopup:"=treeMenuPopup"},template:'<li ng-repeat="item in treeMenuPopup track by $index" style="padding-bottom: 10px"><tree-menu-item-popup></tree-menu-item-popup></li>',link:function(scope,elem){}}}function treeMenuItemPopup($rootScope,$compile){return{template:'<div style="cursor: pointer;padding-top:5px" ng-style="item.selected && {\'background-color\':\'rgba(208, 235, 255, 0.7)\'}"><i ng-click="collapse(item)" class="fa fa-caret-right" ng-if="item.children"></i><i ng-if="item.isRoot && item.luStatus == \'failed\'" style="text-align: center;color: white;background: red;padding: 5px;width: 22px;border-radius: 50px;" class="fa fa-exclamation"></i><span ng-click="updateTable(item, treeMenu)" ng-style="getCss(item)"ng-bind="item.luName"></span></div>',link:function(scope,element){angular.isArray(scope.item.children)&&element.append($compile('<ul style="list-style: none;" ng-if="collapsed" tree-menu-popup="item.children"></ul>')(scope)),scope.getCss=item=>{let res={};return"failed"==item.luStatus&&(res.color="red"),res["margin-left"]=item.hasChildren?"10px":"15px",res},scope.collapse=function(item){scope.collapsed=!scope.collapsed},scope.updateTable=function(item,treeMenu){$rootScope.$broadcast("updatePopUpTable",{item:item}),item.selected=!0}}}}function treeMenu(){return{scope:{treeMenu:"=treeMenu"},template:'<li ng-repeat="item in treeMenu track by $index" style="padding-bottom: 10px"><tree-menu-item></tree-menu-item></li>',link:function(scope,elem){}}}function treeMenuItem($rootScope,$compile){return{template:'<div style="cursor: pointer;padding-top:5px" ng-style="item.selected && {\'background-color\':\'rgba(208, 235, 255, 0.7)\'}"><i ng-click="collapse(item)" class="fa fa-caret-right" ng-if="item.hasChildren"></i><span ng-click="updateTable(item, treeMenu)" ng-style="getCss(item)"ng-bind="item.lu_name"></span></div>',link:function(scope,element){angular.isArray(scope.item.children)&&element.append($compile('<ul style="list-style: none;" ng-if="collapsed" tree-menu="item.children"></ul>')(scope)),scope.getCss=item=>{let res={};return"failed"==item.lu_status&&(res.color="red"),res["margin-left"]=item.hasChildren?"10px":"15px",res},scope.collapse=function(item){scope.collapsed=!scope.collapsed,$rootScope.$broadcast("showRootLUChildren",{item:item})},scope.updateTable=function(item,treeMenu){$rootScope.$broadcast("updateTDMStats",{item:item}),item.selected=!0}}}}treeMenuItem().$inject=["$compile"],angular.module("TDM-FE").directive("pageTitle",pageTitle).directive("sideNavigation",sideNavigation).directive("iboxTools",iboxTools).directive("minimalizaSidebar",minimalizaSidebar).directive("iboxToolsFullScreen",iboxToolsFullScreen).directive("roleHandler",roleHandler).directive("icheck",icheck).directive("treeMenu",treeMenu).directive("treeMenuPopup",treeMenuPopup).directive("treeMenuItem",treeMenuItem).directive("treeMenuItemPopup",treeMenuItemPopup).directive("autoFocus",["$timeout",function($timeout){return{restrict:"A",link:function($scope,$element){$timeout((function(){$element[0].focus()}),2e3)}}}]).filter("customOptionsFilter",(function(){return function(logicalUnits,be){return logicalUnits?be?_.filter(logicalUnits,(function(lu){return be.be_id==lu.be_id})):logicalUnits:[]}}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
