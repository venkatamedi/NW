function advancedBusinessOptions(){return{restrict:"E",templateUrl:"js/components/task/advancedBusinessOptions/advancedBusinessOptions.html",scope:{logicalUnits:"=",selected:"=",close:"=",save:"="},controller:function($scope,TDMService,AuthService,toastr){const advancedBusinessOptionsCtrl=this;if(advancedBusinessOptionsCtrl.prodLogicalUnits=_.groupBy(angular.copy($scope.logicalUnits),"product_name"),advancedBusinessOptionsCtrl.prod={},advancedBusinessOptionsCtrl.toggleProds={},advancedBusinessOptionsCtrl.isAllSelected=prod=>{let value=!0;for(let i=0;i<advancedBusinessOptionsCtrl.prodLogicalUnits[prod].length;i++)advancedBusinessOptionsCtrl.prodLogicalUnits[prod][i].selected||(value=!1);advancedBusinessOptionsCtrl.prod[prod]=value},advancedBusinessOptionsCtrl.addClearAllProd=(prod,value)=>{advancedBusinessOptionsCtrl.prodLogicalUnits[prod].forEach(lu=>{lu.selected=value})},advancedBusinessOptionsCtrl.addClearAll=value=>{Object.keys(advancedBusinessOptionsCtrl.prodLogicalUnits).forEach(prod=>{advancedBusinessOptionsCtrl.prod[prod]=value,advancedBusinessOptionsCtrl.addClearAllProd(prod,value)})},$scope.selected&&$scope.selected.length>0){const selectedLUName=$scope.selected.map(it=>it.lu_name);Object.keys(advancedBusinessOptionsCtrl.prodLogicalUnits).forEach(prod=>{advancedBusinessOptionsCtrl.prodLogicalUnits[prod].forEach(lu=>{selectedLUName.indexOf(lu.lu_name)>=0&&(lu.selected=!0)}),advancedBusinessOptionsCtrl.isAllSelected(prod)})}advancedBusinessOptionsCtrl.saveData=()=>{const selectedLUs=[];Object.keys(advancedBusinessOptionsCtrl.prodLogicalUnits).forEach(prod=>{advancedBusinessOptionsCtrl.prodLogicalUnits[prod].forEach(lu=>{lu.selected&&selectedLUs.push(lu)})}),$scope.save(selectedLUs),$scope.close()}},controllerAs:"advancedBusinessOptionsCtrl"}}angular.module("TDM-FE").directive("advancedBusinessOptions",advancedBusinessOptions);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvdGFzay9hZHZhbmNlZEJ1c2luZXNzT3B0aW9ucy9hZHZhbmNlZEJ1c2luZXNzT3B0aW9ucy5qcyJdLCJuYW1lcyI6WyJhZHZhbmNlZEJ1c2luZXNzT3B0aW9ucyIsInJlc3RyaWN0IiwidGVtcGxhdGVVcmwiLCJzY29wZSIsImxvZ2ljYWxVbml0cyIsInNlbGVjdGVkIiwiY2xvc2UiLCJzYXZlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIlRETVNlcnZpY2UiLCJBdXRoU2VydmljZSIsInRvYXN0ciIsImFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybCIsInRoaXMiLCJwcm9kTG9naWNhbFVuaXRzIiwiXyIsImdyb3VwQnkiLCJhbmd1bGFyIiwiY29weSIsInByb2QiLCJ0b2dnbGVQcm9kcyIsImlzQWxsU2VsZWN0ZWQiLCJ2YWx1ZSIsImkiLCJsZW5ndGgiLCJhZGRDbGVhckFsbFByb2QiLCJmb3JFYWNoIiwibHUiLCJhZGRDbGVhckFsbCIsIk9iamVjdCIsImtleXMiLCJzZWxlY3RlZExVTmFtZSIsIm1hcCIsIml0IiwibHVfbmFtZSIsImluZGV4T2YiLCJzYXZlRGF0YSIsInNlbGVjdGVkTFVzIiwicHVzaCIsImNvbnRyb2xsZXJBcyIsIm1vZHVsZSIsImRpcmVjdGl2ZSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsMEJBNkRMLE1BQU8sQ0FDSEMsU0FBVSxJQUNWQyxZQTdEVywwRUE4RFhDLE1BQU8sQ0FDSEMsYUFBYyxJQUNkQyxTQUFVLElBQ1ZDLE1BQU8sSUFDUEMsS0FBTSxLQUVWQyxXQWxFYSxTQUFVQyxPQUFPQyxXQUFXQyxZQUFZQyxRQUNyRCxNQUFNQyw0QkFBOEJDLEtBNEJwQyxHQTNCQUQsNEJBQTRCRSxpQkFBbUJDLEVBQUVDLFFBQVFDLFFBQVFDLEtBQUtWLE9BQU9MLGNBQWMsZ0JBQzNGUyw0QkFBNEJPLEtBQU8sR0FDbkNQLDRCQUE0QlEsWUFBYyxHQUUxQ1IsNEJBQTRCUyxjQUFpQkYsT0FDekMsSUFBSUcsT0FBUSxFQUNaLElBQUksSUFBSUMsRUFBSSxFQUFFQSxFQUFJWCw0QkFBNEJFLGlCQUFpQkssTUFBTUssT0FBU0QsSUFDckVYLDRCQUE0QkUsaUJBQWlCSyxNQUFNSSxHQUFHbkIsV0FDdkRrQixPQUFRLEdBR2hCViw0QkFBNEJPLEtBQUtBLE1BQVFHLE9BRzdDViw0QkFBNEJhLGdCQUFrQixDQUFDTixLQUFNRyxTQUNqRFYsNEJBQTRCRSxpQkFBaUJLLE1BQU1PLFFBQVFDLEtBQ3ZEQSxHQUFHdkIsU0FBV2tCLFNBSXRCViw0QkFBNEJnQixZQUFlTixRQUN2Q08sT0FBT0MsS0FBS2xCLDRCQUE0QkUsa0JBQWtCWSxRQUFRUCxPQUM5RFAsNEJBQTRCTyxLQUFLQSxNQUFRRyxNQUN6Q1YsNEJBQTRCYSxnQkFBZ0JOLEtBQU1HLFVBSXREZCxPQUFPSixVQUFZSSxPQUFPSixTQUFTb0IsT0FBUyxFQUFFLENBQzlDLE1BQU1PLGVBQWlCdkIsT0FBT0osU0FBUzRCLElBQUlDLElBQU1BLEdBQUdDLFNBQ3BETCxPQUFPQyxLQUFLbEIsNEJBQTRCRSxrQkFBa0JZLFFBQVFQLE9BQzlEUCw0QkFBNEJFLGlCQUFpQkssTUFBTU8sUUFBUUMsS0FDbkRJLGVBQWVJLFFBQVFSLEdBQUdPLFVBQVksSUFDdENQLEdBQUd2QixVQUFXLEtBR3RCUSw0QkFBNEJTLGNBQWNGLFFBSWxEUCw0QkFBNEJ3QixTQUFXLEtBQ25DLE1BQU1DLFlBQWMsR0FDcEJSLE9BQU9DLEtBQUtsQiw0QkFBNEJFLGtCQUFrQlksUUFBUVAsT0FDOURQLDRCQUE0QkUsaUJBQWlCSyxNQUFNTyxRQUFRQyxLQUNuREEsR0FBR3ZCLFVBQ0hpQyxZQUFZQyxLQUFLWCxRQUs3Qm5CLE9BQU9GLEtBQUsrQixhQUNaN0IsT0FBT0gsVUFlWGtDLGFBQWMsK0JBS3RCdEIsUUFDS3VCLE9BQU8sVUFDUEMsVUFBVSwwQkFBMkIxQyIsImZpbGUiOiJjb21wb25lbnRzL3Rhc2svYWR2YW5jZWRCdXNpbmVzc09wdGlvbnMvYWR2YW5jZWRCdXNpbmVzc09wdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhZHZhbmNlZEJ1c2luZXNzT3B0aW9ucyAoKXtcblxuICAgIHZhciB0ZW1wbGF0ZSA9IFwianMvY29tcG9uZW50cy90YXNrL2FkdmFuY2VkQnVzaW5lc3NPcHRpb25zL2FkdmFuY2VkQnVzaW5lc3NPcHRpb25zLmh0bWxcIjtcblxuICAgIHZhciBjb250cm9sbGVyID0gZnVuY3Rpb24gKCRzY29wZSxURE1TZXJ2aWNlLEF1dGhTZXJ2aWNlLHRvYXN0cikge1xuICAgICAgICBjb25zdCBhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwgPSB0aGlzO1xuICAgICAgICBhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwucHJvZExvZ2ljYWxVbml0cyA9IF8uZ3JvdXBCeShhbmd1bGFyLmNvcHkoJHNjb3BlLmxvZ2ljYWxVbml0cyksJ3Byb2R1Y3RfbmFtZScpO1xuICAgICAgICBhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwucHJvZCA9IHt9O1xuICAgICAgICBhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwudG9nZ2xlUHJvZHMgPSB7fTtcbiAgICAgICAgXG4gICAgICAgIGFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5pc0FsbFNlbGVjdGVkID0gKHByb2QpID0+IHtcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IHRydWU7XG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwO2kgPCBhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwucHJvZExvZ2ljYWxVbml0c1twcm9kXS5sZW5ndGggOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoIWFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5wcm9kTG9naWNhbFVuaXRzW3Byb2RdW2ldLnNlbGVjdGVkKXtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwucHJvZFtwcm9kXSA9IHZhbHVlO1xuICAgICAgICB9O1xuXG4gICAgICAgIGFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5hZGRDbGVhckFsbFByb2QgPSAocHJvZCwgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIGFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5wcm9kTG9naWNhbFVuaXRzW3Byb2RdLmZvckVhY2gobHUgPT4ge1xuICAgICAgICAgICAgICAgIGx1LnNlbGVjdGVkID0gdmFsdWU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5hZGRDbGVhckFsbCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgT2JqZWN0LmtleXMoYWR2YW5jZWRCdXNpbmVzc09wdGlvbnNDdHJsLnByb2RMb2dpY2FsVW5pdHMpLmZvckVhY2gocHJvZCA9PiB7XG4gICAgICAgICAgICAgICAgYWR2YW5jZWRCdXNpbmVzc09wdGlvbnNDdHJsLnByb2RbcHJvZF0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICBhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwuYWRkQ2xlYXJBbGxQcm9kKHByb2QsIHZhbHVlKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoJHNjb3BlLnNlbGVjdGVkICYmICRzY29wZS5zZWxlY3RlZC5sZW5ndGggPiAwKXtcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkTFVOYW1lID0gJHNjb3BlLnNlbGVjdGVkLm1hcChpdCA9PiBpdC5sdV9uYW1lKTtcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKGFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5wcm9kTG9naWNhbFVuaXRzKS5mb3JFYWNoKHByb2QgPT4ge1xuICAgICAgICAgICAgICAgIGFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5wcm9kTG9naWNhbFVuaXRzW3Byb2RdLmZvckVhY2gobHUgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWRMVU5hbWUuaW5kZXhPZihsdS5sdV9uYW1lKSA+PSAwKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGx1LnNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5pc0FsbFNlbGVjdGVkKHByb2QpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIGFkdmFuY2VkQnVzaW5lc3NPcHRpb25zQ3RybC5zYXZlRGF0YSA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkTFVzID0gW107XG4gICAgICAgICAgICBPYmplY3Qua2V5cyhhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwucHJvZExvZ2ljYWxVbml0cykuZm9yRWFjaChwcm9kID0+IHtcbiAgICAgICAgICAgICAgICBhZHZhbmNlZEJ1c2luZXNzT3B0aW9uc0N0cmwucHJvZExvZ2ljYWxVbml0c1twcm9kXS5mb3JFYWNoKGx1ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGx1LnNlbGVjdGVkKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkTFVzLnB1c2gobHUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJHNjb3BlLnNhdmUoc2VsZWN0ZWRMVXMpO1xuICAgICAgICAgICAgJHNjb3BlLmNsb3NlKCk7XG4gICAgICAgIH07XG5cbiAgICB9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdHJpY3Q6IFwiRVwiLFxuICAgICAgICB0ZW1wbGF0ZVVybDogdGVtcGxhdGUsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICBsb2dpY2FsVW5pdHM6ICc9JywgXG4gICAgICAgICAgICBzZWxlY3RlZCA6Jz0nLFxuICAgICAgICAgICAgY2xvc2U6ICc9JyxcbiAgICAgICAgICAgIHNhdmU6ICc9JyxcbiAgICAgICAgfSxcbiAgICAgICAgY29udHJvbGxlcjogY29udHJvbGxlcixcbiAgICAgICAgY29udHJvbGxlckFzIDonYWR2YW5jZWRCdXNpbmVzc09wdGlvbnNDdHJsJ1xuICAgIH07XG59XG5cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ1RETS1GRScpXG4gICAgLmRpcmVjdGl2ZSgnYWR2YW5jZWRCdXNpbmVzc09wdGlvbnMnLCBhZHZhbmNlZEJ1c2luZXNzT3B0aW9ucyk7XG4iXX0=
