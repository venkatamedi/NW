/*!
 * Column visibility buttons for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 */
!function(factory){"function"==typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],(function($){return factory($,window,document)})):"object"==typeof exports?module.exports=function(root,$){return root||(root=window),$&&$.fn.dataTable||($=require("datatables.net")(root,$).$),$.fn.dataTable.Buttons||require("datatables.net-buttons")(root,$),factory($,root,root.document)}:factory(jQuery,window,document)}((function($,window,document,undefined){"use strict";var DataTable=$.fn.dataTable;return $.extend(DataTable.ext.buttons,{colvis:function(dt,conf){return{extend:"collection",text:function(dt){return dt.i18n("buttons.colvis","Column visibility")},className:"buttons-colvis",buttons:[{extend:"columnsToggle",columns:conf.columns,callback:conf.callback}]}},columnsToggle:function(dt,conf){return dt.columns(conf.columns).indexes().map((function(idx){return{extend:"columnToggle",columns:idx,callback:conf.callback}})).toArray()},columnToggle:function(dt,conf){return{extend:"columnVisibility",columns:conf.columns,callback:conf.callback}},columnsVisibility:function(dt,conf){return dt.columns(conf.columns).indexes().map((function(idx){return{extend:"columnVisibility",columns:idx,visibility:conf.visibility,callback:conf.callback}})).toArray()},columnVisibility:{columns:undefined,text:function(dt,button,conf){return conf._columnText(dt,conf.columns)},className:"buttons-columnVisibility",action:function(e,dt,button,conf){var col=dt.columns(conf.columns),curr=col.visible();conf.callback(col[0][0],conf.visibility!==undefined?conf.visibility:!(curr.length&&curr[0])),col.visible(conf.visibility!==undefined?conf.visibility:!(curr.length&&curr[0]))},init:function(dt,button,conf){var that=this;dt.on("column-visibility.dt"+conf.namespace,(function(e,settings){settings.bDestroying||that.active(dt.column(conf.columns).visible())})).on("column-reorder.dt"+conf.namespace,(function(e,settings,details){if(1===dt.columns(conf.columns).count()){"number"==typeof conf.columns&&(conf.columns=details.mapping[conf.columns]);var col=dt.column(conf.columns);that.text(conf._columnText(dt,conf.columns)),that.active(col.visible())}})),this.active(dt.column(conf.columns).visible())},destroy:function(dt,button,conf){dt.off("column-visibility.dt"+conf.namespace).off("column-reorder.dt"+conf.namespace)},_columnText:function(dt,col){var idx=dt.column(col).index();return dt.settings()[0].aoColumns[idx].sTitle.replace(/\n/g," ").replace(/<.*?>/g,"").replace(/^\s+|\s+$/g,"")}},colvisRestore:{className:"buttons-colvisRestore",text:function(dt){return dt.i18n("buttons.colvisRestore","Restore visibility")},init:function(dt,button,conf){conf._visOriginal=dt.columns().indexes().map((function(idx){return dt.column(idx).visible()})).toArray()},action:function(e,dt,button,conf){dt.columns().every((function(i){var idx=dt.colReorder&&dt.colReorder.transpose?dt.colReorder.transpose(i,"toOriginal"):i;this.visible(conf._visOriginal[idx])}))}},colvisGroup:{className:"buttons-colvisGroup",action:function(e,dt,button,conf){dt.columns(conf.show).visible(!0,!1),dt.columns(conf.hide).visible(!1,!1),dt.columns.adjust()},show:[],hide:[]}}),DataTable.Buttons}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
