!function(){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}function t(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e}function T(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],s=!0,a=!1,r=void 0;try{for(var i,c=e[Symbol.iterator]();!(s=(i=c.next()).done)&&(n.push(i.value),!t||n.length!==t);s=!0);}catch(e){a=!0,r=e}finally{try{s||null==c.return||c.return()}finally{if(a)throw r}}return n}}(e,t)||n(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e){return function(e){if(Array.isArray(e))return i(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||n(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(e,t){if(e){if("string"==typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?i(e,t):void 0}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,s=new Array(t);n<t;n++)s[n]=e[n];return s}function c(e,t){var n=this;a(this,c),this.cronGenService=t,this.selectOptions={minutes:t.range(60),seconds:t.range(60),hourTypes:["AM","PM"]},e.$watch("$ctrl.use24HourTime",(function(){n.selectOptions.hours=n.use24HourTime?n.cronGenService.range(24):n.cronGenService.range(1,13)}))}var l=["quartz"],o={SUN:"Sunday",MON:"Monday",TUE:"Tuesday",WED:"Wednesday",THU:"Thursday",FRI:"Friday",SAT:"Saturday"},d={"#1":"First","#2":"Second","#3":"Third","#4":"Fourth","#5":"Fifth",L:"Last"},y={1:"January",2:"February",3:"March",4:"April",5:"May",6:"June",7:"July",8:"August",9:"September",10:"October",11:"November",12:"December"},e=function(){function s(e,t){var n=this;if(a(this,s),this.parsedOptions=this.mergeDefaultOptions(this.options),angular.extend(this,{cronGenService:t,cronFormat:"quartz",currentState:1,activeTab:function(){if(!n.parsedOptions.hideMinutesTab)return"minutes";if(!n.parsedOptions.hideHourlyTab)return"hourly";if(!n.parsedOptions.hideDailyTab)return"daily";if(!n.parsedOptions.hideWeeklyTab)return"weekly";if(!n.parsedOptions.hideMonthlyTab)return"monthly";if(!n.parsedOptions.hideYearlyTab)return"yearly";if(!n.parsedOptions.hideAdvancedTab)return"advanced";throw"No tabs available to make active"}(),selectOptions:t.selectOptions(),state:{minutes:{minutes:1,seconds:0},hourly:{hours:1,minutes:0,seconds:0},daily:{subTab:"everyDays",everyDays:{days:1,hours:this.parsedOptions.use24HourTime?0:1,minutes:0,seconds:0,hourType:this.parsedOptions.use24HourTime?null:"AM"},everyWeekDay:{hours:this.parsedOptions.use24HourTime?0:1,minutes:0,seconds:0,hourType:this.parsedOptions.use24HourTime?null:"AM"}},weekly:{MON:!0,TUE:!1,WED:!1,THU:!1,FRI:!1,SAT:!1,SUN:!1,hours:this.parsedOptions.use24HourTime?0:1,minutes:0,seconds:0,hourType:this.parsedOptions.use24HourTime?null:"AM"},monthly:{subTab:"specificDay",specificDay:{day:"1",months:1,hours:this.parsedOptions.use24HourTime?0:1,minutes:0,seconds:0,hourType:this.parsedOptions.use24HourTime?null:"AM"},specificWeekDay:{monthWeek:"#1",day:"MON",months:1,hours:this.parsedOptions.use24HourTime?0:1,minutes:0,seconds:0,hourType:this.parsedOptions.use24HourTime?null:"AM"}},yearly:{subTab:"specificMonthDay",specificMonthDay:{month:1,day:"1",hours:this.parsedOptions.use24HourTime?0:1,minutes:0,seconds:0,hourType:this.parsedOptions.use24HourTime?null:"AM"},specificMonthWeek:{monthWeek:"#1",day:"MON",month:1,hours:this.parsedOptions.use24HourTime?0:1,minutes:0,seconds:0,hourType:this.parsedOptions.use24HourTime?null:"AM"}},advanced:{expression:"0 15 10 L-2 * ?"}}}),-1==l.indexOf(this.cronFormat))throw"Desired cron format (".concat(this.cronFormat,") is not available");e.$watch("$ctrl.ngModel",(function(e){return n.handleModelChange(e)})),e.$watch("$ctrl.options",(function(e){return n.parsedOptions=n.mergeDefaultOptions(e)}),!0)}return s.$inject=["$scope","cronGenService"],t(s,[{key:"$onInit",value:function(){var t=this;this.formCtrl&&this.name&&(this.ngModelCtrl.$validators.testCronExpr=function(e){return t.cronGenService.isValid(t.cronFormat,e)})}},{key:"setActiveTab",value:function(e,t){e.preventDefault(),this.ngDisabled||(this.activeTab=t,this.regenerateCron())}},{key:"dayDisplay",value:function(e){return o[e]}},{key:"monthWeekDisplay",value:function(e){return d[e]}},{key:"monthDisplay",value:function(e){return y[e]}},{key:"monthDayDisplay",value:function(e){return"L"===e?"Last Day":"LW"===e?"Last Weekday":"1W"===e?"First Weekday":"".concat(e).concat(this.cronGenService.appendInt(e)," Day")}},{key:"processHour",value:function(e){return this.options.use24HourTime?e:(e+11)%12+1}},{key:"getHourType",value:function(e){return this.parsedOptions.use24HourTime?null:12<=e?"PM":"AM"}},{key:"hourToCron",value:function(e,t){return this.parsedOptions.use24HourTime?e:"AM"===t?12===e?0:e:12===e?12:e+12}},{key:"mergeDefaultOptions",value:function(e){return angular.extend({formInputClass:"form-control cron-gen-input",formSelectClass:"form-control cron-gen-select",formRadioClass:"cron-gen-radio",formCheckboxClass:"cron-gen-checkbox",hideMinutesTab:!1,hideHourlyTab:!1,hideDailyTab:!1,hideWeeklyTab:!1,hideMonthlyTab:!1,hideYearlyTab:!1,hideAdvancedTab:!0,use24HourTime:!1,hideSeconds:!1},e)}},{key:"regenerateCron",value:function(){var n=this;switch(this.currentState=2,this.activeTab){case"minutes":this.ngModel="".concat(this.state.minutes.seconds," 0/").concat(this.state.minutes.minutes," * 1/1 * ? *");break;case"hourly":this.ngModel="".concat(this.state.hourly.seconds," ").concat(this.state.hourly.minutes," 0/").concat(this.state.hourly.hours," 1/1 * ? *");break;case"daily":switch(this.state.daily.subTab){case"everyDays":this.ngModel="".concat(this.state.daily.everyDays.seconds," ").concat(this.state.daily.everyDays.minutes," ").concat(this.hourToCron(this.state.daily.everyDays.hours,this.state.daily.everyDays.hourType)," 1/").concat(this.state.daily.everyDays.days," * ? *");break;case"everyWeekDay":this.ngModel="".concat(this.state.daily.everyWeekDay.seconds," ").concat(this.state.daily.everyWeekDay.minutes," ").concat(this.hourToCron(this.state.daily.everyWeekDay.hours,this.state.daily.everyWeekDay.hourType)," ? * MON-FRI *");break;default:throw"Invalid cron daily subtab selection"}break;case"weekly":var e=this.selectOptions.days.reduce((function(e,t){return n.state.weekly[t]?e.concat([t]):e}),[]).join(",");this.ngModel="".concat(this.state.weekly.seconds," ").concat(this.state.weekly.minutes," ").concat(this.hourToCron(this.state.weekly.hours,this.state.weekly.hourType)," ? * ").concat(e," *");break;case"monthly":switch(this.state.monthly.subTab){case"specificDay":this.ngModel="".concat(this.state.monthly.specificDay.seconds," ").concat(this.state.monthly.specificDay.minutes," ").concat(this.hourToCron(this.state.monthly.specificDay.hours,this.state.monthly.specificDay.hourType)," ").concat(this.state.monthly.specificDay.day," 1/").concat(this.state.monthly.specificDay.months," ? *");break;case"specificWeekDay":this.ngModel="".concat(this.state.monthly.specificWeekDay.seconds," ").concat(this.state.monthly.specificWeekDay.minutes," ").concat(this.hourToCron(this.state.monthly.specificWeekDay.hours,this.state.monthly.specificWeekDay.hourType)," ? 1/").concat(this.state.monthly.specificWeekDay.months," ").concat(this.state.monthly.specificWeekDay.day).concat(this.state.monthly.specificWeekDay.monthWeek," *");break;default:throw"Invalid cron monthly subtab selection"}break;case"yearly":switch(this.state.yearly.subTab){case"specificMonthDay":this.ngModel="".concat(this.state.yearly.specificMonthDay.seconds," ").concat(this.state.yearly.specificMonthDay.minutes," ").concat(this.hourToCron(this.state.yearly.specificMonthDay.hours,this.state.yearly.specificMonthDay.hourType)," ").concat(this.state.yearly.specificMonthDay.day," ").concat(this.state.yearly.specificMonthDay.month," ? *");break;case"specificMonthWeek":this.ngModel="".concat(this.state.yearly.specificMonthWeek.seconds," ").concat(this.state.yearly.specificMonthWeek.minutes," ").concat(this.hourToCron(this.state.yearly.specificMonthWeek.hours,this.state.yearly.specificMonthWeek.hourType)," ? ").concat(this.state.yearly.specificMonthWeek.month," ").concat(this.state.yearly.specificMonthWeek.day).concat(this.state.yearly.specificMonthWeek.monthWeek," *");break;default:throw"Invalid cron yearly subtab selection"}break;case"advanced":this.ngModel=this.state.advanced.expression;break;default:throw"Invalid cron active tab selection"}}},{key:"handleModelChange",value:function(e){var t=this;if(2!==this.currentState){if(this.currentState=3,e){var n=e.split(" ");if(6!==n.length&&7!==n.length)throw"Unsupported cron expression. Expression must be 6 or 7 segments";var s=T(n,6),a=s[0],r=s[1],i=s[2],c=s[3],l=s[4],o=s[5];if(e.match(/\d+ 0\/\d+ \* 1\/1 \* \? \*/))this.activeTab="minutes",this.state.minutes.minutes=parseInt(r.substring(2)),this.state.minutes.seconds=parseInt(a);else if(e.match(/\d+ \d+ 0\/\d+ 1\/1 \* \? \*/))this.activeTab="hourly",this.state.hourly.hours=parseInt(i.substring(2)),this.state.hourly.minutes=parseInt(r),this.state.hourly.seconds=parseInt(a);else if(e.match(/\d+ \d+ \d+ 1\/\d+ \* \? \*/)){this.activeTab="daily",this.state.daily.subTab="everyDays",this.state.daily.everyDays.days=parseInt(c.substring(2));var d=parseInt(i);this.state.daily.everyDays.hours=this.processHour(d),this.state.daily.everyDays.hourType=this.getHourType(d),this.state.daily.everyDays.minutes=parseInt(r),this.state.daily.everyDays.seconds=parseInt(a)}else if(e.match(/\d+ \d+ \d+ \? \* MON-FRI \*/)){this.activeTab="daily",this.state.daily.subTab="everyWeekDay";var y=parseInt(i);this.state.daily.everyWeekDay.hours=this.processHour(y),this.state.daily.everyWeekDay.hourType=this.getHourType(y),this.state.daily.everyWeekDay.minutes=parseInt(r),this.state.daily.everyWeekDay.seconds=parseInt(a)}else if(e.match(/\d+ \d+ \d+ \? \* (MON|TUE|WED|THU|FRI|SAT|SUN)(,(MON|TUE|WED|THU|FRI|SAT|SUN))* \*/)){this.activeTab="weekly",this.selectOptions.days.forEach((function(e){return t.state.weekly[e]=!1})),o.split(",").forEach((function(e){return t.state.weekly[e]=!0}));var h=parseInt(i);this.state.weekly.hours=this.processHour(h),this.state.weekly.hourType=this.getHourType(h),this.state.weekly.minutes=parseInt(r),this.state.weekly.seconds=parseInt(a)}else if(e.match(/\d+ \d+ \d+ (\d+|L|LW|1W) 1\/\d+ \? \*/)){this.activeTab="monthly",this.state.monthly.subTab="specificDay",this.state.monthly.specificDay.day=c,this.state.monthly.specificDay.months=parseInt(l.substring(2));var u=parseInt(i);this.state.monthly.specificDay.hours=this.processHour(u),this.state.monthly.specificDay.hourType=this.getHourType(u),this.state.monthly.specificDay.minutes=parseInt(r),this.state.monthly.specificDay.seconds=parseInt(a)}else if(e.match(/\d+ \d+ \d+ \? 1\/\d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \*/)){var p=o.substr(0,3),m=o.substr(3);this.activeTab="monthly",this.state.monthly.subTab="specificWeekDay",this.state.monthly.specificWeekDay.monthWeek=m,this.state.monthly.specificWeekDay.day=p,this.state.monthly.specificWeekDay.months=parseInt(l.substring(2));var g=parseInt(i);this.state.monthly.specificWeekDay.hours=this.processHour(g),this.state.monthly.specificWeekDay.hourType=this.getHourType(g),this.state.monthly.specificWeekDay.minutes=parseInt(r),this.state.monthly.specificWeekDay.seconds=parseInt(a)}else if(e.match(/\d+ \d+ \d+ (\d+|L|LW|1W) \d+ \? \*/)){this.activeTab="yearly",this.state.yearly.subTab="specificMonthDay",this.state.yearly.specificMonthDay.month=parseInt(l),this.state.yearly.specificMonthDay.day=c;var b=parseInt(i);this.state.yearly.specificMonthDay.hours=this.processHour(b),this.state.yearly.specificMonthDay.hourType=this.getHourType(b),this.state.yearly.specificMonthDay.minutes=parseInt(r),this.state.yearly.specificMonthDay.seconds=parseInt(a)}else if(e.match(/\d+ \d+ \d+ \? \d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \*/)){var $=o.substr(0,3),f=o.substr(3);this.activeTab="yearly",this.state.yearly.subTab="specificMonthWeek",this.state.yearly.specificMonthWeek.monthWeek=f,this.state.yearly.specificMonthWeek.day=$,this.state.yearly.specificMonthWeek.month=parseInt(l);var v=parseInt(i);this.state.yearly.specificMonthWeek.hours=this.processHour(v),this.state.yearly.specificMonthWeek.hourType=this.getHourType(v),this.state.yearly.specificMonthWeek.minutes=parseInt(r),this.state.yearly.specificMonthWeek.seconds=parseInt(a)}else this.activeTab="advanced",this.state.advanced.expression=e}}else this.currentState=3}}]),s}(),u=/^\s*($|#|\w+\s*=|(\?|\*|(?:[0-5]?\d)(?:(?:-|\/|\,)(?:[0-5]?\d))?(?:,(?:[0-5]?\d)(?:(?:-|\/|\,)(?:[0-5]?\d))?)*)\s+(\?|\*|(?:[0-5]?\d)(?:(?:-|\/|\,)(?:[0-5]?\d))?(?:,(?:[0-5]?\d)(?:(?:-|\/|\,)(?:[0-5]?\d))?)*)\s+(\?|\*|(?:[01]?\d|2[0-3])(?:(?:-|\/|\,)(?:[01]?\d|2[0-3]))?(?:,(?:[01]?\d|2[0-3])(?:(?:-|\/|\,)(?:[01]?\d|2[0-3]))?)*)\s+(\?|\*|(?:0?[1-9]|[12]\d|3[01])(?:(?:-|\/|\,)(?:0?[1-9]|[12]\d|3[01]))?(?:,(?:0?[1-9]|[12]\d|3[01])(?:(?:-|\/|\,)(?:0?[1-9]|[12]\d|3[01]))?)*)\s+(\?|\*|(?:[1-9]|1[012])(?:(?:-|\/|\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:[1-9]|1[012])(?:(?:-|\/|\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\?|\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\s+(\?|\*|(?:[1-7]|MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-|\/|\,|#)(?:[1-5]))?(?:L)?(?:,(?:[1-7]|MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-|\/|\,|#)(?:[1-5]))?(?:L)?)*|\?|\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\s)+(\?|\*|(?:|\d{4})(?:(?:-|\/|\,)(?:|\d{4}))?(?:,(?:|\d{4})(?:(?:-|\/|\,)(?:|\d{4}))?)*))$/,p=function(){function e(){a(this,e)}return t(e,[{key:"isValid",value:function(e,t){if(!t)return!1;var n=t.toUpperCase();switch(e){case"quartz":return!!n.match(u);default:throw"Desired cron format (".concat(e,") is not available")}}},{key:"appendInt",value:function(e){var t="".concat(e);if(1<t.length&&"1"===t.charAt(t.length-2))return"th";switch(t.charAt(t.length-1)){case"1":return"st";case"2":return"nd";case"3":return"rd";default:return"th"}}},{key:"padNumber",value:function(e){return 1==="".concat(e).length?"0".concat(e):"".concat(e)}},{key:"range",value:function(n,s){if(void 0===s&&(s=n,n=0),n<0||s<0)throw"Range values must be positive values";return n<s?r(new Array(s-n)).map((function(e,t){return t+n})):n<s?r(new Array(n-s)).map((function(e,t){return s-t})):[]}},{key:"selectOptions",value:function(){return{months:this.range(1,13),monthWeeks:["#1","#2","#3","#4","#5","L"],days:["MON","TUE","WED","THU","FRI","SAT","SUN"],minutes:this.range(1,60),fullMinutes:this.range(60),seconds:this.range(60),hours:this.range(1,24),monthDays:this.range(1,32),monthDaysWithLasts:["1W"].concat(r(r(new Array(31)).map((function(e,t){return"".concat(t+1)}))),["LW","L"])}}}]),e}();c.$inject=["$scope","cronGenService"],angular.module("angular-cron-gen",[]).service("cronGenService",p).component("cronGenTimeSelect",{bindings:{isDisabled:"<",onChange:"&",isRequired:"<",model:"=",selectClass:"<",use24HourTime:"<",hideSeconds:"<",namePrefix:"@"},templateUrl:"angular-cron-gen/cron-gen-time-select.html",controller:c}).component("cronGen",{bindings:{ngModel:"=",ngDisabled:"<",options:"<",cronFormat:"@",templateUrl:"@",name:"@"},require:{ngModelCtrl:"ngModel",ngDisabledCtrl:"?ngDisabled",formCtrl:"^?form"},templateUrl:["$attrs",function(e){return e.templateUrl||"angular-cron-gen/cron-gen.html"}],controller:e})}(),angular.module("angular-cron-gen").run(["$templateCache",function(e){e.put("angular-cron-gen/cron-gen-time-select.html",'<div class="inline-block">\n    <select class="hours"\n            name="{{namePrefix}}Hours"\n            ng-disabled="$ctrl.isDisabled"\n            ng-change="$ctrl.onChange()"\n            ng-required="$ctrl.isRequired"\n            ng-model="$ctrl.model.hours"\n            ng-options="hour as $ctrl.cronGenService.padNumber(hour) for hour in $ctrl.selectOptions.hours"\n            ng-class="$ctrl.selectClass">\n    </select>\n    <select class="minutes"\n            name="{{namePrefix}}Minutes"\n            ng-disabled="$ctrl.isDisabled"\n            ng-change="$ctrl.onChange()"\n            ng-required="$ctrl.isRequired"\n            ng-model="$ctrl.model.minutes"\n            ng-options="minute as $ctrl.cronGenService.padNumber(minute) for minute in $ctrl.selectOptions.minutes"\n            ng-class="$ctrl.selectClass">\n    </select>\n    <select class="seconds"\n            name="{{namePrefix}}Seconds"\n            ng-show="!$ctrl.hideSeconds"\n            ng-disabled="$ctrl.isDisabled"\n            ng-change="$ctrl.onChange()"\n            ng-required="$ctrl.isRequired"\n            ng-model="$ctrl.model.seconds"\n            ng-options="second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds"\n            ng-class="$ctrl.selectClass">\n    </select>\n    <select class="hour-types"\n            name="{{namePrefix}}HourType"\n            ng-if="!$ctrl.use24HourTime"\n            ng-disabled="$ctrl.isDisabled"\n            ng-change="$ctrl.onChange()"\n            ng-model="$ctrl.model.hourType"\n            ng-options="hourType as hourType for hourType in $ctrl.selectOptions.hourTypes"\n            ng-required="$ctrl.isRequired"\n            ng-class="$ctrl.selectClass">\n    </select>\n</div>'),e.put("angular-cron-gen/cron-gen.html",'<!doctype html>\n<div class="cron-gen-main" ng-cloak>\n    <ul class="nav nav-tabs tab-nav" role="tablist">\n        <li ng-class="{\'active\': $ctrl.activeTab === \'minutes\', \'disabled\': $ctrl.ngDisabled}"\n            ng-show="!$ctrl.parsedOptions.hideMinutesTab"\n            role="presentation">\n            <a href="#"\n               aria-controls="minutes"\n               role="tab"\n               ng-click="$ctrl.setActiveTab($event, \'minutes\')">\n                Minutes\n            </a>\n        </li>\n        <li role="presentation"\n            ng-show="!$ctrl.parsedOptions.hideHourlyTab"\n            ng-class="{\'active\': $ctrl.activeTab === \'hourly\', \'disabled\': $ctrl.ngDisabled}">\n            <a href="#"\n               aria-controls="hourly"\n               role="tab"\n               ng-click="$ctrl.setActiveTab($event, \'hourly\')">\n                Hourly\n            </a>\n        </li>\n        <li role="presentation"\n            ng-show="!$ctrl.parsedOptions.hideDailyTab"\n            ng-class="{\'active\': $ctrl.activeTab === \'daily\', \'disabled\': $ctrl.ngDisabled}">\n            <a href="#"\n               aria-controls="daily"\n               role="tab"\n               ng-click="$ctrl.setActiveTab($event, \'daily\')">\n                Daily\n            </a>\n        </li>\n        <li role="presentation"\n            ng-show="!$ctrl.parsedOptions.hideWeeklyTab"\n            ng-class="{\'active\': $ctrl.activeTab === \'weekly\', \'disabled\': $ctrl.ngDisabled}">\n            <a href="#" aria-controls="weekly"\n               role="tab"\n               ng-click="$ctrl.setActiveTab($event, \'weekly\')">\n                Weekly\n            </a>\n        </li>\n        <li role="presentation"\n            ng-show="!$ctrl.parsedOptions.hideMonthlyTab"\n            ng-class="{\'active\': $ctrl.activeTab === \'monthly\', \'disabled\': $ctrl.ngDisabled}">\n            <a href="#"\n               aria-controls="monthly"\n               role="tab"\n               ng-click="$ctrl.setActiveTab($event, \'monthly\')">\n                Monthly\n            </a>\n        </li>\n        <li role="presentation"\n            ng-show="!$ctrl.parsedOptions.hideYearlyTab"\n            ng-class="{\'active\': $ctrl.activeTab === \'yearly\', \'disabled\': $ctrl.ngDisabled}">\n            <a href="#"\n               aria-controls="yearly"\n               role="tab"\n               ng-click="$ctrl.setActiveTab($event, \'yearly\')">\n                Yearly\n            </a>\n        </li>\n        <li role="presentation"\n            ng-show="!$ctrl.parsedOptions.hideAdvancedTab"\n            ng-class="{\'active\': $ctrl.activeTab === \'advanced\', \'disabled\': $ctrl.ngDisabled}">\n            <a href="#"\n               aria-controls="advanced"\n               role="tab"\n               ng-click="$ctrl.setActiveTab($event, \'advanced\')">\n                Advanced\n            </a>\n        </li>\n    </ul>\n    <div class="cron-gen-container">\n        <div class="row">\n            <div class="col-xs-12">\n                <div class="tab-content">\n                    <div class="tab-pane"\n                         ng-show="!$ctrl.parsedOptions.hideMinutesTab"\n                         ng-class="{\'active\': $ctrl.activeTab === \'minutes\'}">\n                        <div class="well well-small">\n                            Every\n                            <select class="minutes"\n                                    name="minutesMinutes"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'minutes\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.minutes.minutes"\n                                    ng-required="$ctrl.activeTab === \'minutes\'"\n                                    ng-options="minute as minute for minute in $ctrl.selectOptions.minutes"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            minute(s)\n                            <span ng-show="!$ctrl.parsedOptions.hideSeconds">on second</span>\n                            <select class="seconds"\n                                    name="minutesSeconds"\n                                    ng-show="!$ctrl.parsedOptions.hideSeconds"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'minutes\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.minutes.seconds"\n                                    ng-required="$ctrl.activeTab === \'minutes\'"\n                                    ng-options="second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                        </div>\n                    </div>\n                    <div class="tab-pane"\n                         ng-show="!$ctrl.parsedOptions.hideHourlyTab"\n                         ng-class="{\'active\': $ctrl.activeTab === \'hourly\'}">\n                        <div class="well well-small">\n                            Every\n                            <select class="hours"\n                                    name="hourlyHours"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'hourly\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.hourly.hours"\n                                    ng-required="$ctrl.activeTab === \'hourly\'"\n                                    ng-options="hour as hour for hour in $ctrl.selectOptions.hours"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            hour(s) on minute\n                            <select class="minutes"\n                                    name="hourlyMinutes"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'hourly\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.hourly.minutes"\n                                    ng-required="$ctrl.activeTab === \'hourly\'"\n                                    ng-options="minute as $ctrl.cronGenService.padNumber(minute) for minute in $ctrl.selectOptions.fullMinutes"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            <span ng-show="!$ctrl.parsedOptions.hideSeconds">and second</span>\n                            <select class="seconds"\n                                    name="hourlySeconds"\n                                    ng-show="!$ctrl.parsedOptions.hideSeconds"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'hourly\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.hourly.seconds"\n                                    ng-required="$ctrl.activeTab === \'hourly\'"\n                                    ng-options="second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                        </div>\n                    </div>\n                    <div class="tab-pane"\n                         ng-show="!$ctrl.parsedOptions.hideDailyTab"\n                         ng-class="{\'active\': $ctrl.activeTab === \'daily\'}">\n                        <div class="well well-small">\n                            <input type="radio"\n                                   value="everyDays"\n                                   name="daily-radio"\n                                   ng-disabled="$ctrl.ngDisabled"\n                                   ng-change="$ctrl.regenerateCron()"\n                                   ng-model="$ctrl.state.daily.subTab"\n                                   ng-class="$ctrl.state.formRadioClass"\n                                   checked="checked">\n                            Every\n                            <select class="days"\n                                    name="dailyEveryDaysDays"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'daily\' || $ctrl.state.daily.subTab !== \'everyDays\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.daily.everyDays.days"\n                                    ng-required="$ctrl.activeTab === \'daily\' && $ctrl.state.daily.subTab === \'everyDays\'"\n                                    ng-options="monthDay as monthDay for monthDay in $ctrl.selectOptions.monthDays"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            day(s) at\n                            <cron-gen-time-select\n                                    is-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'daily\' || $ctrl.state.daily.subTab !== \'everyDays\'"\n                                    on-change="$ctrl.regenerateCron()"\n                                    name-prefix="dailyEveryDays"\n                                    is-required="$ctrl.activeTab === \'daily\' && $ctrl.state.daily.subTab === \'everyDays\'"\n                                    model="$ctrl.state.daily.everyDays"\n                                    select-class="$ctrl.parsedOptions.formSelectClass"\n                                    use-24-hour-time="$ctrl.parsedOptions.use24HourTime"\n                                    hide-seconds="$ctrl.parsedOptions.hideSeconds">\n                            </cron-gen-time-select>\n                        </div>\n                        <div class="well well-small">\n                            <input type="radio"\n                                   value="everyWeekDay"\n                                   ng-disabled="$ctrl.ngDisabled"\n                                   ng-change="$ctrl.regenerateCron()"\n                                   ng-model="$ctrl.state.daily.subTab"\n                                   ng-class="$ctrl.state.formRadioClass"\n                                   name="daily-radio">\n                            Every week day (Monday through Friday) at\n                            <cron-gen-time-select\n                                    is-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'daily\' || $ctrl.state.daily.subTab !== \'everyWeekDay\'"\n                                    on-change="$ctrl.regenerateCron()"\n                                    name-prefix="dailyEveryWeekDay"\n                                    is-required="$ctrl.activeTab === \'daily\' && $ctrl.state.daily.subTab === \'everyWeekDay\'"\n                                    model="$ctrl.state.daily.everyWeekDay"\n                                    select-class="$ctrl.parsedOptions.formSelectClass"\n                                    use-24-hour-time="$ctrl.parsedOptions.use24HourTime"\n                                    hide-seconds="$ctrl.parsedOptions.hideSeconds">\n                            </cron-gen-time-select>\n                        </div>\n                    </div>\n                    <div class="tab-pane"\n                         ng-show="!$ctrl.parsedOptions.hideWeeklyTab"\n                         ng-class="{\'active\': $ctrl.activeTab === \'weekly\'}">\n                        <div class="well well-small row">\n                            <div class="col-sm-6">\n                                <input type="checkbox"\n                                       name="weeklyMON"\n                                       ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'weekly\'"\n                                       ng-change="$ctrl.regenerateCron()"\n                                       ng-model="$ctrl.state.weekly.MON"\n                                       ng-class="$ctrl.parsedOptions.formCheckboxClass">\n                                Monday\n                            </div>\n                            <div class="col-sm-6">\n                                <input type="checkbox"\n                                       name="weeklyTUE"\n                                       ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'weekly\'"\n                                       ng-change="$ctrl.regenerateCron()"\n                                       ng-model="$ctrl.state.weekly.TUE"\n                                       ng-class="$ctrl.parsedOptions.formCheckboxClass">\n                                Tuesday\n                            </div>\n                            <div class="col-sm-6">\n                                <input type="checkbox"\n                                       name="weeklyWED"\n                                       ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'weekly\'"\n                                       ng-change="$ctrl.regenerateCron()"\n                                       ng-model="$ctrl.state.weekly.WED"\n                                       ng-class="$ctrl.parsedOptions.formCheckboxClass">\n                                Wednesday\n                            </div>\n                            <div class="col-sm-6">\n                                <input type="checkbox"\n                                       name="weeklyTHU"\n                                       ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'weekly\'"\n                                       ng-change="$ctrl.regenerateCron()"\n                                       ng-model="$ctrl.state.weekly.THU"\n                                       ng-class="$ctrl.parsedOptions.formCheckboxClass">\n                                Thursday\n                            </div>\n                            <div class="col-sm-6">\n                                <input type="checkbox"\n                                       name="weeklyFRI"\n                                       ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'weekly\'"\n                                       ng-change="$ctrl.regenerateCron()"\n                                       ng-model="$ctrl.state.weekly.FRI"\n                                       ng-class="$ctrl.parsedOptions.formCheckboxClass">\n                                Friday\n                            </div>\n                            <div class="col-sm-6">\n                                <input type="checkbox"\n                                       name="weeklySAT"\n                                       ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'weekly\'"\n                                       ng-change="$ctrl.regenerateCron()"\n                                       ng-model="$ctrl.state.weekly.SAT"\n                                       ng-class="$ctrl.parsedOptions.formCheckboxClass">\n                                Saturday\n                            </div>\n                            <div class="col-sm-6">\n                                <input type="checkbox"\n                                       name="weeklySUN"\n                                       ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'weekly\'"\n                                       ng-change="$ctrl.regenerateCron()"\n                                       ng-model="$ctrl.state.weekly.SUN"\n                                       ng-class="$ctrl.parsedOptions.formCheckboxClass">\n                                Sunday\n                            </div>\n                        </div>\n                        Start time\n                        <cron-gen-time-select\n                                is-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'weekly\'"\n                                on-change="$ctrl.regenerateCron()"\n                                name-prefix="weekly"\n                                is-required="$ctrl.activeTab === \'weekly\'"\n                                model="$ctrl.state.weekly"\n                                select-class="$ctrl.parsedOptions.formSelectClass"\n                                use-24-hour-time="$ctrl.parsedOptions.use24HourTime"\n                                hide-seconds="$ctrl.parsedOptions.hideSeconds">\n                        </cron-gen-time-select>\n                    </div>\n                    <div class="tab-pane"\n                         ng-show="!$ctrl.parsedOptions.hideMonthlyTab"\n                         ng-class="{\'active\': $ctrl.activeTab === \'monthly\'}">\n                        <div class="well well-small">\n                            <input type="radio"\n                                   value="specificDay"\n                                   ng-disabled="$ctrl.ngDisabled"\n                                   ng-change="$ctrl.regenerateCron()"\n                                   ng-model="$ctrl.state.monthly.subTab"\n                                   ng-class="$ctrl.state.formRadioClass"\n                                   name="monthly-radio"\n                                   checked="checked">\n                            On the\n                            <select class="month-days"\n                                    name="monthlySpecificDayDay"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'monthly\' || $ctrl.state.monthly.subTab !== \'specificDay\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.monthly.specificDay.day"\n                                    ng-required="$ctrl.activeTab === \'monthly\' && $ctrl.state.monthly.subTab === \'specificDay\'"\n                                    ng-options="monthDaysWithLast as $ctrl.monthDayDisplay(monthDaysWithLast) for monthDaysWithLast in $ctrl.selectOptions.monthDaysWithLasts"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            of every\n                            <select class="months-small"\n                                    name="monthlySpecificDayMonths"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'monthly\' || $ctrl.state.monthly.subTab !== \'specificDay\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.monthly.specificDay.months"\n                                    ng-required="$ctrl.activeTab === \'monthly\' && $ctrl.state.monthly.subTab === \'specificDay\'"\n                                    ng-options="month as month for month in $ctrl.selectOptions.months"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            month(s) at\n                            <cron-gen-time-select\n                                    is-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'monthly\' || $ctrl.state.monthly.subTab !== \'specificDay\'"\n                                    on-change="$ctrl.regenerateCron()"\n                                    name-prefix="monthlySpecificDay"\n                                    is-required="$ctrl.activeTab === \'monthly\' && $ctrl.state.monthly.subTab === \'specificDay\'"\n                                    model="$ctrl.state.monthly.specificDay"\n                                    select-class="$ctrl.parsedOptions.formSelectClass"\n                                    use-24-hour-time="$ctrl.parsedOptions.use24HourTime"\n                                    hide-seconds="$ctrl.parsedOptions.hideSeconds">\n                            </cron-gen-time-select>\n                        </div>\n                        <div class="well well-small">\n                            <input type="radio"\n                                   value="specificWeekDay"\n                                   ng-disabled="$ctrl.ngDisabled"\n                                   ng-change="$ctrl.regenerateCron()"\n                                   ng-model="$ctrl.state.monthly.subTab"\n                                   ng-class="$ctrl.state.formRadioClass"\n                                   name="monthly-radio">\n                            On the\n                            <select class="day-order-in-month"\n                                    name="monthlySpecificWeekDayMonthWeek"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'monthly\' || $ctrl.state.monthly.subTab !== \'specificWeekDay\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.monthly.specificWeekDay.monthWeek"\n                                    ng-required="$ctrl.activeTab === \'monthly\' && $ctrl.state.monthly.subTab === \'specificWeekDay\'"\n                                    ng-options="monthWeek as $ctrl.monthWeekDisplay(monthWeek) for monthWeek in $ctrl.selectOptions.monthWeeks"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            <select class="week-days"\n                                    name="monthlySpecificWeekDayDay"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'monthly\' || $ctrl.state.monthly.subTab !== \'specificWeekDay\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.monthly.specificWeekDay.day"\n                                    ng-required="$ctrl.activeTab === \'monthly\' && $ctrl.state.monthly.subTab === \'specificWeekDay\'"\n                                    ng-options="day as $ctrl.dayDisplay(day) for day in $ctrl.selectOptions.days"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            of every\n                            <select class="months-small"\n                                    name="monthlySpecificWeekDayMonths"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'monthly\' || $ctrl.state.monthly.subTab !== \'specificWeekDay\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.monthly.specificWeekDay.months"\n                                    ng-required="$ctrl.activeTab === \'monthly\' && $ctrl.state.monthly.subTab === \'specificWeekDay\'"\n                                    ng-options="month as month for month in $ctrl.selectOptions.months"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            month(s) at\n                            <cron-gen-time-select\n                                    is-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'monthly\' || $ctrl.state.monthly.subTab !== \'specificWeekDay\'"\n                                    on-change="$ctrl.regenerateCron()"\n                                    name-prefix="monthlySpecificWeekDay"\n                                    is-required="$ctrl.activeTab === \'monthly\' && $ctrl.state.monthly.subTab === \'specificWeekDay\'"\n                                    model="$ctrl.state.monthly.specificWeekDay"\n                                    select-class="$ctrl.parsedOptions.formSelectClass"\n                                    use-24-hour-time="$ctrl.parsedOptions.use24HourTime"\n                                    hide-seconds="$ctrl.parsedOptions.hideSeconds">\n                            </cron-gen-time-select>\n                        </div>\n\n                    </div>\n                    <div class="tab-pane"\n                         ng-show="!$ctrl.parsedOptions.hideYearlyTab"\n                         ng-class="{\'active\': $ctrl.activeTab === \'yearly\'}">\n                        <div class="well well-small">\n                            <input type="radio"\n                                   value="specificMonthDay"\n                                   ng-disabled="$ctrl.ngDisabled"\n                                   ng-change="$ctrl.regenerateCron()"\n                                   ng-model="$ctrl.state.yearly.subTab"\n                                   ng-class="$ctrl.state.formRadioClass"\n                                   name="yearly-radio">\n                            Every\n                            <select class="months"\n                                    name="yearlySpecificMonthDayMonth"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'yearly\' || $ctrl.state.yearly.subTab !== \'specificMonthDay\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.yearly.specificMonthDay.month"\n                                    ng-required="$ctrl.activeTab === \'yearly\' && $ctrl.state.yearly.subTab === \'specificMonthDay\'"\n                                    ng-options="month as $ctrl.monthDisplay(month) for month in $ctrl.selectOptions.months"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            on the\n                            <select class="month-days"\n                                    name="yearlySpecificMonthDayDay"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'yearly\' || $ctrl.state.yearly.subTab !== \'specificMonthDay\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.yearly.specificMonthDay.day"\n                                    ng-required="$ctrl.activeTab === \'yearly\' && $ctrl.state.yearly.subTab === \'specificMonthDay\'"\n                                    ng-options="monthDaysWithLast as $ctrl.monthDayDisplay(monthDaysWithLast) for monthDaysWithLast in $ctrl.selectOptions.monthDaysWithLasts"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            at\n                            <cron-gen-time-select\n                                    is-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'yearly\' || $ctrl.state.yearly.subTab !== \'specificMonthDay\'"\n                                    on-change="$ctrl.regenerateCron()"\n                                    is-required="$ctrl.activeTab === \'yearly\' && $ctrl.state.yearly.subTab === \'specificMonthDay\'"\n                                    name-prefix="yearlySpecificMonthDay"\n                                    model="$ctrl.state.yearly.specificMonthDay"\n                                    select-class="$ctrl.parsedOptions.formSelectClass"\n                                    use-24-hour-time="$ctrl.parsedOptions.use24HourTime"\n                                    hide-seconds="$ctrl.parsedOptions.hideSeconds">\n                            </cron-gen-time-select>\n                        </div>\n                        <div class="well well-small">\n                            <input type="radio"\n                                   value="specificMonthWeek"\n                                   ng-disabled="$ctrl.ngDisabled"\n                                   ng-change="$ctrl.regenerateCron()"\n                                   ng-model="$ctrl.state.yearly.subTab"\n                                   ng-class="$ctrl.state.formRadioClass"\n                                   name="yearly-radio">\n                            On the\n                            <select class="day-order-in-month"\n                                    name="yearlySpecificMonthWeekMonthWeek"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'yearly\' || $ctrl.state.yearly.subTab !== \'specificMonthWeek\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.yearly.specificMonthWeek.monthWeek"\n                                    ng-required="$ctrl.activeTab === \'yearly\' && $ctrl.state.yearly.subTab === \'specificMonthWeek\'"\n                                    ng-options="monthWeek as $ctrl.monthWeekDisplay(monthWeek) for monthWeek in $ctrl.selectOptions.monthWeeks"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            <select class="week-days"\n                                    name="yearlySpecificMonthWeekMonthDay"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'yearly\' || $ctrl.state.yearly.subTab !== \'specificMonthWeek\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.yearly.specificMonthWeek.day"\n                                    ng-required="$ctrl.activeTab === \'yearly\' && $ctrl.state.yearly.subTab === \'specificMonthWeek\'"\n                                    ng-options="day as $ctrl.dayDisplay(day) for day in $ctrl.selectOptions.days"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            of\n                            <select class="months"\n                                    name="yearlySpecificMonthWeekMontMonth"\n                                    ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'yearly\' || $ctrl.state.yearly.subTab !== \'specificMonthWeek\'"\n                                    ng-change="$ctrl.regenerateCron()"\n                                    ng-model="$ctrl.state.yearly.specificMonthWeek.month"\n                                    ng-required="$ctrl.activeTab === \'yearly\' && $ctrl.state.yearly.subTab === \'specificMonthWeek\'"\n                                    ng-options="month as $ctrl.monthDisplay(month) for month in $ctrl.selectOptions.months"\n                                    ng-class="$ctrl.parsedOptions.formSelectClass">\n                            </select>\n                            at\n                            <cron-gen-time-select\n                                    is-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'yearly\' || $ctrl.state.yearly.subTab !== \'specificMonthWeek\'"\n                                    on-change="$ctrl.regenerateCron()"\n                                    name-prefix="yearlySpecificMonthWeek"\n                                    is-required="$ctrl.activeTab === \'yearly\' && $ctrl.state.yearly.subTab === \'specificMonthWeek\'"\n                                    model="$ctrl.state.yearly.specificMonthWeek"\n                                    select-class="$ctrl.parsedOptions.formSelectClass"\n                                    use-24-hour-time="$ctrl.parsedOptions.use24HourTime"\n                                    hide-seconds="$ctrl.parsedOptions.hideSeconds">\n                            </cron-gen-time-select>\n                        </div>\n                    </div>\n                    <div class="tab-pane"\n                         ng-show="!$ctrl.parsedOptions.hideAdvancedTab"\n                         ng-class="{\'active\': $ctrl.activeTab === \'advanced\'}">\n                        Cron Expression\n                        <input type="text"\n                               class="advanced-cron-gen-input"\n                               name="advancedExpression"\n                               ng-disabled="$ctrl.ngDisabled || $ctrl.activeTab !== \'advanced\'"\n                               ng-change="$ctrl.regenerateCron()"\n                               ng-model="$ctrl.state.advanced.expression"\n                               ng-required="$ctrl.activeTab === \'advanced\'"\n                               ng-class="$ctrl.parsedOptions.formInputClass">\n\n                        <p>More details about how to create these expressions can be found <a\n                                href="http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html#format"\n                                target="_blank">here</a>.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n')}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMvY3Jvbi1nZW4vY3Jvbi1nZW4ubWluLmpzIl0sIm5hbWVzIjpbImEiLCJlIiwidCIsIlR5cGVFcnJvciIsInMiLCJuIiwibGVuZ3RoIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJwcm90b3R5cGUiLCJUIiwiQXJyYXkiLCJpc0FycmF5IiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJyIiwiaSIsImMiLCJuZXh0IiwiZG9uZSIsInB1c2giLCJ2YWx1ZSIsInJldHVybiIsImZyb20iLCJ0b1N0cmluZyIsImNhbGwiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsInRlc3QiLCJ0aGlzIiwiY3JvbkdlblNlcnZpY2UiLCJzZWxlY3RPcHRpb25zIiwibWludXRlcyIsInJhbmdlIiwic2Vjb25kcyIsImhvdXJUeXBlcyIsIiR3YXRjaCIsImhvdXJzIiwidXNlMjRIb3VyVGltZSIsImwiLCJvIiwiU1VOIiwiTU9OIiwiVFVFIiwiV0VEIiwiVEhVIiwiRlJJIiwiU0FUIiwiZCIsIiMxIiwiIzIiLCIjMyIsIiM0IiwiIzUiLCJMIiwieSIsIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIjciLCI4IiwiOSIsIjEwIiwiMTEiLCIxMiIsInBhcnNlZE9wdGlvbnMiLCJtZXJnZURlZmF1bHRPcHRpb25zIiwib3B0aW9ucyIsImFuZ3VsYXIiLCJleHRlbmQiLCJjcm9uRm9ybWF0IiwiY3VycmVudFN0YXRlIiwiYWN0aXZlVGFiIiwiaGlkZU1pbnV0ZXNUYWIiLCJoaWRlSG91cmx5VGFiIiwiaGlkZURhaWx5VGFiIiwiaGlkZVdlZWtseVRhYiIsImhpZGVNb250aGx5VGFiIiwiaGlkZVllYXJseVRhYiIsImhpZGVBZHZhbmNlZFRhYiIsInN0YXRlIiwiaG91cmx5IiwiZGFpbHkiLCJzdWJUYWIiLCJldmVyeURheXMiLCJkYXlzIiwiaG91clR5cGUiLCJldmVyeVdlZWtEYXkiLCJ3ZWVrbHkiLCJtb250aGx5Iiwic3BlY2lmaWNEYXkiLCJkYXkiLCJtb250aHMiLCJzcGVjaWZpY1dlZWtEYXkiLCJtb250aFdlZWsiLCJ5ZWFybHkiLCJzcGVjaWZpY01vbnRoRGF5IiwibW9udGgiLCJzcGVjaWZpY01vbnRoV2VlayIsImFkdmFuY2VkIiwiZXhwcmVzc2lvbiIsImluZGV4T2YiLCJjb25jYXQiLCJoYW5kbGVNb2RlbENoYW5nZSIsIiRpbmplY3QiLCJmb3JtQ3RybCIsIm5nTW9kZWxDdHJsIiwiJHZhbGlkYXRvcnMiLCJ0ZXN0Q3JvbkV4cHIiLCJpc1ZhbGlkIiwicHJldmVudERlZmF1bHQiLCJuZ0Rpc2FibGVkIiwicmVnZW5lcmF0ZUNyb24iLCJhcHBlbmRJbnQiLCJmb3JtSW5wdXRDbGFzcyIsImZvcm1TZWxlY3RDbGFzcyIsImZvcm1SYWRpb0NsYXNzIiwiZm9ybUNoZWNrYm94Q2xhc3MiLCJoaWRlU2Vjb25kcyIsIm5nTW9kZWwiLCJob3VyVG9Dcm9uIiwicmVkdWNlIiwiam9pbiIsInNwbGl0IiwibWF0Y2giLCJwYXJzZUludCIsInN1YnN0cmluZyIsInByb2Nlc3NIb3VyIiwiZ2V0SG91clR5cGUiLCJmb3JFYWNoIiwiaCIsInUiLCJwIiwic3Vic3RyIiwibSIsImciLCJiIiwiJCIsImYiLCJ2IiwidG9VcHBlckNhc2UiLCJjaGFyQXQiLCJtYXAiLCJtb250aFdlZWtzIiwiZnVsbE1pbnV0ZXMiLCJtb250aERheXMiLCJtb250aERheXNXaXRoTGFzdHMiLCJtb2R1bGUiLCJzZXJ2aWNlIiwiY29tcG9uZW50IiwiYmluZGluZ3MiLCJpc0Rpc2FibGVkIiwib25DaGFuZ2UiLCJpc1JlcXVpcmVkIiwibW9kZWwiLCJzZWxlY3RDbGFzcyIsIm5hbWVQcmVmaXgiLCJ0ZW1wbGF0ZVVybCIsImNvbnRyb2xsZXIiLCJyZXF1aXJlIiwibmdEaXNhYmxlZEN0cmwiLCJydW4iLCJwdXQiXSwibWFwcGluZ3MiOiJDQUFDLFdBQVcsYUFBYSxTQUFTQSxFQUFFQyxFQUFFQyxHQUFHLEtBQUtE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b24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBzKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciBzPXRbbl07cy5lbnVtZXJhYmxlPXMuZW51bWVyYWJsZXx8ITEscy5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gcyYmKHMud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHMua2V5LHMpfX1mdW5jdGlvbiB0KGUsdCxuKXtyZXR1cm4gdCYmcyhlLnByb3RvdHlwZSx0KSxuJiZzKGUsbiksZX1mdW5jdGlvbiBUKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBTeW1ib2x8fCEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSkpcmV0dXJuO3ZhciBuPVtdLHM9ITAsYT0hMSxyPXZvaWQgMDt0cnl7Zm9yKHZhciBpLGM9ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShzPShpPWMubmV4dCgpKS5kb25lKSYmKG4ucHVzaChpLnZhbHVlKSwhdHx8bi5sZW5ndGghPT10KTtzPSEwKTt9Y2F0Y2goZSl7YT0hMCxyPWV9ZmluYWxseXt0cnl7c3x8bnVsbD09Yy5yZXR1cm58fGMucmV0dXJuKCl9ZmluYWxseXtpZihhKXRocm93IHJ9fXJldHVybiBufShlLHQpfHxuKGUsdCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX1mdW5jdGlvbiByKGUpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBpKGUpfShlKXx8ZnVuY3Rpb24oZSl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSlyZXR1cm4gQXJyYXkuZnJvbShlKX0oZSl8fG4oZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9ZnVuY3Rpb24gbihlLHQpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBpKGUsdCk7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKGUpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9pKGUsdCk6dm9pZCAwfX1mdW5jdGlvbiBpKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscz1uZXcgQXJyYXkodCk7bjx0O24rKylzW25dPWVbbl07cmV0dXJuIHN9ZnVuY3Rpb24gYyhlLHQpe3ZhciBuPXRoaXM7YSh0aGlzLGMpLHRoaXMuY3JvbkdlblNlcnZpY2U9dCx0aGlzLnNlbGVjdE9wdGlvbnM9e21pbnV0ZXM6dC5yYW5nZSg2MCksc2Vjb25kczp0LnJhbmdlKDYwKSxob3VyVHlwZXM6W1wiQU1cIixcIlBNXCJdfSxlLiR3YXRjaChcIiRjdHJsLnVzZTI0SG91clRpbWVcIixmdW5jdGlvbigpe24uc2VsZWN0T3B0aW9ucy5ob3Vycz1uLnVzZTI0SG91clRpbWU/bi5jcm9uR2VuU2VydmljZS5yYW5nZSgyNCk6bi5jcm9uR2VuU2VydmljZS5yYW5nZSgxLDEzKX0pfXZhciBsPVtcInF1YXJ0elwiXSxvPXtTVU46XCJTdW5kYXlcIixNT046XCJNb25kYXlcIixUVUU6XCJUdWVzZGF5XCIsV0VEOlwiV2VkbmVzZGF5XCIsVEhVOlwiVGh1cnNkYXlcIixGUkk6XCJGcmlkYXlcIixTQVQ6XCJTYXR1cmRheVwifSxkPXtcIiMxXCI6XCJGaXJzdFwiLFwiIzJcIjpcIlNlY29uZFwiLFwiIzNcIjpcIlRoaXJkXCIsXCIjNFwiOlwiRm91cnRoXCIsXCIjNVwiOlwiRmlmdGhcIixMOlwiTGFzdFwifSx5PXsxOlwiSmFudWFyeVwiLDI6XCJGZWJydWFyeVwiLDM6XCJNYXJjaFwiLDQ6XCJBcHJpbFwiLDU6XCJNYXlcIiw2OlwiSnVuZVwiLDc6XCJKdWx5XCIsODpcIkF1Z3VzdFwiLDk6XCJTZXB0ZW1iZXJcIiwxMDpcIk9jdG9iZXJcIiwxMTpcIk5vdmVtYmVyXCIsMTI6XCJEZWNlbWJlclwifSxoPTEsRD0yLGs9MyxlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gcyhlLHQpe3ZhciBuPXRoaXM7aWYoYSh0aGlzLHMpLHRoaXMucGFyc2VkT3B0aW9ucz10aGlzLm1lcmdlRGVmYXVsdE9wdGlvbnModGhpcy5vcHRpb25zKSxhbmd1bGFyLmV4dGVuZCh0aGlzLHtjcm9uR2VuU2VydmljZTp0LGNyb25Gb3JtYXQ6XCJxdWFydHpcIixjdXJyZW50U3RhdGU6aCxhY3RpdmVUYWI6ZnVuY3Rpb24oKXtpZighbi5wYXJzZWRPcHRpb25zLmhpZGVNaW51dGVzVGFiKXJldHVyblwibWludXRlc1wiO2lmKCFuLnBhcnNlZE9wdGlvbnMuaGlkZUhvdXJseVRhYilyZXR1cm5cImhvdXJseVwiO2lmKCFuLnBhcnNlZE9wdGlvbnMuaGlkZURhaWx5VGFiKXJldHVyblwiZGFpbHlcIjtpZighbi5wYXJzZWRPcHRpb25zLmhpZGVXZWVrbHlUYWIpcmV0dXJuXCJ3ZWVrbHlcIjtpZighbi5wYXJzZWRPcHRpb25zLmhpZGVNb250aGx5VGFiKXJldHVyblwibW9udGhseVwiO2lmKCFuLnBhcnNlZE9wdGlvbnMuaGlkZVllYXJseVRhYilyZXR1cm5cInllYXJseVwiO2lmKCFuLnBhcnNlZE9wdGlvbnMuaGlkZUFkdmFuY2VkVGFiKXJldHVyblwiYWR2YW5jZWRcIjt0aHJvd1wiTm8gdGFicyBhdmFpbGFibGUgdG8gbWFrZSBhY3RpdmVcIn0oKSxzZWxlY3RPcHRpb25zOnQuc2VsZWN0T3B0aW9ucygpLHN0YXRlOnttaW51dGVzOnttaW51dGVzOjEsc2Vjb25kczowfSxob3VybHk6e2hvdXJzOjEsbWludXRlczowLHNlY29uZHM6MH0sZGFpbHk6e3N1YlRhYjpcImV2ZXJ5RGF5c1wiLGV2ZXJ5RGF5czp7ZGF5czoxLGhvdXJzOnRoaXMucGFyc2VkT3B0aW9ucy51c2UyNEhvdXJUaW1lPzA6MSxtaW51dGVzOjAsc2Vjb25kczowLGhvdXJUeXBlOnRoaXMucGFyc2VkT3B0aW9ucy51c2UyNEhvdXJUaW1lP251bGw6XCJBTVwifSxldmVyeVdlZWtEYXk6e2hvdXJzOnRoaXMucGFyc2VkT3B0aW9ucy51c2UyNEhvdXJUaW1lPzA6MSxtaW51dGVzOjAsc2Vjb25kczowLGhvdXJUeXBlOnRoaXMucGFyc2VkT3B0aW9ucy51c2UyNEhvdXJUaW1lP251bGw6XCJBTVwifX0sd2Vla2x5OntNT046ITAsVFVFOiExLFdFRDohMSxUSFU6ITEsRlJJOiExLFNBVDohMSxTVU46ITEsaG91cnM6dGhpcy5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWU/MDoxLG1pbnV0ZXM6MCxzZWNvbmRzOjAsaG91clR5cGU6dGhpcy5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWU/bnVsbDpcIkFNXCJ9LG1vbnRobHk6e3N1YlRhYjpcInNwZWNpZmljRGF5XCIsc3BlY2lmaWNEYXk6e2RheTpcIjFcIixtb250aHM6MSxob3Vyczp0aGlzLnBhcnNlZE9wdGlvbnMudXNlMjRIb3VyVGltZT8wOjEsbWludXRlczowLHNlY29uZHM6MCxob3VyVHlwZTp0aGlzLnBhcnNlZE9wdGlvbnMudXNlMjRIb3VyVGltZT9udWxsOlwiQU1cIn0sc3BlY2lmaWNXZWVrRGF5Onttb250aFdlZWs6XCIjMVwiLGRheTpcIk1PTlwiLG1vbnRoczoxLGhvdXJzOnRoaXMucGFyc2VkT3B0aW9ucy51c2UyNEhvdXJUaW1lPzA6MSxtaW51dGVzOjAsc2Vjb25kczowLGhvdXJUeXBlOnRoaXMucGFyc2VkT3B0aW9ucy51c2UyNEhvdXJUaW1lP251bGw6XCJBTVwifX0seWVhcmx5OntzdWJUYWI6XCJzcGVjaWZpY01vbnRoRGF5XCIsc3BlY2lmaWNNb250aERheTp7bW9udGg6MSxkYXk6XCIxXCIsaG91cnM6dGhpcy5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWU/MDoxLG1pbnV0ZXM6MCxzZWNvbmRzOjAsaG91clR5cGU6dGhpcy5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWU/bnVsbDpcIkFNXCJ9LHNwZWNpZmljTW9udGhXZWVrOnttb250aFdlZWs6XCIjMVwiLGRheTpcIk1PTlwiLG1vbnRoOjEsaG91cnM6dGhpcy5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWU/MDoxLG1pbnV0ZXM6MCxzZWNvbmRzOjAsaG91clR5cGU6dGhpcy5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWU/bnVsbDpcIkFNXCJ9fSxhZHZhbmNlZDp7ZXhwcmVzc2lvbjpcIjAgMTUgMTAgTC0yICogP1wifX19KSwtMT09bC5pbmRleE9mKHRoaXMuY3JvbkZvcm1hdCkpdGhyb3dcIkRlc2lyZWQgY3JvbiBmb3JtYXQgKFwiLmNvbmNhdCh0aGlzLmNyb25Gb3JtYXQsXCIpIGlzIG5vdCBhdmFpbGFibGVcIik7ZS4kd2F0Y2goXCIkY3RybC5uZ01vZGVsXCIsZnVuY3Rpb24oZSl7cmV0dXJuIG4uaGFuZGxlTW9kZWxDaGFuZ2UoZSl9KSxlLiR3YXRjaChcIiRjdHJsLm9wdGlvbnNcIixmdW5jdGlvbihlKXtyZXR1cm4gbi5wYXJzZWRPcHRpb25zPW4ubWVyZ2VEZWZhdWx0T3B0aW9ucyhlKX0sITApfXJldHVybiBzLiRpbmplY3Q9W1wiJHNjb3BlXCIsXCJjcm9uR2VuU2VydmljZVwiXSx0KHMsW3trZXk6XCIkb25Jbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZm9ybUN0cmwmJnRoaXMubmFtZSYmKHRoaXMubmdNb2RlbEN0cmwuJHZhbGlkYXRvcnMudGVzdENyb25FeHByPWZ1bmN0aW9uKGUpe3JldHVybiB0LmNyb25HZW5TZXJ2aWNlLmlzVmFsaWQodC5jcm9uRm9ybWF0LGUpfSl9fSx7a2V5Olwic2V0QWN0aXZlVGFiXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtlLnByZXZlbnREZWZhdWx0KCksdGhpcy5uZ0Rpc2FibGVkfHwodGhpcy5hY3RpdmVUYWI9dCx0aGlzLnJlZ2VuZXJhdGVDcm9uKCkpfX0se2tleTpcImRheURpc3BsYXlcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gb1tlXX19LHtrZXk6XCJtb250aFdlZWtEaXNwbGF5XCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGRbZV19fSx7a2V5OlwibW9udGhEaXNwbGF5XCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHlbZV19fSx7a2V5OlwibW9udGhEYXlEaXNwbGF5XCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuXCJMXCI9PT1lP1wiTGFzdCBEYXlcIjpcIkxXXCI9PT1lP1wiTGFzdCBXZWVrZGF5XCI6XCIxV1wiPT09ZT9cIkZpcnN0IFdlZWtkYXlcIjpcIlwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5jcm9uR2VuU2VydmljZS5hcHBlbmRJbnQoZSksXCIgRGF5XCIpfX0se2tleTpcInByb2Nlc3NIb3VyXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMub3B0aW9ucy51c2UyNEhvdXJUaW1lP2U6KGUrMTEpJTEyKzF9fSx7a2V5OlwiZ2V0SG91clR5cGVcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWU/bnVsbDoxMjw9ZT9cIlBNXCI6XCJBTVwifX0se2tleTpcImhvdXJUb0Nyb25cIix2YWx1ZTpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLnBhcnNlZE9wdGlvbnMudXNlMjRIb3VyVGltZT9lOlwiQU1cIj09PXQ/MTI9PT1lPzA6ZToxMj09PWU/MTI6ZSsxMn19LHtrZXk6XCJtZXJnZURlZmF1bHRPcHRpb25zXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGFuZ3VsYXIuZXh0ZW5kKHtmb3JtSW5wdXRDbGFzczpcImZvcm0tY29udHJvbCBjcm9uLWdlbi1pbnB1dFwiLGZvcm1TZWxlY3RDbGFzczpcImZvcm0tY29udHJvbCBjcm9uLWdlbi1zZWxlY3RcIixmb3JtUmFkaW9DbGFzczpcImNyb24tZ2VuLXJhZGlvXCIsZm9ybUNoZWNrYm94Q2xhc3M6XCJjcm9uLWdlbi1jaGVja2JveFwiLGhpZGVNaW51dGVzVGFiOiExLGhpZGVIb3VybHlUYWI6ITEsaGlkZURhaWx5VGFiOiExLGhpZGVXZWVrbHlUYWI6ITEsaGlkZU1vbnRobHlUYWI6ITEsaGlkZVllYXJseVRhYjohMSxoaWRlQWR2YW5jZWRUYWI6ITAsdXNlMjRIb3VyVGltZTohMSxoaWRlU2Vjb25kczohMX0sZSl9fSx7a2V5OlwicmVnZW5lcmF0ZUNyb25cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBuPXRoaXM7c3dpdGNoKHRoaXMuY3VycmVudFN0YXRlPUQsdGhpcy5hY3RpdmVUYWIpe2Nhc2VcIm1pbnV0ZXNcIjp0aGlzLm5nTW9kZWw9XCJcIi5jb25jYXQodGhpcy5zdGF0ZS5taW51dGVzLnNlY29uZHMsXCIgMC9cIikuY29uY2F0KHRoaXMuc3RhdGUubWludXRlcy5taW51dGVzLFwiICogMS8xICogPyAqXCIpO2JyZWFrO2Nhc2VcImhvdXJseVwiOnRoaXMubmdNb2RlbD1cIlwiLmNvbmNhdCh0aGlzLnN0YXRlLmhvdXJseS5zZWNvbmRzLFwiIFwiKS5jb25jYXQodGhpcy5zdGF0ZS5ob3VybHkubWludXRlcyxcIiAwL1wiKS5jb25jYXQodGhpcy5zdGF0ZS5ob3VybHkuaG91cnMsXCIgMS8xICogPyAqXCIpO2JyZWFrO2Nhc2VcImRhaWx5XCI6c3dpdGNoKHRoaXMuc3RhdGUuZGFpbHkuc3ViVGFiKXtjYXNlXCJldmVyeURheXNcIjp0aGlzLm5nTW9kZWw9XCJcIi5jb25jYXQodGhpcy5zdGF0ZS5kYWlseS5ldmVyeURheXMuc2Vjb25kcyxcIiBcIikuY29uY2F0KHRoaXMuc3RhdGUuZGFpbHkuZXZlcnlEYXlzLm1pbnV0ZXMsXCIgXCIpLmNvbmNhdCh0aGlzLmhvdXJUb0Nyb24odGhpcy5zdGF0ZS5kYWlseS5ldmVyeURheXMuaG91cnMsdGhpcy5zdGF0ZS5kYWlseS5ldmVyeURheXMuaG91clR5cGUpLFwiIDEvXCIpLmNvbmNhdCh0aGlzLnN0YXRlLmRhaWx5LmV2ZXJ5RGF5cy5kYXlzLFwiICogPyAqXCIpO2JyZWFrO2Nhc2VcImV2ZXJ5V2Vla0RheVwiOnRoaXMubmdNb2RlbD1cIlwiLmNvbmNhdCh0aGlzLnN0YXRlLmRhaWx5LmV2ZXJ5V2Vla0RheS5zZWNvbmRzLFwiIFwiKS5jb25jYXQodGhpcy5zdGF0ZS5kYWlseS5ldmVyeVdlZWtEYXkubWludXRlcyxcIiBcIikuY29uY2F0KHRoaXMuaG91clRvQ3Jvbih0aGlzLnN0YXRlLmRhaWx5LmV2ZXJ5V2Vla0RheS5ob3Vycyx0aGlzLnN0YXRlLmRhaWx5LmV2ZXJ5V2Vla0RheS5ob3VyVHlwZSksXCIgPyAqIE1PTi1GUkkgKlwiKTticmVhaztkZWZhdWx0OnRocm93XCJJbnZhbGlkIGNyb24gZGFpbHkgc3VidGFiIHNlbGVjdGlvblwifWJyZWFrO2Nhc2VcIndlZWtseVwiOnZhciBlPXRoaXMuc2VsZWN0T3B0aW9ucy5kYXlzLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBuLnN0YXRlLndlZWtseVt0XT9lLmNvbmNhdChbdF0pOmV9LFtdKS5qb2luKFwiLFwiKTt0aGlzLm5nTW9kZWw9XCJcIi5jb25jYXQodGhpcy5zdGF0ZS53ZWVrbHkuc2Vjb25kcyxcIiBcIikuY29uY2F0KHRoaXMuc3RhdGUud2Vla2x5Lm1pbnV0ZXMsXCIgXCIpLmNvbmNhdCh0aGlzLmhvdXJUb0Nyb24odGhpcy5zdGF0ZS53ZWVrbHkuaG91cnMsdGhpcy5zdGF0ZS53ZWVrbHkuaG91clR5cGUpLFwiID8gKiBcIikuY29uY2F0KGUsXCIgKlwiKTticmVhaztjYXNlXCJtb250aGx5XCI6c3dpdGNoKHRoaXMuc3RhdGUubW9udGhseS5zdWJUYWIpe2Nhc2VcInNwZWNpZmljRGF5XCI6dGhpcy5uZ01vZGVsPVwiXCIuY29uY2F0KHRoaXMuc3RhdGUubW9udGhseS5zcGVjaWZpY0RheS5zZWNvbmRzLFwiIFwiKS5jb25jYXQodGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljRGF5Lm1pbnV0ZXMsXCIgXCIpLmNvbmNhdCh0aGlzLmhvdXJUb0Nyb24odGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljRGF5LmhvdXJzLHRoaXMuc3RhdGUubW9udGhseS5zcGVjaWZpY0RheS5ob3VyVHlwZSksXCIgXCIpLmNvbmNhdCh0aGlzLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNEYXkuZGF5LFwiIDEvXCIpLmNvbmNhdCh0aGlzLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNEYXkubW9udGhzLFwiID8gKlwiKTticmVhaztjYXNlXCJzcGVjaWZpY1dlZWtEYXlcIjp0aGlzLm5nTW9kZWw9XCJcIi5jb25jYXQodGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljV2Vla0RheS5zZWNvbmRzLFwiIFwiKS5jb25jYXQodGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljV2Vla0RheS5taW51dGVzLFwiIFwiKS5jb25jYXQodGhpcy5ob3VyVG9Dcm9uKHRoaXMuc3RhdGUubW9udGhseS5zcGVjaWZpY1dlZWtEYXkuaG91cnMsdGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljV2Vla0RheS5ob3VyVHlwZSksXCIgPyAxL1wiKS5jb25jYXQodGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljV2Vla0RheS5tb250aHMsXCIgXCIpLmNvbmNhdCh0aGlzLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNXZWVrRGF5LmRheSkuY29uY2F0KHRoaXMuc3RhdGUubW9udGhseS5zcGVjaWZpY1dlZWtEYXkubW9udGhXZWVrLFwiICpcIik7YnJlYWs7ZGVmYXVsdDp0aHJvd1wiSW52YWxpZCBjcm9uIG1vbnRobHkgc3VidGFiIHNlbGVjdGlvblwifWJyZWFrO2Nhc2VcInllYXJseVwiOnN3aXRjaCh0aGlzLnN0YXRlLnllYXJseS5zdWJUYWIpe2Nhc2VcInNwZWNpZmljTW9udGhEYXlcIjp0aGlzLm5nTW9kZWw9XCJcIi5jb25jYXQodGhpcy5zdGF0ZS55ZWFybHkuc3BlY2lmaWNNb250aERheS5zZWNvbmRzLFwiIFwiKS5jb25jYXQodGhpcy5zdGF0ZS55ZWFybHkuc3BlY2lmaWNNb250aERheS5taW51dGVzLFwiIFwiKS5jb25jYXQodGhpcy5ob3VyVG9Dcm9uKHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhEYXkuaG91cnMsdGhpcy5zdGF0ZS55ZWFybHkuc3BlY2lmaWNNb250aERheS5ob3VyVHlwZSksXCIgXCIpLmNvbmNhdCh0aGlzLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoRGF5LmRheSxcIiBcIikuY29uY2F0KHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhEYXkubW9udGgsXCIgPyAqXCIpO2JyZWFrO2Nhc2VcInNwZWNpZmljTW9udGhXZWVrXCI6dGhpcy5uZ01vZGVsPVwiXCIuY29uY2F0KHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhXZWVrLnNlY29uZHMsXCIgXCIpLmNvbmNhdCh0aGlzLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoV2Vlay5taW51dGVzLFwiIFwiKS5jb25jYXQodGhpcy5ob3VyVG9Dcm9uKHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhXZWVrLmhvdXJzLHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhXZWVrLmhvdXJUeXBlKSxcIiA/IFwiKS5jb25jYXQodGhpcy5zdGF0ZS55ZWFybHkuc3BlY2lmaWNNb250aFdlZWsubW9udGgsXCIgXCIpLmNvbmNhdCh0aGlzLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoV2Vlay5kYXkpLmNvbmNhdCh0aGlzLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoV2Vlay5tb250aFdlZWssXCIgKlwiKTticmVhaztkZWZhdWx0OnRocm93XCJJbnZhbGlkIGNyb24geWVhcmx5IHN1YnRhYiBzZWxlY3Rpb25cIn1icmVhaztjYXNlXCJhZHZhbmNlZFwiOnRoaXMubmdNb2RlbD10aGlzLnN0YXRlLmFkdmFuY2VkLmV4cHJlc3Npb247YnJlYWs7ZGVmYXVsdDp0aHJvd1wiSW52YWxpZCBjcm9uIGFjdGl2ZSB0YWIgc2VsZWN0aW9uXCJ9fX0se2tleTpcImhhbmRsZU1vZGVsQ2hhbmdlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZih0aGlzLmN1cnJlbnRTdGF0ZSE9PUQpe2lmKHRoaXMuY3VycmVudFN0YXRlPWssZSl7dmFyIG49ZS5zcGxpdChcIiBcIik7aWYoNiE9PW4ubGVuZ3RoJiY3IT09bi5sZW5ndGgpdGhyb3dcIlVuc3VwcG9ydGVkIGNyb24gZXhwcmVzc2lvbi4gRXhwcmVzc2lvbiBtdXN0IGJlIDYgb3IgNyBzZWdtZW50c1wiO3ZhciBzPVQobiw2KSxhPXNbMF0scj1zWzFdLGk9c1syXSxjPXNbM10sbD1zWzRdLG89c1s1XTtpZihlLm1hdGNoKC9cXGQrIDBcXC9cXGQrIFxcKiAxXFwvMSBcXCogXFw/IFxcKi8pKXRoaXMuYWN0aXZlVGFiPVwibWludXRlc1wiLHRoaXMuc3RhdGUubWludXRlcy5taW51dGVzPXBhcnNlSW50KHIuc3Vic3RyaW5nKDIpKSx0aGlzLnN0YXRlLm1pbnV0ZXMuc2Vjb25kcz1wYXJzZUludChhKTtlbHNlIGlmKGUubWF0Y2goL1xcZCsgXFxkKyAwXFwvXFxkKyAxXFwvMSBcXCogXFw/IFxcKi8pKXRoaXMuYWN0aXZlVGFiPVwiaG91cmx5XCIsdGhpcy5zdGF0ZS5ob3VybHkuaG91cnM9cGFyc2VJbnQoaS5zdWJzdHJpbmcoMikpLHRoaXMuc3RhdGUuaG91cmx5Lm1pbnV0ZXM9cGFyc2VJbnQociksdGhpcy5zdGF0ZS5ob3VybHkuc2Vjb25kcz1wYXJzZUludChhKTtlbHNlIGlmKGUubWF0Y2goL1xcZCsgXFxkKyBcXGQrIDFcXC9cXGQrIFxcKiBcXD8gXFwqLykpe3RoaXMuYWN0aXZlVGFiPVwiZGFpbHlcIix0aGlzLnN0YXRlLmRhaWx5LnN1YlRhYj1cImV2ZXJ5RGF5c1wiLHRoaXMuc3RhdGUuZGFpbHkuZXZlcnlEYXlzLmRheXM9cGFyc2VJbnQoYy5zdWJzdHJpbmcoMikpO3ZhciBkPXBhcnNlSW50KGkpO3RoaXMuc3RhdGUuZGFpbHkuZXZlcnlEYXlzLmhvdXJzPXRoaXMucHJvY2Vzc0hvdXIoZCksdGhpcy5zdGF0ZS5kYWlseS5ldmVyeURheXMuaG91clR5cGU9dGhpcy5nZXRIb3VyVHlwZShkKSx0aGlzLnN0YXRlLmRhaWx5LmV2ZXJ5RGF5cy5taW51dGVzPXBhcnNlSW50KHIpLHRoaXMuc3RhdGUuZGFpbHkuZXZlcnlEYXlzLnNlY29uZHM9cGFyc2VJbnQoYSl9ZWxzZSBpZihlLm1hdGNoKC9cXGQrIFxcZCsgXFxkKyBcXD8gXFwqIE1PTi1GUkkgXFwqLykpe3RoaXMuYWN0aXZlVGFiPVwiZGFpbHlcIix0aGlzLnN0YXRlLmRhaWx5LnN1YlRhYj1cImV2ZXJ5V2Vla0RheVwiO3ZhciB5PXBhcnNlSW50KGkpO3RoaXMuc3RhdGUuZGFpbHkuZXZlcnlXZWVrRGF5LmhvdXJzPXRoaXMucHJvY2Vzc0hvdXIoeSksdGhpcy5zdGF0ZS5kYWlseS5ldmVyeVdlZWtEYXkuaG91clR5cGU9dGhpcy5nZXRIb3VyVHlwZSh5KSx0aGlzLnN0YXRlLmRhaWx5LmV2ZXJ5V2Vla0RheS5taW51dGVzPXBhcnNlSW50KHIpLHRoaXMuc3RhdGUuZGFpbHkuZXZlcnlXZWVrRGF5LnNlY29uZHM9cGFyc2VJbnQoYSl9ZWxzZSBpZihlLm1hdGNoKC9cXGQrIFxcZCsgXFxkKyBcXD8gXFwqIChNT058VFVFfFdFRHxUSFV8RlJJfFNBVHxTVU4pKCwoTU9OfFRVRXxXRUR8VEhVfEZSSXxTQVR8U1VOKSkqIFxcKi8pKXt0aGlzLmFjdGl2ZVRhYj1cIndlZWtseVwiLHRoaXMuc2VsZWN0T3B0aW9ucy5kYXlzLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuc3RhdGUud2Vla2x5W2VdPSExfSksby5zcGxpdChcIixcIikuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gdC5zdGF0ZS53ZWVrbHlbZV09ITB9KTt2YXIgaD1wYXJzZUludChpKTt0aGlzLnN0YXRlLndlZWtseS5ob3Vycz10aGlzLnByb2Nlc3NIb3VyKGgpLHRoaXMuc3RhdGUud2Vla2x5LmhvdXJUeXBlPXRoaXMuZ2V0SG91clR5cGUoaCksdGhpcy5zdGF0ZS53ZWVrbHkubWludXRlcz1wYXJzZUludChyKSx0aGlzLnN0YXRlLndlZWtseS5zZWNvbmRzPXBhcnNlSW50KGEpfWVsc2UgaWYoZS5tYXRjaCgvXFxkKyBcXGQrIFxcZCsgKFxcZCt8THxMV3wxVykgMVxcL1xcZCsgXFw/IFxcKi8pKXt0aGlzLmFjdGl2ZVRhYj1cIm1vbnRobHlcIix0aGlzLnN0YXRlLm1vbnRobHkuc3ViVGFiPVwic3BlY2lmaWNEYXlcIix0aGlzLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNEYXkuZGF5PWMsdGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljRGF5Lm1vbnRocz1wYXJzZUludChsLnN1YnN0cmluZygyKSk7dmFyIHU9cGFyc2VJbnQoaSk7dGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljRGF5LmhvdXJzPXRoaXMucHJvY2Vzc0hvdXIodSksdGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljRGF5LmhvdXJUeXBlPXRoaXMuZ2V0SG91clR5cGUodSksdGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljRGF5Lm1pbnV0ZXM9cGFyc2VJbnQociksdGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljRGF5LnNlY29uZHM9cGFyc2VJbnQoYSl9ZWxzZSBpZihlLm1hdGNoKC9cXGQrIFxcZCsgXFxkKyBcXD8gMVxcL1xcZCsgKE1PTnxUVUV8V0VEfFRIVXxGUkl8U0FUfFNVTikoKCNbMS01XSl8TCkgXFwqLykpe3ZhciBwPW8uc3Vic3RyKDAsMyksbT1vLnN1YnN0cigzKTt0aGlzLmFjdGl2ZVRhYj1cIm1vbnRobHlcIix0aGlzLnN0YXRlLm1vbnRobHkuc3ViVGFiPVwic3BlY2lmaWNXZWVrRGF5XCIsdGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljV2Vla0RheS5tb250aFdlZWs9bSx0aGlzLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNXZWVrRGF5LmRheT1wLHRoaXMuc3RhdGUubW9udGhseS5zcGVjaWZpY1dlZWtEYXkubW9udGhzPXBhcnNlSW50KGwuc3Vic3RyaW5nKDIpKTt2YXIgZz1wYXJzZUludChpKTt0aGlzLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNXZWVrRGF5LmhvdXJzPXRoaXMucHJvY2Vzc0hvdXIoZyksdGhpcy5zdGF0ZS5tb250aGx5LnNwZWNpZmljV2Vla0RheS5ob3VyVHlwZT10aGlzLmdldEhvdXJUeXBlKGcpLHRoaXMuc3RhdGUubW9udGhseS5zcGVjaWZpY1dlZWtEYXkubWludXRlcz1wYXJzZUludChyKSx0aGlzLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNXZWVrRGF5LnNlY29uZHM9cGFyc2VJbnQoYSl9ZWxzZSBpZihlLm1hdGNoKC9cXGQrIFxcZCsgXFxkKyAoXFxkK3xMfExXfDFXKSBcXGQrIFxcPyBcXCovKSl7dGhpcy5hY3RpdmVUYWI9XCJ5ZWFybHlcIix0aGlzLnN0YXRlLnllYXJseS5zdWJUYWI9XCJzcGVjaWZpY01vbnRoRGF5XCIsdGhpcy5zdGF0ZS55ZWFybHkuc3BlY2lmaWNNb250aERheS5tb250aD1wYXJzZUludChsKSx0aGlzLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoRGF5LmRheT1jO3ZhciBiPXBhcnNlSW50KGkpO3RoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhEYXkuaG91cnM9dGhpcy5wcm9jZXNzSG91cihiKSx0aGlzLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoRGF5LmhvdXJUeXBlPXRoaXMuZ2V0SG91clR5cGUoYiksdGhpcy5zdGF0ZS55ZWFybHkuc3BlY2lmaWNNb250aERheS5taW51dGVzPXBhcnNlSW50KHIpLHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhEYXkuc2Vjb25kcz1wYXJzZUludChhKX1lbHNlIGlmKGUubWF0Y2goL1xcZCsgXFxkKyBcXGQrIFxcPyBcXGQrIChNT058VFVFfFdFRHxUSFV8RlJJfFNBVHxTVU4pKCgjWzEtNV0pfEwpIFxcKi8pKXt2YXIgJD1vLnN1YnN0cigwLDMpLGY9by5zdWJzdHIoMyk7dGhpcy5hY3RpdmVUYWI9XCJ5ZWFybHlcIix0aGlzLnN0YXRlLnllYXJseS5zdWJUYWI9XCJzcGVjaWZpY01vbnRoV2Vla1wiLHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhXZWVrLm1vbnRoV2Vlaz1mLHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhXZWVrLmRheT0kLHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhXZWVrLm1vbnRoPXBhcnNlSW50KGwpO3ZhciB2PXBhcnNlSW50KGkpO3RoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhXZWVrLmhvdXJzPXRoaXMucHJvY2Vzc0hvdXIodiksdGhpcy5zdGF0ZS55ZWFybHkuc3BlY2lmaWNNb250aFdlZWsuaG91clR5cGU9dGhpcy5nZXRIb3VyVHlwZSh2KSx0aGlzLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoV2Vlay5taW51dGVzPXBhcnNlSW50KHIpLHRoaXMuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhXZWVrLnNlY29uZHM9cGFyc2VJbnQoYSl9ZWxzZSB0aGlzLmFjdGl2ZVRhYj1cImFkdmFuY2VkXCIsdGhpcy5zdGF0ZS5hZHZhbmNlZC5leHByZXNzaW9uPWV9fWVsc2UgdGhpcy5jdXJyZW50U3RhdGU9a319XSksc30oKSx1PS9eXFxzKigkfCN8XFx3K1xccyo9fChcXD98XFwqfCg/OlswLTVdP1xcZCkoPzooPzotfFxcL3xcXCwpKD86WzAtNV0/XFxkKSk/KD86LCg/OlswLTVdP1xcZCkoPzooPzotfFxcL3xcXCwpKD86WzAtNV0/XFxkKSk/KSopXFxzKyhcXD98XFwqfCg/OlswLTVdP1xcZCkoPzooPzotfFxcL3xcXCwpKD86WzAtNV0/XFxkKSk/KD86LCg/OlswLTVdP1xcZCkoPzooPzotfFxcL3xcXCwpKD86WzAtNV0/XFxkKSk/KSopXFxzKyhcXD98XFwqfCg/OlswMV0/XFxkfDJbMC0zXSkoPzooPzotfFxcL3xcXCwpKD86WzAxXT9cXGR8MlswLTNdKSk/KD86LCg/OlswMV0/XFxkfDJbMC0zXSkoPzooPzotfFxcL3xcXCwpKD86WzAxXT9cXGR8MlswLTNdKSk/KSopXFxzKyhcXD98XFwqfCg/OjA/WzEtOV18WzEyXVxcZHwzWzAxXSkoPzooPzotfFxcL3xcXCwpKD86MD9bMS05XXxbMTJdXFxkfDNbMDFdKSk/KD86LCg/OjA/WzEtOV18WzEyXVxcZHwzWzAxXSkoPzooPzotfFxcL3xcXCwpKD86MD9bMS05XXxbMTJdXFxkfDNbMDFdKSk/KSopXFxzKyhcXD98XFwqfCg/OlsxLTldfDFbMDEyXSkoPzooPzotfFxcL3xcXCwpKD86WzEtOV18MVswMTJdKSk/KD86THxXKT8oPzosKD86WzEtOV18MVswMTJdKSg/Oig/Oi18XFwvfFxcLCkoPzpbMS05XXwxWzAxMl0pKT8oPzpMfFcpPykqfFxcP3xcXCp8KD86SkFOfEZFQnxNQVJ8QVBSfE1BWXxKVU58SlVMfEFVR3xTRVB8T0NUfE5PVnxERUMpKD86KD86LSkoPzpKQU58RkVCfE1BUnxBUFJ8TUFZfEpVTnxKVUx8QVVHfFNFUHxPQ1R8Tk9WfERFQykpPyg/OiwoPzpKQU58RkVCfE1BUnxBUFJ8TUFZfEpVTnxKVUx8QVVHfFNFUHxPQ1R8Tk9WfERFQykoPzooPzotKSg/OkpBTnxGRUJ8TUFSfEFQUnxNQVl8SlVOfEpVTHxBVUd8U0VQfE9DVHxOT1Z8REVDKSk/KSopXFxzKyhcXD98XFwqfCg/OlsxLTddfE1PTnxUVUV8V0VEfFRIVXxGUkl8U0FUfFNVTikoPzooPzotfFxcL3xcXCx8IykoPzpbMS01XSkpPyg/OkwpPyg/OiwoPzpbMS03XXxNT058VFVFfFdFRHxUSFV8RlJJfFNBVHxTVU4pKD86KD86LXxcXC98XFwsfCMpKD86WzEtNV0pKT8oPzpMKT8pKnxcXD98XFwqfCg/Ok1PTnxUVUV8V0VEfFRIVXxGUkl8U0FUfFNVTikoPzooPzotKSg/Ok1PTnxUVUV8V0VEfFRIVXxGUkl8U0FUfFNVTikpPyg/OiwoPzpNT058VFVFfFdFRHxUSFV8RlJJfFNBVHxTVU4pKD86KD86LSkoPzpNT058VFVFfFdFRHxUSFV8RlJJfFNBVHxTVU4pKT8pKikofFxccykrKFxcP3xcXCp8KD86fFxcZHs0fSkoPzooPzotfFxcL3xcXCwpKD86fFxcZHs0fSkpPyg/OiwoPzp8XFxkezR9KSg/Oig/Oi18XFwvfFxcLCkoPzp8XFxkezR9KSk/KSopKSQvLHA9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7YSh0aGlzLGUpfXJldHVybiB0KGUsW3trZXk6XCJpc1ZhbGlkXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtpZighdClyZXR1cm4hMTt2YXIgbj10LnRvVXBwZXJDYXNlKCk7c3dpdGNoKGUpe2Nhc2VcInF1YXJ0elwiOnJldHVybiEhbi5tYXRjaCh1KTtkZWZhdWx0OnRocm93XCJEZXNpcmVkIGNyb24gZm9ybWF0IChcIi5jb25jYXQoZSxcIikgaXMgbm90IGF2YWlsYWJsZVwiKX19fSx7a2V5OlwiYXBwZW5kSW50XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9XCJcIi5jb25jYXQoZSk7aWYoMTx0Lmxlbmd0aCYmXCIxXCI9PT10LmNoYXJBdCh0Lmxlbmd0aC0yKSlyZXR1cm5cInRoXCI7c3dpdGNoKHQuY2hhckF0KHQubGVuZ3RoLTEpKXtjYXNlXCIxXCI6cmV0dXJuXCJzdFwiO2Nhc2VcIjJcIjpyZXR1cm5cIm5kXCI7Y2FzZVwiM1wiOnJldHVyblwicmRcIjtkZWZhdWx0OnJldHVyblwidGhcIn19fSx7a2V5OlwicGFkTnVtYmVyXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIDE9PT1cIlwiLmNvbmNhdChlKS5sZW5ndGg/XCIwXCIuY29uY2F0KGUpOlwiXCIuY29uY2F0KGUpfX0se2tleTpcInJhbmdlXCIsdmFsdWU6ZnVuY3Rpb24obixzKXtpZih2b2lkIDA9PT1zJiYocz1uLG49MCksbjwwfHxzPDApdGhyb3dcIlJhbmdlIHZhbHVlcyBtdXN0IGJlIHBvc2l0aXZlIHZhbHVlc1wiO3JldHVybiBuPHM/cihuZXcgQXJyYXkocy1uKSkubWFwKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQrbn0pOm48cz9yKG5ldyBBcnJheShuLXMpKS5tYXAoZnVuY3Rpb24oZSx0KXtyZXR1cm4gcy10fSk6W119fSx7a2V5Olwic2VsZWN0T3B0aW9uc1wiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJue21vbnRoczp0aGlzLnJhbmdlKDEsMTMpLG1vbnRoV2Vla3M6W1wiIzFcIixcIiMyXCIsXCIjM1wiLFwiIzRcIixcIiM1XCIsXCJMXCJdLGRheXM6W1wiTU9OXCIsXCJUVUVcIixcIldFRFwiLFwiVEhVXCIsXCJGUklcIixcIlNBVFwiLFwiU1VOXCJdLG1pbnV0ZXM6dGhpcy5yYW5nZSgxLDYwKSxmdWxsTWludXRlczp0aGlzLnJhbmdlKDYwKSxzZWNvbmRzOnRoaXMucmFuZ2UoNjApLGhvdXJzOnRoaXMucmFuZ2UoMSwyNCksbW9udGhEYXlzOnRoaXMucmFuZ2UoMSwzMiksbW9udGhEYXlzV2l0aExhc3RzOltcIjFXXCJdLmNvbmNhdChyKHIobmV3IEFycmF5KDMxKSkubWFwKGZ1bmN0aW9uKGUsdCl7cmV0dXJuXCJcIi5jb25jYXQodCsxKX0pKSxbXCJMV1wiLFwiTFwiXSl9fX1dKSxlfSgpO2MuJGluamVjdD1bXCIkc2NvcGVcIixcImNyb25HZW5TZXJ2aWNlXCJdLGFuZ3VsYXIubW9kdWxlKFwiYW5ndWxhci1jcm9uLWdlblwiLFtdKS5zZXJ2aWNlKFwiY3JvbkdlblNlcnZpY2VcIixwKS5jb21wb25lbnQoXCJjcm9uR2VuVGltZVNlbGVjdFwiLHtiaW5kaW5nczp7aXNEaXNhYmxlZDpcIjxcIixvbkNoYW5nZTpcIiZcIixpc1JlcXVpcmVkOlwiPFwiLG1vZGVsOlwiPVwiLHNlbGVjdENsYXNzOlwiPFwiLHVzZTI0SG91clRpbWU6XCI8XCIsaGlkZVNlY29uZHM6XCI8XCIsbmFtZVByZWZpeDpcIkBcIn0sdGVtcGxhdGVVcmw6XCJhbmd1bGFyLWNyb24tZ2VuL2Nyb24tZ2VuLXRpbWUtc2VsZWN0Lmh0bWxcIixjb250cm9sbGVyOmN9KS5jb21wb25lbnQoXCJjcm9uR2VuXCIse2JpbmRpbmdzOntuZ01vZGVsOlwiPVwiLG5nRGlzYWJsZWQ6XCI8XCIsb3B0aW9uczpcIjxcIixjcm9uRm9ybWF0OlwiQFwiLHRlbXBsYXRlVXJsOlwiQFwiLG5hbWU6XCJAXCJ9LHJlcXVpcmU6e25nTW9kZWxDdHJsOlwibmdNb2RlbFwiLG5nRGlzYWJsZWRDdHJsOlwiP25nRGlzYWJsZWRcIixmb3JtQ3RybDpcIl4/Zm9ybVwifSx0ZW1wbGF0ZVVybDpbXCIkYXR0cnNcIixmdW5jdGlvbihlKXtyZXR1cm4gZS50ZW1wbGF0ZVVybHx8XCJhbmd1bGFyLWNyb24tZ2VuL2Nyb24tZ2VuLmh0bWxcIn1dLGNvbnRyb2xsZXI6ZX0pfSgpLGFuZ3VsYXIubW9kdWxlKFwiYW5ndWxhci1jcm9uLWdlblwiKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIixmdW5jdGlvbihlKXtlLnB1dChcImFuZ3VsYXItY3Jvbi1nZW4vY3Jvbi1nZW4tdGltZS1zZWxlY3QuaHRtbFwiLCc8ZGl2IGNsYXNzPVwiaW5saW5lLWJsb2NrXCI+XFxuICAgIDxzZWxlY3QgY2xhc3M9XCJob3Vyc1wiXFxuICAgICAgICAgICAgbmFtZT1cInt7bmFtZVByZWZpeH19SG91cnNcIlxcbiAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwuaXNEaXNhYmxlZFwiXFxuICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwub25DaGFuZ2UoKVwiXFxuICAgICAgICAgICAgbmctcmVxdWlyZWQ9XCIkY3RybC5pc1JlcXVpcmVkXCJcXG4gICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLm1vZGVsLmhvdXJzXCJcXG4gICAgICAgICAgICBuZy1vcHRpb25zPVwiaG91ciBhcyAkY3RybC5jcm9uR2VuU2VydmljZS5wYWROdW1iZXIoaG91cikgZm9yIGhvdXIgaW4gJGN0cmwuc2VsZWN0T3B0aW9ucy5ob3Vyc1wiXFxuICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5zZWxlY3RDbGFzc1wiPlxcbiAgICA8L3NlbGVjdD5cXG4gICAgPHNlbGVjdCBjbGFzcz1cIm1pbnV0ZXNcIlxcbiAgICAgICAgICAgIG5hbWU9XCJ7e25hbWVQcmVmaXh9fU1pbnV0ZXNcIlxcbiAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwuaXNEaXNhYmxlZFwiXFxuICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwub25DaGFuZ2UoKVwiXFxuICAgICAgICAgICAgbmctcmVxdWlyZWQ9XCIkY3RybC5pc1JlcXVpcmVkXCJcXG4gICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLm1vZGVsLm1pbnV0ZXNcIlxcbiAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJtaW51dGUgYXMgJGN0cmwuY3JvbkdlblNlcnZpY2UucGFkTnVtYmVyKG1pbnV0ZSkgZm9yIG1pbnV0ZSBpbiAkY3RybC5zZWxlY3RPcHRpb25zLm1pbnV0ZXNcIlxcbiAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwuc2VsZWN0Q2xhc3NcIj5cXG4gICAgPC9zZWxlY3Q+XFxuICAgIDxzZWxlY3QgY2xhc3M9XCJzZWNvbmRzXCJcXG4gICAgICAgICAgICBuYW1lPVwie3tuYW1lUHJlZml4fX1TZWNvbmRzXCJcXG4gICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLmhpZGVTZWNvbmRzXCJcXG4gICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLmlzRGlzYWJsZWRcIlxcbiAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLm9uQ2hhbmdlKClcIlxcbiAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuaXNSZXF1aXJlZFwiXFxuICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5tb2RlbC5zZWNvbmRzXCJcXG4gICAgICAgICAgICBuZy1vcHRpb25zPVwic2Vjb25kIGFzICRjdHJsLmNyb25HZW5TZXJ2aWNlLnBhZE51bWJlcihzZWNvbmQpIGZvciBzZWNvbmQgaW4gJGN0cmwuc2VsZWN0T3B0aW9ucy5zZWNvbmRzXCJcXG4gICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnNlbGVjdENsYXNzXCI+XFxuICAgIDwvc2VsZWN0PlxcbiAgICA8c2VsZWN0IGNsYXNzPVwiaG91ci10eXBlc1wiXFxuICAgICAgICAgICAgbmFtZT1cInt7bmFtZVByZWZpeH19SG91clR5cGVcIlxcbiAgICAgICAgICAgIG5nLWlmPVwiISRjdHJsLnVzZTI0SG91clRpbWVcIlxcbiAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwuaXNEaXNhYmxlZFwiXFxuICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwub25DaGFuZ2UoKVwiXFxuICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5tb2RlbC5ob3VyVHlwZVwiXFxuICAgICAgICAgICAgbmctb3B0aW9ucz1cImhvdXJUeXBlIGFzIGhvdXJUeXBlIGZvciBob3VyVHlwZSBpbiAkY3RybC5zZWxlY3RPcHRpb25zLmhvdXJUeXBlc1wiXFxuICAgICAgICAgICAgbmctcmVxdWlyZWQ9XCIkY3RybC5pc1JlcXVpcmVkXCJcXG4gICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnNlbGVjdENsYXNzXCI+XFxuICAgIDwvc2VsZWN0PlxcbjwvZGl2PicpLGUucHV0KFwiYW5ndWxhci1jcm9uLWdlbi9jcm9uLWdlbi5odG1sXCIsJzwhZG9jdHlwZSBodG1sPlxcbjxkaXYgY2xhc3M9XCJjcm9uLWdlbi1tYWluXCIgbmctY2xvYWs+XFxuICAgIDx1bCBjbGFzcz1cIm5hdiBuYXYtdGFicyB0YWItbmF2XCIgcm9sZT1cInRhYmxpc3RcIj5cXG4gICAgICAgIDxsaSBuZy1jbGFzcz1cIntcXCdhY3RpdmVcXCc6ICRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnbWludXRlc1xcJywgXFwnZGlzYWJsZWRcXCc6ICRjdHJsLm5nRGlzYWJsZWR9XCJcXG4gICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZU1pbnV0ZXNUYWJcIlxcbiAgICAgICAgICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIj5cXG4gICAgICAgICAgICA8YSBocmVmPVwiI1wiXFxuICAgICAgICAgICAgICAgYXJpYS1jb250cm9scz1cIm1pbnV0ZXNcIlxcbiAgICAgICAgICAgICAgIHJvbGU9XCJ0YWJcIlxcbiAgICAgICAgICAgICAgIG5nLWNsaWNrPVwiJGN0cmwuc2V0QWN0aXZlVGFiKCRldmVudCwgXFwnbWludXRlc1xcJylcIj5cXG4gICAgICAgICAgICAgICAgTWludXRlc1xcbiAgICAgICAgICAgIDwvYT5cXG4gICAgICAgIDwvbGk+XFxuICAgICAgICA8bGkgcm9sZT1cInByZXNlbnRhdGlvblwiXFxuICAgICAgICAgICAgbmctc2hvdz1cIiEkY3RybC5wYXJzZWRPcHRpb25zLmhpZGVIb3VybHlUYWJcIlxcbiAgICAgICAgICAgIG5nLWNsYXNzPVwie1xcJ2FjdGl2ZVxcJzogJGN0cmwuYWN0aXZlVGFiID09PSBcXCdob3VybHlcXCcsIFxcJ2Rpc2FibGVkXFwnOiAkY3RybC5uZ0Rpc2FibGVkfVwiPlxcbiAgICAgICAgICAgIDxhIGhyZWY9XCIjXCJcXG4gICAgICAgICAgICAgICBhcmlhLWNvbnRyb2xzPVwiaG91cmx5XCJcXG4gICAgICAgICAgICAgICByb2xlPVwidGFiXCJcXG4gICAgICAgICAgICAgICBuZy1jbGljaz1cIiRjdHJsLnNldEFjdGl2ZVRhYigkZXZlbnQsIFxcJ2hvdXJseVxcJylcIj5cXG4gICAgICAgICAgICAgICAgSG91cmx5XFxuICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgPC9saT5cXG4gICAgICAgIDxsaSByb2xlPVwicHJlc2VudGF0aW9uXCJcXG4gICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZURhaWx5VGFiXCJcXG4gICAgICAgICAgICBuZy1jbGFzcz1cIntcXCdhY3RpdmVcXCc6ICRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnZGFpbHlcXCcsIFxcJ2Rpc2FibGVkXFwnOiAkY3RybC5uZ0Rpc2FibGVkfVwiPlxcbiAgICAgICAgICAgIDxhIGhyZWY9XCIjXCJcXG4gICAgICAgICAgICAgICBhcmlhLWNvbnRyb2xzPVwiZGFpbHlcIlxcbiAgICAgICAgICAgICAgIHJvbGU9XCJ0YWJcIlxcbiAgICAgICAgICAgICAgIG5nLWNsaWNrPVwiJGN0cmwuc2V0QWN0aXZlVGFiKCRldmVudCwgXFwnZGFpbHlcXCcpXCI+XFxuICAgICAgICAgICAgICAgIERhaWx5XFxuICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgPC9saT5cXG4gICAgICAgIDxsaSByb2xlPVwicHJlc2VudGF0aW9uXCJcXG4gICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZVdlZWtseVRhYlwiXFxuICAgICAgICAgICAgbmctY2xhc3M9XCJ7XFwnYWN0aXZlXFwnOiAkY3RybC5hY3RpdmVUYWIgPT09IFxcJ3dlZWtseVxcJywgXFwnZGlzYWJsZWRcXCc6ICRjdHJsLm5nRGlzYWJsZWR9XCI+XFxuICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBhcmlhLWNvbnRyb2xzPVwid2Vla2x5XCJcXG4gICAgICAgICAgICAgICByb2xlPVwidGFiXCJcXG4gICAgICAgICAgICAgICBuZy1jbGljaz1cIiRjdHJsLnNldEFjdGl2ZVRhYigkZXZlbnQsIFxcJ3dlZWtseVxcJylcIj5cXG4gICAgICAgICAgICAgICAgV2Vla2x5XFxuICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgPC9saT5cXG4gICAgICAgIDxsaSByb2xlPVwicHJlc2VudGF0aW9uXCJcXG4gICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZU1vbnRobHlUYWJcIlxcbiAgICAgICAgICAgIG5nLWNsYXNzPVwie1xcJ2FjdGl2ZVxcJzogJGN0cmwuYWN0aXZlVGFiID09PSBcXCdtb250aGx5XFwnLCBcXCdkaXNhYmxlZFxcJzogJGN0cmwubmdEaXNhYmxlZH1cIj5cXG4gICAgICAgICAgICA8YSBocmVmPVwiI1wiXFxuICAgICAgICAgICAgICAgYXJpYS1jb250cm9scz1cIm1vbnRobHlcIlxcbiAgICAgICAgICAgICAgIHJvbGU9XCJ0YWJcIlxcbiAgICAgICAgICAgICAgIG5nLWNsaWNrPVwiJGN0cmwuc2V0QWN0aXZlVGFiKCRldmVudCwgXFwnbW9udGhseVxcJylcIj5cXG4gICAgICAgICAgICAgICAgTW9udGhseVxcbiAgICAgICAgICAgIDwvYT5cXG4gICAgICAgIDwvbGk+XFxuICAgICAgICA8bGkgcm9sZT1cInByZXNlbnRhdGlvblwiXFxuICAgICAgICAgICAgbmctc2hvdz1cIiEkY3RybC5wYXJzZWRPcHRpb25zLmhpZGVZZWFybHlUYWJcIlxcbiAgICAgICAgICAgIG5nLWNsYXNzPVwie1xcJ2FjdGl2ZVxcJzogJGN0cmwuYWN0aXZlVGFiID09PSBcXCd5ZWFybHlcXCcsIFxcJ2Rpc2FibGVkXFwnOiAkY3RybC5uZ0Rpc2FibGVkfVwiPlxcbiAgICAgICAgICAgIDxhIGhyZWY9XCIjXCJcXG4gICAgICAgICAgICAgICBhcmlhLWNvbnRyb2xzPVwieWVhcmx5XCJcXG4gICAgICAgICAgICAgICByb2xlPVwidGFiXCJcXG4gICAgICAgICAgICAgICBuZy1jbGljaz1cIiRjdHJsLnNldEFjdGl2ZVRhYigkZXZlbnQsIFxcJ3llYXJseVxcJylcIj5cXG4gICAgICAgICAgICAgICAgWWVhcmx5XFxuICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgPC9saT5cXG4gICAgICAgIDxsaSByb2xlPVwicHJlc2VudGF0aW9uXCJcXG4gICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZUFkdmFuY2VkVGFiXCJcXG4gICAgICAgICAgICBuZy1jbGFzcz1cIntcXCdhY3RpdmVcXCc6ICRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnYWR2YW5jZWRcXCcsIFxcJ2Rpc2FibGVkXFwnOiAkY3RybC5uZ0Rpc2FibGVkfVwiPlxcbiAgICAgICAgICAgIDxhIGhyZWY9XCIjXCJcXG4gICAgICAgICAgICAgICBhcmlhLWNvbnRyb2xzPVwiYWR2YW5jZWRcIlxcbiAgICAgICAgICAgICAgIHJvbGU9XCJ0YWJcIlxcbiAgICAgICAgICAgICAgIG5nLWNsaWNrPVwiJGN0cmwuc2V0QWN0aXZlVGFiKCRldmVudCwgXFwnYWR2YW5jZWRcXCcpXCI+XFxuICAgICAgICAgICAgICAgIEFkdmFuY2VkXFxuICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgPC9saT5cXG4gICAgPC91bD5cXG4gICAgPGRpdiBjbGFzcz1cImNyb24tZ2VuLWNvbnRhaW5lclwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTJcIj5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYi1jb250ZW50XCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLXBhbmVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZU1pbnV0ZXNUYWJcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIntcXCdhY3RpdmVcXCc6ICRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnbWludXRlc1xcJ31cIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2VsbCB3ZWxsLXNtYWxsXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZXJ5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJtaW51dGVzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwibWludXRlc01pbnV0ZXNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ21pbnV0ZXNcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUubWludXRlcy5taW51dGVzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnbWludXRlc1xcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctb3B0aW9ucz1cIm1pbnV0ZSBhcyBtaW51dGUgZm9yIG1pbnV0ZSBpbiAkY3RybC5zZWxlY3RPcHRpb25zLm1pbnV0ZXNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtU2VsZWN0Q2xhc3NcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZShzKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZVNlY29uZHNcIj5vbiBzZWNvbmQ8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJzZWNvbmRzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwibWludXRlc1NlY29uZHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXNob3c9XCIhJGN0cmwucGFyc2VkT3B0aW9ucy5oaWRlU2Vjb25kc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnbWludXRlc1xcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5zdGF0ZS5taW51dGVzLnNlY29uZHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCdtaW51dGVzXFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1vcHRpb25zPVwic2Vjb25kIGFzICRjdHJsLmNyb25HZW5TZXJ2aWNlLnBhZE51bWJlcihzZWNvbmQpIGZvciBzZWNvbmQgaW4gJGN0cmwuc2VsZWN0T3B0aW9ucy5zZWNvbmRzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybVNlbGVjdENsYXNzXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLXBhbmVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZUhvdXJseVRhYlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwie1xcJ2FjdGl2ZVxcJzogJGN0cmwuYWN0aXZlVGFiID09PSBcXCdob3VybHlcXCd9XCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndlbGwgd2VsbC1zbWFsbFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFdmVyeVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwiaG91cnNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJob3VybHlIb3Vyc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnaG91cmx5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLmhvdXJseS5ob3Vyc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctcmVxdWlyZWQ9XCIkY3RybC5hY3RpdmVUYWIgPT09IFxcJ2hvdXJseVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctb3B0aW9ucz1cImhvdXIgYXMgaG91ciBmb3IgaG91ciBpbiAkY3RybC5zZWxlY3RPcHRpb25zLmhvdXJzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybVNlbGVjdENsYXNzXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3VyKHMpIG9uIG1pbnV0ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwibWludXRlc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImhvdXJseU1pbnV0ZXNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ2hvdXJseVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5zdGF0ZS5ob3VybHkubWludXRlc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctcmVxdWlyZWQ9XCIkY3RybC5hY3RpdmVUYWIgPT09IFxcJ2hvdXJseVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctb3B0aW9ucz1cIm1pbnV0ZSBhcyAkY3RybC5jcm9uR2VuU2VydmljZS5wYWROdW1iZXIobWludXRlKSBmb3IgbWludXRlIGluICRjdHJsLnNlbGVjdE9wdGlvbnMuZnVsbE1pbnV0ZXNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtU2VsZWN0Q2xhc3NcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLXNob3c9XCIhJGN0cmwucGFyc2VkT3B0aW9ucy5oaWRlU2Vjb25kc1wiPmFuZCBzZWNvbmQ8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJzZWNvbmRzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwiaG91cmx5U2Vjb25kc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctc2hvdz1cIiEkY3RybC5wYXJzZWRPcHRpb25zLmhpZGVTZWNvbmRzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWQgfHwgJGN0cmwuYWN0aXZlVGFiICE9PSBcXCdob3VybHlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUuaG91cmx5LnNlY29uZHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCdob3VybHlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJzZWNvbmQgYXMgJGN0cmwuY3JvbkdlblNlcnZpY2UucGFkTnVtYmVyKHNlY29uZCkgZm9yIHNlY29uZCBpbiAkY3RybC5zZWxlY3RPcHRpb25zLnNlY29uZHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtU2VsZWN0Q2xhc3NcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWItcGFuZVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXNob3c9XCIhJGN0cmwucGFyc2VkT3B0aW9ucy5oaWRlRGFpbHlUYWJcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIntcXCdhY3RpdmVcXCc6ICRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnZGFpbHlcXCd9XCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndlbGwgd2VsbC1zbWFsbFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPVwiZXZlcnlEYXlzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJkYWlseS1yYWRpb1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWRcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLmRhaWx5LnN1YlRhYlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnN0YXRlLmZvcm1SYWRpb0NsYXNzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9XCJjaGVja2VkXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZXJ5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJkYXlzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwiZGFpbHlFdmVyeURheXNEYXlzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWQgfHwgJGN0cmwuYWN0aXZlVGFiICE9PSBcXCdkYWlseVxcJyB8fCAkY3RybC5zdGF0ZS5kYWlseS5zdWJUYWIgIT09IFxcJ2V2ZXJ5RGF5c1xcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5zdGF0ZS5kYWlseS5ldmVyeURheXMuZGF5c1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctcmVxdWlyZWQ9XCIkY3RybC5hY3RpdmVUYWIgPT09IFxcJ2RhaWx5XFwnICYmICRjdHJsLnN0YXRlLmRhaWx5LnN1YlRhYiA9PT0gXFwnZXZlcnlEYXlzXFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1vcHRpb25zPVwibW9udGhEYXkgYXMgbW9udGhEYXkgZm9yIG1vbnRoRGF5IGluICRjdHJsLnNlbGVjdE9wdGlvbnMubW9udGhEYXlzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybVNlbGVjdENsYXNzXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXkocykgYXRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNyb24tZ2VuLXRpbWUtc2VsZWN0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXMtZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnZGFpbHlcXCcgfHwgJGN0cmwuc3RhdGUuZGFpbHkuc3ViVGFiICE9PSBcXCdldmVyeURheXNcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUtcHJlZml4PVwiZGFpbHlFdmVyeURheXNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCdkYWlseVxcJyAmJiAkY3RybC5zdGF0ZS5kYWlseS5zdWJUYWIgPT09IFxcJ2V2ZXJ5RGF5c1xcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw9XCIkY3RybC5zdGF0ZS5kYWlseS5ldmVyeURheXNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdC1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybVNlbGVjdENsYXNzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2UtMjQtaG91ci10aW1lPVwiJGN0cmwucGFyc2VkT3B0aW9ucy51c2UyNEhvdXJUaW1lXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaWRlLXNlY29uZHM9XCIkY3RybC5wYXJzZWRPcHRpb25zLmhpZGVTZWNvbmRzXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY3Jvbi1nZW4tdGltZS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndlbGwgd2VsbC1zbWFsbFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPVwiZXZlcnlXZWVrRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUuZGFpbHkuc3ViVGFiXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwuc3RhdGUuZm9ybVJhZGlvQ2xhc3NcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImRhaWx5LXJhZGlvXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZXJ5IHdlZWsgZGF5IChNb25kYXkgdGhyb3VnaCBGcmlkYXkpIGF0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjcm9uLWdlbi10aW1lLXNlbGVjdFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ2RhaWx5XFwnIHx8ICRjdHJsLnN0YXRlLmRhaWx5LnN1YlRhYiAhPT0gXFwnZXZlcnlXZWVrRGF5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbi1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLXByZWZpeD1cImRhaWx5RXZlcnlXZWVrRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnZGFpbHlcXCcgJiYgJGN0cmwuc3RhdGUuZGFpbHkuc3ViVGFiID09PSBcXCdldmVyeVdlZWtEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsPVwiJGN0cmwuc3RhdGUuZGFpbHkuZXZlcnlXZWVrRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3QtY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlLTI0LWhvdXItdGltZT1cIiRjdHJsLnBhcnNlZE9wdGlvbnMudXNlMjRIb3VyVGltZVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZS1zZWNvbmRzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5oaWRlU2Vjb25kc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Nyb24tZ2VuLXRpbWUtc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLXBhbmVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZVdlZWtseVRhYlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwie1xcJ2FjdGl2ZVxcJzogJGN0cmwuYWN0aXZlVGFiID09PSBcXCd3ZWVrbHlcXCd9XCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndlbGwgd2VsbC1zbWFsbCByb3dcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS02XCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwid2Vla2x5TU9OXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWQgfHwgJGN0cmwuYWN0aXZlVGFiICE9PSBcXCd3ZWVrbHlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUud2Vla2x5Lk1PTlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1DaGVja2JveENsYXNzXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNb25kYXlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cIndlZWtseVRVRVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnd2Vla2x5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLndlZWtseS5UVUVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtQ2hlY2tib3hDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVHVlc2RheVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS02XCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwid2Vla2x5V0VEXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWQgfHwgJGN0cmwuYWN0aXZlVGFiICE9PSBcXCd3ZWVrbHlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUud2Vla2x5LldFRFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1DaGVja2JveENsYXNzXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXZWRuZXNkYXlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cIndlZWtseVRIVVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnd2Vla2x5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLndlZWtseS5USFVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtQ2hlY2tib3hDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGh1cnNkYXlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cIndlZWtseUZSSVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnd2Vla2x5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLndlZWtseS5GUklcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtQ2hlY2tib3hDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRnJpZGF5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJ3ZWVrbHlTQVRcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ3dlZWtseVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5zdGF0ZS53ZWVrbHkuU0FUXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybUNoZWNrYm94Q2xhc3NcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNhdHVyZGF5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJ3ZWVrbHlTVU5cIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ3dlZWtseVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5zdGF0ZS53ZWVrbHkuU1VOXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybUNoZWNrYm94Q2xhc3NcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN1bmRheVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICBTdGFydCB0aW1lXFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNyb24tZ2VuLXRpbWUtc2VsZWN0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWQgfHwgJGN0cmwuYWN0aXZlVGFiICE9PSBcXCd3ZWVrbHlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb24tY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLXByZWZpeD1cIndlZWtseVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnd2Vla2x5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsPVwiJGN0cmwuc3RhdGUud2Vla2x5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdC1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybVNlbGVjdENsYXNzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZS0yNC1ob3VyLXRpbWU9XCIkY3RybC5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZS1zZWNvbmRzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5oaWRlU2Vjb25kc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvY3Jvbi1nZW4tdGltZS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWItcGFuZVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXNob3c9XCIhJGN0cmwucGFyc2VkT3B0aW9ucy5oaWRlTW9udGhseVRhYlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwie1xcJ2FjdGl2ZVxcJzogJGN0cmwuYWN0aXZlVGFiID09PSBcXCdtb250aGx5XFwnfVwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3ZWxsIHdlbGwtc21hbGxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cInNwZWNpZmljRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUubW9udGhseS5zdWJUYWJcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5zdGF0ZS5mb3JtUmFkaW9DbGFzc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwibW9udGhseS1yYWRpb1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPVwiY2hlY2tlZFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPbiB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cIm1vbnRoLWRheXNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJtb250aGx5U3BlY2lmaWNEYXlEYXlcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ21vbnRobHlcXCcgfHwgJGN0cmwuc3RhdGUubW9udGhseS5zdWJUYWIgIT09IFxcJ3NwZWNpZmljRGF5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNEYXkuZGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnbW9udGhseVxcJyAmJiAkY3RybC5zdGF0ZS5tb250aGx5LnN1YlRhYiA9PT0gXFwnc3BlY2lmaWNEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJtb250aERheXNXaXRoTGFzdCBhcyAkY3RybC5tb250aERheURpc3BsYXkobW9udGhEYXlzV2l0aExhc3QpIGZvciBtb250aERheXNXaXRoTGFzdCBpbiAkY3RybC5zZWxlY3RPcHRpb25zLm1vbnRoRGF5c1dpdGhMYXN0c1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZXZlcnlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cIm1vbnRocy1zbWFsbFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cIm1vbnRobHlTcGVjaWZpY0RheU1vbnRoc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnbW9udGhseVxcJyB8fCAkY3RybC5zdGF0ZS5tb250aGx5LnN1YlRhYiAhPT0gXFwnc3BlY2lmaWNEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUubW9udGhseS5zcGVjaWZpY0RheS5tb250aHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCdtb250aGx5XFwnICYmICRjdHJsLnN0YXRlLm1vbnRobHkuc3ViVGFiID09PSBcXCdzcGVjaWZpY0RheVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctb3B0aW9ucz1cIm1vbnRoIGFzIG1vbnRoIGZvciBtb250aCBpbiAkY3RybC5zZWxlY3RPcHRpb25zLm1vbnRoc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9udGgocykgYXRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNyb24tZ2VuLXRpbWUtc2VsZWN0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXMtZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnbW9udGhseVxcJyB8fCAkY3RybC5zdGF0ZS5tb250aGx5LnN1YlRhYiAhPT0gXFwnc3BlY2lmaWNEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUtcHJlZml4PVwibW9udGhseVNwZWNpZmljRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnbW9udGhseVxcJyAmJiAkY3RybC5zdGF0ZS5tb250aGx5LnN1YlRhYiA9PT0gXFwnc3BlY2lmaWNEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsPVwiJGN0cmwuc3RhdGUubW9udGhseS5zcGVjaWZpY0RheVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0LWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtU2VsZWN0Q2xhc3NcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZS0yNC1ob3VyLXRpbWU9XCIkY3RybC5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZGUtc2Vjb25kcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZVNlY29uZHNcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jcm9uLWdlbi10aW1lLXNlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2VsbCB3ZWxsLXNtYWxsXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCJzcGVjaWZpY1dlZWtEYXlcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5zdGF0ZS5tb250aGx5LnN1YlRhYlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnN0YXRlLmZvcm1SYWRpb0NsYXNzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJtb250aGx5LXJhZGlvXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9uIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwiZGF5LW9yZGVyLWluLW1vbnRoXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwibW9udGhseVNwZWNpZmljV2Vla0RheU1vbnRoV2Vla1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwnbW9udGhseVxcJyB8fCAkY3RybC5zdGF0ZS5tb250aGx5LnN1YlRhYiAhPT0gXFwnc3BlY2lmaWNXZWVrRGF5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNXZWVrRGF5Lm1vbnRoV2Vla1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctcmVxdWlyZWQ9XCIkY3RybC5hY3RpdmVUYWIgPT09IFxcJ21vbnRobHlcXCcgJiYgJGN0cmwuc3RhdGUubW9udGhseS5zdWJUYWIgPT09IFxcJ3NwZWNpZmljV2Vla0RheVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctb3B0aW9ucz1cIm1vbnRoV2VlayBhcyAkY3RybC5tb250aFdlZWtEaXNwbGF5KG1vbnRoV2VlaykgZm9yIG1vbnRoV2VlayBpbiAkY3RybC5zZWxlY3RPcHRpb25zLm1vbnRoV2Vla3NcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtU2VsZWN0Q2xhc3NcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJ3ZWVrLWRheXNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJtb250aGx5U3BlY2lmaWNXZWVrRGF5RGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWQgfHwgJGN0cmwuYWN0aXZlVGFiICE9PSBcXCdtb250aGx5XFwnIHx8ICRjdHJsLnN0YXRlLm1vbnRobHkuc3ViVGFiICE9PSBcXCdzcGVjaWZpY1dlZWtEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUubW9udGhseS5zcGVjaWZpY1dlZWtEYXkuZGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnbW9udGhseVxcJyAmJiAkY3RybC5zdGF0ZS5tb250aGx5LnN1YlRhYiA9PT0gXFwnc3BlY2lmaWNXZWVrRGF5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1vcHRpb25zPVwiZGF5IGFzICRjdHJsLmRheURpc3BsYXkoZGF5KSBmb3IgZGF5IGluICRjdHJsLnNlbGVjdE9wdGlvbnMuZGF5c1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZXZlcnlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cIm1vbnRocy1zbWFsbFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cIm1vbnRobHlTcGVjaWZpY1dlZWtEYXlNb250aHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ21vbnRobHlcXCcgfHwgJGN0cmwuc3RhdGUubW9udGhseS5zdWJUYWIgIT09IFxcJ3NwZWNpZmljV2Vla0RheVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5zdGF0ZS5tb250aGx5LnNwZWNpZmljV2Vla0RheS5tb250aHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCdtb250aGx5XFwnICYmICRjdHJsLnN0YXRlLm1vbnRobHkuc3ViVGFiID09PSBcXCdzcGVjaWZpY1dlZWtEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJtb250aCBhcyBtb250aCBmb3IgbW9udGggaW4gJGN0cmwuc2VsZWN0T3B0aW9ucy5tb250aHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtU2VsZWN0Q2xhc3NcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoKHMpIGF0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjcm9uLWdlbi10aW1lLXNlbGVjdFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ21vbnRobHlcXCcgfHwgJGN0cmwuc3RhdGUubW9udGhseS5zdWJUYWIgIT09IFxcJ3NwZWNpZmljV2Vla0RheVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb24tY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZS1wcmVmaXg9XCJtb250aGx5U3BlY2lmaWNXZWVrRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwnbW9udGhseVxcJyAmJiAkY3RybC5zdGF0ZS5tb250aGx5LnN1YlRhYiA9PT0gXFwnc3BlY2lmaWNXZWVrRGF5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbD1cIiRjdHJsLnN0YXRlLm1vbnRobHkuc3BlY2lmaWNXZWVrRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3QtY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlLTI0LWhvdXItdGltZT1cIiRjdHJsLnBhcnNlZE9wdGlvbnMudXNlMjRIb3VyVGltZVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZS1zZWNvbmRzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5oaWRlU2Vjb25kc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Nyb24tZ2VuLXRpbWUtc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcblxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLXBhbmVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICBuZy1zaG93PVwiISRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZVllYXJseVRhYlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwie1xcJ2FjdGl2ZVxcJzogJGN0cmwuYWN0aXZlVGFiID09PSBcXCd5ZWFybHlcXCd9XCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndlbGwgd2VsbC1zbWFsbFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPVwic3BlY2lmaWNNb250aERheVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWRcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWJcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5zdGF0ZS5mb3JtUmFkaW9DbGFzc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwieWVhcmx5LXJhZGlvXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZXJ5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJtb250aHNcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJ5ZWFybHlTcGVjaWZpY01vbnRoRGF5TW9udGhcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ3llYXJseVxcJyB8fCAkY3RybC5zdGF0ZS55ZWFybHkuc3ViVGFiICE9PSBcXCdzcGVjaWZpY01vbnRoRGF5XFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoRGF5Lm1vbnRoXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwneWVhcmx5XFwnICYmICRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWIgPT09IFxcJ3NwZWNpZmljTW9udGhEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJtb250aCBhcyAkY3RybC5tb250aERpc3BsYXkobW9udGgpIGZvciBtb250aCBpbiAkY3RybC5zZWxlY3RPcHRpb25zLm1vbnRoc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb24gdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJtb250aC1kYXlzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwieWVhcmx5U3BlY2lmaWNNb250aERheURheVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwneWVhcmx5XFwnIHx8ICRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWIgIT09IFxcJ3NwZWNpZmljTW9udGhEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUueWVhcmx5LnNwZWNpZmljTW9udGhEYXkuZGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwneWVhcmx5XFwnICYmICRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWIgPT09IFxcJ3NwZWNpZmljTW9udGhEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJtb250aERheXNXaXRoTGFzdCBhcyAkY3RybC5tb250aERheURpc3BsYXkobW9udGhEYXlzV2l0aExhc3QpIGZvciBtb250aERheXNXaXRoTGFzdCBpbiAkY3RybC5zZWxlY3RPcHRpb25zLm1vbnRoRGF5c1dpdGhMYXN0c1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNyb24tZ2VuLXRpbWUtc2VsZWN0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXMtZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwneWVhcmx5XFwnIHx8ICRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWIgIT09IFxcJ3NwZWNpZmljTW9udGhEYXlcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uLWNoYW5nZT1cIiRjdHJsLnJlZ2VuZXJhdGVDcm9uKClcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCd5ZWFybHlcXCcgJiYgJGN0cmwuc3RhdGUueWVhcmx5LnN1YlRhYiA9PT0gXFwnc3BlY2lmaWNNb250aERheVxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZS1wcmVmaXg9XCJ5ZWFybHlTcGVjaWZpY01vbnRoRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbD1cIiRjdHJsLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoRGF5XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3QtY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlLTI0LWhvdXItdGltZT1cIiRjdHJsLnBhcnNlZE9wdGlvbnMudXNlMjRIb3VyVGltZVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZS1zZWNvbmRzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5oaWRlU2Vjb25kc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Nyb24tZ2VuLXRpbWUtc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3ZWxsIHdlbGwtc21hbGxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cInNwZWNpZmljTW9udGhXZWVrXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUueWVhcmx5LnN1YlRhYlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnN0YXRlLmZvcm1SYWRpb0NsYXNzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJ5ZWFybHktcmFkaW9cIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgT24gdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJkYXktb3JkZXItaW4tbW9udGhcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJ5ZWFybHlTcGVjaWZpY01vbnRoV2Vla01vbnRoV2Vla1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwneWVhcmx5XFwnIHx8ICRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWIgIT09IFxcJ3NwZWNpZmljTW9udGhXZWVrXFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoV2Vlay5tb250aFdlZWtcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCd5ZWFybHlcXCcgJiYgJGN0cmwuc3RhdGUueWVhcmx5LnN1YlRhYiA9PT0gXFwnc3BlY2lmaWNNb250aFdlZWtcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJtb250aFdlZWsgYXMgJGN0cmwubW9udGhXZWVrRGlzcGxheShtb250aFdlZWspIGZvciBtb250aFdlZWsgaW4gJGN0cmwuc2VsZWN0T3B0aW9ucy5tb250aFdlZWtzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybVNlbGVjdENsYXNzXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwid2Vlay1kYXlzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwieWVhcmx5U3BlY2lmaWNNb250aFdlZWtNb250aERheVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwneWVhcmx5XFwnIHx8ICRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWIgIT09IFxcJ3NwZWNpZmljTW9udGhXZWVrXFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD1cIiRjdHJsLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoV2Vlay5kYXlcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCd5ZWFybHlcXCcgJiYgJGN0cmwuc3RhdGUueWVhcmx5LnN1YlRhYiA9PT0gXFwnc3BlY2lmaWNNb250aFdlZWtcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJkYXkgYXMgJGN0cmwuZGF5RGlzcGxheShkYXkpIGZvciBkYXkgaW4gJGN0cmwuc2VsZWN0T3B0aW9ucy5kYXlzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGFzcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuZm9ybVNlbGVjdENsYXNzXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwibW9udGhzXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwieWVhcmx5U3BlY2lmaWNNb250aFdlZWtNb250TW9udGhcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ3llYXJseVxcJyB8fCAkY3RybC5zdGF0ZS55ZWFybHkuc3ViVGFiICE9PSBcXCdzcGVjaWZpY01vbnRoV2Vla1xcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9XCIkY3RybC5zdGF0ZS55ZWFybHkuc3BlY2lmaWNNb250aFdlZWsubW9udGhcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCd5ZWFybHlcXCcgJiYgJGN0cmwuc3RhdGUueWVhcmx5LnN1YlRhYiA9PT0gXFwnc3BlY2lmaWNNb250aFdlZWtcXCdcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW9wdGlvbnM9XCJtb250aCBhcyAkY3RybC5tb250aERpc3BsYXkobW9udGgpIGZvciBtb250aCBpbiAkY3RybC5zZWxlY3RPcHRpb25zLm1vbnRoc1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2xhc3M9XCIkY3RybC5wYXJzZWRPcHRpb25zLmZvcm1TZWxlY3RDbGFzc1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNyb24tZ2VuLXRpbWUtc2VsZWN0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXMtZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkIHx8ICRjdHJsLmFjdGl2ZVRhYiAhPT0gXFwneWVhcmx5XFwnIHx8ICRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWIgIT09IFxcJ3NwZWNpZmljTW9udGhXZWVrXFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbi1jaGFuZ2U9XCIkY3RybC5yZWdlbmVyYXRlQ3JvbigpXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLXByZWZpeD1cInllYXJseVNwZWNpZmljTW9udGhXZWVrXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcy1yZXF1aXJlZD1cIiRjdHJsLmFjdGl2ZVRhYiA9PT0gXFwneWVhcmx5XFwnICYmICRjdHJsLnN0YXRlLnllYXJseS5zdWJUYWIgPT09IFxcJ3NwZWNpZmljTW9udGhXZWVrXFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbD1cIiRjdHJsLnN0YXRlLnllYXJseS5zcGVjaWZpY01vbnRoV2Vla1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0LWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtU2VsZWN0Q2xhc3NcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZS0yNC1ob3VyLXRpbWU9XCIkY3RybC5wYXJzZWRPcHRpb25zLnVzZTI0SG91clRpbWVcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZGUtc2Vjb25kcz1cIiRjdHJsLnBhcnNlZE9wdGlvbnMuaGlkZVNlY29uZHNcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jcm9uLWdlbi10aW1lLXNlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYi1wYW5lXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgbmctc2hvdz1cIiEkY3RybC5wYXJzZWRPcHRpb25zLmhpZGVBZHZhbmNlZFRhYlwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwie1xcJ2FjdGl2ZVxcJzogJGN0cmwuYWN0aXZlVGFiID09PSBcXCdhZHZhbmNlZFxcJ31cIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICBDcm9uIEV4cHJlc3Npb25cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImFkdmFuY2VkLWNyb24tZ2VuLWlucHV0XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImFkdmFuY2VkRXhwcmVzc2lvblwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZCB8fCAkY3RybC5hY3RpdmVUYWIgIT09IFxcJ2FkdmFuY2VkXFwnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwucmVnZW5lcmF0ZUNyb24oKVwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuc3RhdGUuYWR2YW5jZWQuZXhwcmVzc2lvblwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLXJlcXVpcmVkPVwiJGN0cmwuYWN0aXZlVGFiID09PSBcXCdhZHZhbmNlZFxcJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsYXNzPVwiJGN0cmwucGFyc2VkT3B0aW9ucy5mb3JtSW5wdXRDbGFzc1wiPlxcblxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPk1vcmUgZGV0YWlscyBhYm91dCBob3cgdG8gY3JlYXRlIHRoZXNlIGV4cHJlc3Npb25zIGNhbiBiZSBmb3VuZCA8YVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHA6Ly93d3cucXVhcnR6LXNjaGVkdWxlci5vcmcvZG9jdW1lbnRhdGlvbi9xdWFydHotMi4zLjAvdHV0b3JpYWxzL2Nyb250cmlnZ2VyLmh0bWwjZm9ybWF0XCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiPmhlcmU8L2E+LjwvcD5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDwvZGl2PlxcbiAgICA8L2Rpdj5cXG48L2Rpdj5cXG4nKX1dKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyb24tZ2VuLm1pbi5qcy5tYXBcbiJdfQ==
