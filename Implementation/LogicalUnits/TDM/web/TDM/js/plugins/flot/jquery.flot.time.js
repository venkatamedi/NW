!function($){function floorInBase(n,base){return base*Math.floor(n/base)}function formatDate(d,fmt,monthNames,dayNames){if("function"==typeof d.strftime)return d.strftime(fmt);var hours12,leftPad=function(n,pad){return pad=""+(null==pad?"0":pad),1==(n=""+n).length?pad+n:n},r=[],escape=!1,hours=d.getHours(),isAM=hours<12;null==monthNames&&(monthNames=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]),null==dayNames&&(dayNames=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),hours12=hours>12?hours-12:0==hours?12:hours;for(var i=0;i<fmt.length;++i){var c=fmt.charAt(i);if(escape){switch(c){case"a":c=""+dayNames[d.getDay()];break;case"b":c=""+monthNames[d.getMonth()];break;case"d":c=leftPad(d.getDate());break;case"e":c=leftPad(d.getDate()," ");break;case"h":case"H":c=leftPad(hours);break;case"I":c=leftPad(hours12);break;case"l":c=leftPad(hours12," ");break;case"m":c=leftPad(d.getMonth()+1);break;case"M":c=leftPad(d.getMinutes());break;case"q":c=""+(Math.floor(d.getMonth()/3)+1);break;case"S":c=leftPad(d.getSeconds());break;case"y":c=leftPad(d.getFullYear()%100);break;case"Y":c=""+d.getFullYear();break;case"p":c=isAM?"am":"pm";break;case"P":c=isAM?"AM":"PM";break;case"w":c=""+d.getDay()}r.push(c),escape=!1}else"%"==c?escape=!0:r.push(c)}return r.join("")}function makeUtcWrapper(d){function addProxyMethod(sourceObj,sourceMethod,targetObj,targetMethod){sourceObj[sourceMethod]=function(){return targetObj[targetMethod].apply(targetObj,arguments)}}var utc={date:d};null!=d.strftime&&addProxyMethod(utc,"strftime",d,"strftime"),addProxyMethod(utc,"getTime",d,"getTime"),addProxyMethod(utc,"setTime",d,"setTime");for(var props=["Date","Day","FullYear","Hours","Milliseconds","Minutes","Month","Seconds"],p=0;p<props.length;p++)addProxyMethod(utc,"get"+props[p],d,"getUTC"+props[p]),addProxyMethod(utc,"set"+props[p],d,"setUTC"+props[p]);return utc}function dateGenerator(ts,opts){if("browser"==opts.timezone)return new Date(ts);if(opts.timezone&&"utc"!=opts.timezone){if("undefined"!=typeof timezoneJS&&void 0!==timezoneJS.Date){var d=new timezoneJS.Date;return d.setTimezone(opts.timezone),d.setTime(ts),d}return makeUtcWrapper(new Date(ts))}return makeUtcWrapper(new Date(ts))}var timeUnitSize={second:1e3,minute:6e4,hour:36e5,day:864e5,month:2592e6,quarter:7776e6,year:525949.2*60*1e3},baseSpec=[[1,"second"],[2,"second"],[5,"second"],[10,"second"],[30,"second"],[1,"minute"],[2,"minute"],[5,"minute"],[10,"minute"],[30,"minute"],[1,"hour"],[2,"hour"],[4,"hour"],[8,"hour"],[12,"hour"],[1,"day"],[2,"day"],[3,"day"],[.25,"month"],[.5,"month"],[1,"month"],[2,"month"]],specMonths=baseSpec.concat([[3,"month"],[6,"month"],[1,"year"]]),specQuarters=baseSpec.concat([[1,"quarter"],[2,"quarter"],[1,"year"]]);$.plot.plugins.push({init:function(plot){plot.hooks.processOptions.push((function(plot,options){$.each(plot.getAxes(),(function(axisName,axis){var opts=axis.options;"time"==opts.mode&&(axis.tickGenerator=function(axis){var ticks=[],d=dateGenerator(axis.min,opts),minSize=0,spec=opts.tickSize&&"quarter"===opts.tickSize[1]||opts.minTickSize&&"quarter"===opts.minTickSize[1]?specQuarters:specMonths;null!=opts.minTickSize&&(minSize="number"==typeof opts.tickSize?opts.tickSize:opts.minTickSize[0]*timeUnitSize[opts.minTickSize[1]]);for(var i=0;i<spec.length-1&&!(axis.delta<(spec[i][0]*timeUnitSize[spec[i][1]]+spec[i+1][0]*timeUnitSize[spec[i+1][1]])/2&&spec[i][0]*timeUnitSize[spec[i][1]]>=minSize);++i);var size=spec[i][0],unit=spec[i][1];if("year"==unit){if(null!=opts.minTickSize&&"year"==opts.minTickSize[1])size=Math.floor(opts.minTickSize[0]);else{var magn=Math.pow(10,Math.floor(Math.log(axis.delta/timeUnitSize.year)/Math.LN10)),norm=axis.delta/timeUnitSize.year/magn;size=norm<1.5?1:norm<3?2:norm<7.5?5:10,size*=magn}size<1&&(size=1)}axis.tickSize=opts.tickSize||[size,unit];var tickSize=axis.tickSize[0];unit=axis.tickSize[1];var step=tickSize*timeUnitSize[unit];"second"==unit?d.setSeconds(floorInBase(d.getSeconds(),tickSize)):"minute"==unit?d.setMinutes(floorInBase(d.getMinutes(),tickSize)):"hour"==unit?d.setHours(floorInBase(d.getHours(),tickSize)):"month"==unit?d.setMonth(floorInBase(d.getMonth(),tickSize)):"quarter"==unit?d.setMonth(3*floorInBase(d.getMonth()/3,tickSize)):"year"==unit&&d.setFullYear(floorInBase(d.getFullYear(),tickSize)),d.setMilliseconds(0),step>=timeUnitSize.minute&&d.setSeconds(0),step>=timeUnitSize.hour&&d.setMinutes(0),step>=timeUnitSize.day&&d.setHours(0),step>=4*timeUnitSize.day&&d.setDate(1),step>=2*timeUnitSize.month&&d.setMonth(floorInBase(d.getMonth(),3)),step>=2*timeUnitSize.quarter&&d.setMonth(floorInBase(d.getMonth(),6)),step>=timeUnitSize.year&&d.setMonth(0);var prev,carry=0,v=Number.NaN;do{if(prev=v,v=d.getTime(),ticks.push(v),"month"==unit||"quarter"==unit)if(tickSize<1){d.setDate(1);var start=d.getTime();d.setMonth(d.getMonth()+("quarter"==unit?3:1));var end=d.getTime();d.setTime(v+carry*timeUnitSize.hour+(end-start)*tickSize),carry=d.getHours(),d.setHours(0)}else d.setMonth(d.getMonth()+tickSize*("quarter"==unit?3:1));else"year"==unit?d.setFullYear(d.getFullYear()+tickSize):d.setTime(v+step)}while(v<axis.max&&v!=prev);return ticks},axis.tickFormatter=function(v,axis){var d=dateGenerator(v,axis.options);if(null!=opts.timeformat)return formatDate(d,opts.timeformat,opts.monthNames,opts.dayNames);var useQuarters=axis.options.tickSize&&"quarter"==axis.options.tickSize[1]||axis.options.minTickSize&&"quarter"==axis.options.minTickSize[1],t=axis.tickSize[0]*timeUnitSize[axis.tickSize[1]],span=axis.max-axis.min,suffix=opts.twelveHourClock?" %p":"",hourCode=opts.twelveHourClock?"%I":"%H";return formatDate(d,t<timeUnitSize.minute?hourCode+":%M:%S"+suffix:t<timeUnitSize.day?span<2*timeUnitSize.day?hourCode+":%M"+suffix:"%b %d "+hourCode+":%M"+suffix:t<timeUnitSize.month?"%b %d":useQuarters&&t<timeUnitSize.quarter||!useQuarters&&t<timeUnitSize.year?span<timeUnitSize.year?"%b":"%b %Y":useQuarters&&t<timeUnitSize.year?span<timeUnitSize.year?"Q%q":"Q%q %Y":"%Y",opts.monthNames,opts.dayNames)})}))}))},options:{xaxis:{timezone:null,timeformat:null,twelveHourClock:!1,monthNames:null}},name:"time",version:"1.0"}),$.plot.formatDate=formatDate,$.plot.dateGenerator=dateGenerator}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
