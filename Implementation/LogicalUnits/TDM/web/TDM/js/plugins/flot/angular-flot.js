angular.module("angular-flot",[]).directive("flot",(function(){return{restrict:"EA",template:"<div></div>",scope:{dataset:"=",options:"=",callback:"="},link:function(scope,element,attributes){var height,init,onDatasetChanged,onOptionsChanged,plot,plotArea,width,_ref,_ref1;if(plot=null,width=attributes.width||"100%",height=attributes.height||"100%",(null!=(_ref=scope.options)&&null!=(_ref1=_ref.legend)?_ref1.container:void 0)instanceof jQuery)throw'Please use a jQuery expression string with the "legend.container" option.';return scope.dataset||(scope.dataset=[]),scope.options||(scope.options={legend:{show:!1}}),(plotArea=$(element.children()[0])).css({width:width,height:height}),init=function(){var plotObj;return plotObj=$.plot(plotArea,scope.dataset,scope.options),scope.callback&&scope.callback(plotObj),plotObj},onDatasetChanged=function(dataset){return plot?(plot.setData(dataset),plot.setupGrid(),plot.draw()):plot=init()},scope.$watch("dataset",onDatasetChanged,!0),onOptionsChanged=function(){return plot=init()},scope.$watch("options",onOptionsChanged,!0)}}}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMvZmxvdC9hbmd1bGFyLWZsb3QuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImRpcmVjdGl2ZSIsInJlc3RyaWN0IiwidGVtcGxhdGUiLCJzY29wZSIsImRhdGFzZXQiLCJvcHRpb25zIiwiY2FsbGJhY2siLCJsaW5rIiwiZWxlbWVudCIsImF0dHJpYnV0ZXMiLCJoZWlnaHQiLCJpbml0Iiwib25EYXRhc2V0Q2hhbmdlZCIsIm9uT3B0aW9uc0NoYW5nZWQiLCJwbG90IiwicGxvdEFyZWEiLCJ3aWR0aCIsIl9yZWYiLCJfcmVmMSIsImxlZ2VuZCIsImNvbnRhaW5lciIsImpRdWVyeSIsInNob3ciLCIkIiwiY2hpbGRyZW4iLCJjc3MiLCJwbG90T2JqIiwic2V0RGF0YSIsInNldHVwR3JpZCIsImRyYXciLCIkd2F0Y2giXSwibWFwcGluZ3MiOiJBQUNBQSxRQUFRQyxPQUFPLGVBQWdCLElBQUlDLFVBQVUsUUFBUSxXQUNqRCxNQUFPLENBQ0hDLFNBQVUsS0FDVkMsU0FBVSxjQUNWQyxNQUFPLENBQ0hDLFFBQVMsSUFDVEMsUUFBUyxJQUNUQyxTQUFVLEtBRWRDLEtBQU0sU0FBU0osTUFBT0ssUUFBU0MsWUFDM0IsSUFBSUMsT0FBUUMsS0FBTUMsaUJBQWtCQyxpQkFBa0JDLEtBQU1DLFNBQVVDLE1BQU9DLEtBQU1DLE1BSW5GLEdBSEFKLEtBQU8sS0FDUEUsTUFBUVAsV0FBV08sT0FBUyxPQUM1Qk4sT0FBU0QsV0FBV0MsUUFBVSxRQUNDLE9BQXpCTyxLQUFPZCxNQUFNRSxVQUE0QyxPQUF4QmEsTUFBUUQsS0FBS0UsUUFBa0JELE1BQU1FLGVBQXFCLGFBQW1CQyxPQUNoSCxLQUFNLDRFQXNDVixPQXBDS2xCLE1BQU1DLFVBQ1BELE1BQU1DLFFBQVUsSUFFZkQsTUFBTUUsVUFDUEYsTUFBTUUsUUFBVSxDQUNaYyxPQUFRLENBQ0pHLE1BQU0sTUFJbEJQLFNBQVdRLEVBQUVmLFFBQVFnQixXQUFXLEtBQ3ZCQyxJQUFJLENBQ1RULE1BQU9BLE1BQ1BOLE9BQVFBLFNBRVpDLEtBQU8sV0FDSCxJQUFJZSxRQUtKLE9BSkFBLFFBQVVILEVBQUVULEtBQUtDLFNBQVVaLE1BQU1DLFFBQVNELE1BQU1FLFNBQzVDRixNQUFNRyxVQUNOSCxNQUFNRyxTQUFTb0IsU0FFWkEsU0FFWGQsaUJBQW1CLFNBQVNSLFNBQ3hCLE9BQUlVLE1BQ0FBLEtBQUthLFFBQVF2QixTQUNiVSxLQUFLYyxZQUNFZCxLQUFLZSxRQUVMZixLQUFPSCxRQUd0QlIsTUFBTTJCLE9BQU8sVUFBV2xCLGtCQUFrQixHQUMxQ0MsaUJBQW1CLFdBQ2YsT0FBT0MsS0FBT0gsUUFFWFIsTUFBTTJCLE9BQU8sVUFBV2pCLGtCQUFrQiIsImZpbGUiOiJwbHVnaW5zL2Zsb3QvYW5ndWxhci1mbG90LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjguMFxuYW5ndWxhci5tb2R1bGUoJ2FuZ3VsYXItZmxvdCcsIFtdKS5kaXJlY3RpdmUoJ2Zsb3QnLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgICAgdGVtcGxhdGU6ICc8ZGl2PjwvZGl2PicsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICBkYXRhc2V0OiAnPScsXG4gICAgICAgICAgICBvcHRpb25zOiAnPScsXG4gICAgICAgICAgICBjYWxsYmFjazogJz0nXG4gICAgICAgIH0sXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICB2YXIgaGVpZ2h0LCBpbml0LCBvbkRhdGFzZXRDaGFuZ2VkLCBvbk9wdGlvbnNDaGFuZ2VkLCBwbG90LCBwbG90QXJlYSwgd2lkdGgsIF9yZWYsIF9yZWYxO1xuICAgICAgICAgICAgcGxvdCA9IG51bGw7XG4gICAgICAgICAgICB3aWR0aCA9IGF0dHJpYnV0ZXMud2lkdGggfHwgJzEwMCUnO1xuICAgICAgICAgICAgaGVpZ2h0ID0gYXR0cmlidXRlcy5oZWlnaHQgfHwgJzEwMCUnO1xuICAgICAgICAgICAgaWYgKCgoX3JlZiA9IHNjb3BlLm9wdGlvbnMpICE9IG51bGwgPyAoX3JlZjEgPSBfcmVmLmxlZ2VuZCkgIT0gbnVsbCA/IF9yZWYxLmNvbnRhaW5lciA6IHZvaWQgMCA6IHZvaWQgMCkgaW5zdGFuY2VvZiBqUXVlcnkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyAnUGxlYXNlIHVzZSBhIGpRdWVyeSBleHByZXNzaW9uIHN0cmluZyB3aXRoIHRoZSBcImxlZ2VuZC5jb250YWluZXJcIiBvcHRpb24uJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghc2NvcGUuZGF0YXNldCkge1xuICAgICAgICAgICAgICAgIHNjb3BlLmRhdGFzZXQgPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghc2NvcGUub3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHNjb3BlLm9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwbG90QXJlYSA9ICQoZWxlbWVudC5jaGlsZHJlbigpWzBdKTtcbiAgICAgICAgICAgIHBsb3RBcmVhLmNzcyh7XG4gICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgICAgIGhlaWdodDogaGVpZ2h0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGxvdE9iajtcbiAgICAgICAgICAgICAgICBwbG90T2JqID0gJC5wbG90KHBsb3RBcmVhLCBzY29wZS5kYXRhc2V0LCBzY29wZS5vcHRpb25zKTtcbiAgICAgICAgICAgICAgICBpZiAoc2NvcGUuY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgc2NvcGUuY2FsbGJhY2socGxvdE9iaik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBwbG90T2JqO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIG9uRGF0YXNldENoYW5nZWQgPSBmdW5jdGlvbihkYXRhc2V0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHBsb3QpIHtcbiAgICAgICAgICAgICAgICAgICAgcGxvdC5zZXREYXRhKGRhdGFzZXQpO1xuICAgICAgICAgICAgICAgICAgICBwbG90LnNldHVwR3JpZCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGxvdC5kcmF3KCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBsb3QgPSBpbml0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHNjb3BlLiR3YXRjaCgnZGF0YXNldCcsIG9uRGF0YXNldENoYW5nZWQsIHRydWUpO1xuICAgICAgICAgICAgb25PcHRpb25zQ2hhbmdlZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwbG90ID0gaW5pdCgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBzY29wZS4kd2F0Y2goJ29wdGlvbnMnLCBvbk9wdGlvbnNDaGFuZ2VkLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH07XG59KTtcbiJdfQ==
